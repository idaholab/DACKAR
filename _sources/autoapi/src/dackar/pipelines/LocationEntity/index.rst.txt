src.dackar.pipelines.LocationEntity
===================================

.. py:module:: src.dackar.pipelines.LocationEntity


Attributes
----------

.. autoapisummary::

   src.dackar.pipelines.LocationEntity.logger


Classes
-------

.. autoapisummary::

   src.dackar.pipelines.LocationEntity.LocationEntity


Functions
---------

.. autoapisummary::

   src.dackar.pipelines.LocationEntity.create_location_component


Module Contents
---------------

.. py:data:: logger

.. py:function:: create_location_component(nlp, name, patterns)

.. py:class:: LocationEntity(nlp, patterns=None, callback=None)

   Bases: :py:obj:`object`


   How to use it:

   .. code-block:: python

     from LocationEntity import LocationEntity
     nlp = spacy.load("en_core_web_sm")
     patterns = {'label': 'location', 'pattern': [{'LOWER': 'follow'}], 'id': 'location'}
     cmatcher = ConjectureEntity(nlp, patterns)
     doc = nlp("It is close to 5pm.")
     updatedDoc = cmatcher(doc)

   or:

   .. code-block:: python

     nlp.add_pipe('location_entity', config={"patterns": {'label': 'location', 'pattern': [{'LOWER': 'follow'}], 'id': 'location'}})
     newDoc = nlp(doc.text)


   .. py:attribute:: name
      :value: 'location_entity'



   .. py:attribute:: entityRuler


   .. py:method:: __call__(doc)

      :param doc: spacy.tokens.doc.Doc, the processed document using nlp pipelines



