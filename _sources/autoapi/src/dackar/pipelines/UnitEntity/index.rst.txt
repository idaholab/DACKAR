src.dackar.pipelines.UnitEntity
===============================

.. py:module:: src.dackar.pipelines.UnitEntity


Attributes
----------

.. autoapisummary::

   src.dackar.pipelines.UnitEntity.logger


Classes
-------

.. autoapisummary::

   src.dackar.pipelines.UnitEntity.UnitEntity


Functions
---------

.. autoapisummary::

   src.dackar.pipelines.UnitEntity.create_unit_component


Module Contents
---------------

.. py:data:: logger

.. py:function:: create_unit_component(nlp, name)

.. py:class:: UnitEntity(nlp)

   Bases: :py:obj:`object`


   Unit Entity Recognition class

   How to use it:

   .. code-block:: python

     from UnitEntity import UnitEntity
     nlp = spacy.load("en_core_web_sm")
     unit = UnitEntity(nlp, 'ssc')
     doc = nlp("The shaft deflection is causing the safety cage to rattle. Pumps not experiencing enough flow for the pumps to keep the check valves open during test. Pump not experiencing enough flow during test. Shaft made noise. Vibration seems like it is coming from the shaft.")
     updatedDoc = unit(doc)

   or:

   .. code-block:: python

     nlp.add_pipe('unit_entity', config={"label": "ssc", "asSpan":True})
     newDoc = nlp(doc.text)


   .. py:attribute:: name
      :value: 'unit_entity'



   .. py:attribute:: label
      :value: 'unit'



   .. py:attribute:: nlp


   .. py:method:: __call__(doc)

      :param doc: spacy.tokens.doc.Doc, the processed document using nlp pipelines



