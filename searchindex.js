Search.setIndex({"alltitles": {"1. Set up the path, so that the NLP modules can be found": [[47, "1.-Set-up-the-path,-so-that-the-NLP-modules-can-be-found"]], "10. Process raw string data using matcher": [[47, "10.-Process-raw-string-data-using-matcher"]], "11. Access processed information from matcher": [[47, "11.-Access-processed-information-from-matcher"]], "2. Load Spacy module": [[47, "2.-Load-Spacy-module"]], "3. Load other modules": [[47, "3.-Load-other-modules"]], "4. Import NLP modules": [[47, "4.-Import-NLP-modules"]], "5. Set up logging": [[47, "5.-Set-up-logging"]], "6. Read and process entities": [[47, "6.-Read-and-process-entities"]], "7. Read and process causal keywords": [[47, "7.-Read-and-process-causal-keywords"]], "8. Create Rule-based matcher with entity list and causal entity list": [[47, "8.-Create-Rule-based-matcher-with-entity-list-and-causal-entity-list"]], "9. Read input text file, or users can provide a raw string": [[47, "9.-Read-input-text-file,-or-users-can-provide-a-raw-string"]], "API Reference": [[0, null]], "Abbreviation Handling": [[45, "Abbreviation-Handling"]], "Abbreviation handler demo": [[50, null]], "Abbreviation handling class": [[50, "Abbreviation-handling-class"]], "Add a pipeline to label ID: a combination of characters and numbers": [[45, "Add-a-pipeline-to-label-ID:-a-combination-of-characters-and-numbers"]], "Add a pipeline to label work order ID: \u2018wo 103\u2019 or \u2018wo103\u2019": [[45, "Add-a-pipeline-to-label-work-order-ID:-'wo-103'-or-'wo103'"]], "Attributes": [[1, "attributes"], [2, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [9, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [15, "attributes"], [16, "attributes"], [18, "attributes"], [22, "attributes"], [23, "attributes"], [30, "attributes"], [34, "attributes"], [35, "attributes"], [36, "attributes"], [37, "attributes"], [38, "attributes"]], "Autocorrect: Add any additional words to dictionary": [[46, "Autocorrect:-Add-any-additional-words-to-dictionary"]], "Autocorrect: Find acronyms or unexpected misspelled words": [[46, "Autocorrect:-Find-acronyms-or-unexpected-misspelled-words"]], "Autocorrect: Get automatically corrected text": [[46, "Autocorrect:-Get-automatically-corrected-text"]], "Autocorrect: Setup": [[46, "Autocorrect:-Setup"]], "Classes": [[5, "classes"], [6, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [18, "classes"], [22, "classes"], [23, "classes"], [26, "classes"], [28, "classes"], [32, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"]], "Coherent text example with Autocorrect and ContextualSpellCheck spelling correction": [[46, "Coherent-text-example-with-Autocorrect-and-ContextualSpellCheck-spelling-correction"]], "Combining into a pipeline": [[57, "Combining-into-a-pipeline"]], "Contents:": [[42, null]], "ContextualSpellCheck: Add any additional words to dictionary": [[46, "ContextualSpellCheck:-Add-any-additional-words-to-dictionary"]], "ContextualSpellCheck: Find acronyms or unexpected misspelled words": [[46, "ContextualSpellCheck:-Find-acronyms-or-unexpected-misspelled-words"]], "ContextualSpellCheck: Get automatically corrected text": [[46, "ContextualSpellCheck:-Get-automatically-corrected-text"]], "ContextualSpellCheck: Setup": [[46, "ContextualSpellCheck:-Setup"]], "Contributions": [[42, "contributions"]], "Contributors": [[41, null]], "Coreferee Resolution: require spacy>=3.1.0,<3.2.0": [[53, "Coreferee-Resolution:-require-spacy>=3.1.0,<3.2.0"]], "Correct the doc": [[49, "Correct-the-doc"]], "Create rule-based matcher with entity list and causal entity list": [[49, "Create-rule-based-matcher-with-entity-list-and-causal-entity-list"]], "Custom pipelines": [[54, null]], "Demo For NLP Workflow: Based on branch wangc/nlp": [[49, null]], "Demo for Rule Based Natural Language Processing": [[47, null]], "Developers:": [[58, "developers"]], "Different approach when there is an issue with SSLError": [[43, "different-approach-when-there-is-an-issue-with-sslerror"], [43, "id1"], [44, "different-approach-when-there-is-an-issue-with-sslerror"]], "Download language model from spacy": [[43, "download-language-model-from-spacy"], [44, "download-language-model-from-spacy"]], "Emergent Activity Analysis demo": [[45, null]], "Example from https://github.com/blueprints-for-text-analytics-python/blueprints-text/blob/master/ch12/Knowledge_Graph.ipynb": [[53, "Example-from-https://github.com/blueprints-for-text-analytics-python/blueprints-text/blob/master/ch12/Knowledge_Graph.ipynb"]], "Example that can be used for Relation Extraction after Named Entity Recognizer": [[53, null]], "First do text preprocessing": [[46, "First-do-text-preprocessing"]], "Functions": [[3, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [20, "functions"], [21, "functions"], [26, "functions"], [30, "functions"], [32, "functions"], [34, "functions"]], "Generate patterns that can be used in NER": [[49, "Generate-patterns-that-can-be-used-in-NER"]], "How to install dependency libraries": [[43, "how-to-install-dependency-libraries"], [44, "how-to-install-dependency-libraries"]], "Indices and tables": [[42, "indices-and-tables"]], "Initialize variables": [[49, "Initialize-variables"]], "Installation with Spacy 3.1 (Archived)": [[43, null]], "Installation with Spacy 3.5": [[44, null]], "License": [[42, "license"]], "Load entity list and causal list or provide directly": [[49, "Load-entity-list-and-causal-list-or-provide-directly"]], "Module Contents": [[3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [26, "module-contents"], [28, "module-contents"], [30, "module-contents"], [32, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"]], "Normalize bullet points": [[57, "Normalize-bullet-points"]], "Normalize hyphenated words": [[57, "Normalize-hyphenated-words"]], "Normalize quotation marks": [[57, "Normalize-quotation-marks"]], "Normalize repeating characters": [[57, "Normalize-repeating-characters"]], "Normalize unicode": [[57, "Normalize-unicode"]], "Normalize whitespace": [[57, "Normalize-whitespace"]], "Package Contents": [[1, "package-contents"], [2, "package-contents"]], "Pipeline creation": [[45, "Pipeline-creation"], [46, "Pipeline-creation"]], "Preprocessing demo": [[46, null]], "PySpellChecker": [[46, "PySpellChecker"]], "Read raw text data and preprocess it": [[49, "Read-raw-text-data-and-preprocess-it"]], "Remove HTML tags": [[57, "Remove-HTML-tags"]], "Remove accents": [[57, "Remove-accents"]], "Remove brackets": [[57, "Remove-brackets"]], "Remove punctuation": [[57, "Remove-punctuation"]], "Replace URLs": [[57, "Replace-URLs"]], "Replace currency symbols": [[57, "Replace-currency-symbols"]], "Replace email addresses": [[57, "Replace-email-addresses"]], "Replace emoji": [[57, "Replace-emoji"]], "Replace hashtags": [[57, "Replace-hashtags"]], "Replace numbers": [[57, "Replace-numbers"]], "Replace phone numbers": [[57, "Replace-phone-numbers"]], "Replace user handles": [[57, "Replace-user-handles"]], "Required libraries and nltk data for similarity analysis": [[43, "required-libraries-and-nltk-data-for-similarity-analysis"]], "Required library for preprocessing": [[43, "required-library-for-preprocessing"]], "Required nltk data for similarity analysis": [[44, "required-nltk-data-for-similarity-analysis"]], "Set Paths and Loading Required Modules": [[49, "Set-Paths-and-Loading-Required-Modules"]], "Similarity analysis": [[56, null]], "Submodules": [[2, "submodules"], [4, "submodules"], [17, "submodules"], [19, "submodules"], [24, "submodules"], [25, "submodules"], [27, "submodules"], [29, "submodules"], [33, "submodules"], [39, "submodules"], [40, "submodules"]], "Support": [[58, null]], "Text example": [[45, "Text-example"]], "Text to clean and numerize": [[46, "Text-to-clean-and-numerize"]], "Time Autocorrect workflow": [[46, "Time-Autocorrect-workflow"]], "Time ContextualSpellCheck workflow": [[46, "Time-ContextualSpellCheck-workflow"]], "Timing for performance": [[56, "Timing-for-performance"]], "Usage Notebooks": [[52, null]], "Welcome to DACKAR\u2019s documentation!": [[42, null]], "Windows machine have an issue with pydantic": [[43, "windows-machine-have-an-issue-with-pydantic"]], "You may need to install stemming for some of unit parsing": [[43, "you-may-need-to-install-stemming-for-some-of-unit-parsing"]], "chains and mentions can be navigated much as if they were lists": [[53, "chains-and-mentions-can-be-navigated-much-as-if-they-were-lists"]], "numerizer Acting on Strings": [[55, "numerizer-Acting-on-Strings"]], "numerizer Optional Arguments": [[55, "numerizer-Optional-Arguments"]], "numerizer Preprocessing": [[55, null]], "numerizer as SpaCy Extenstion": [[55, "numerizer-as-SpaCy-Extenstion"]], "src": [[40, null]], "src.dackar": [[2, null]], "src.dackar.config": [[1, null]], "src.dackar.knowledge_graph": [[4, null]], "src.dackar.knowledge_graph.graph_utils": [[3, null]], "src.dackar.knowledge_graph.py2neo": [[5, null]], "src.dackar.pipelines": [[17, null]], "src.dackar.pipelines.ConjectureEntity": [[6, null]], "src.dackar.pipelines.CustomPipelineComponents": [[7, null]], "src.dackar.pipelines.EmergentActivityEntity": [[8, null]], "src.dackar.pipelines.GeneralEntity": [[9, null]], "src.dackar.pipelines.LocationEntity": [[10, null]], "src.dackar.pipelines.PhraseEntityMatcher": [[11, null]], "src.dackar.pipelines.SimpleEntityMatcher": [[12, null]], "src.dackar.pipelines.TemporalAttributeEntity": [[13, null]], "src.dackar.pipelines.TemporalEntity": [[14, null]], "src.dackar.pipelines.TemporalRelationEntity": [[15, null]], "src.dackar.pipelines.UnitEntity": [[16, null]], "src.dackar.similarity": [[19, null]], "src.dackar.similarity.SentenceSimilarity": [[18, null]], "src.dackar.similarity.simUtils": [[20, null]], "src.dackar.similarity.synsetUtils": [[21, null]], "src.dackar.text_processing": [[24, null]], "src.dackar.text_processing.Abbreviation": [[22, null]], "src.dackar.text_processing.Preprocessing": [[23, null]], "src.dackar.utils": [[25, null]], "src.dackar.utils.mbse": [[27, null]], "src.dackar.utils.mbse.LMLparser": [[26, null]], "src.dackar.utils.nlp": [[29, null]], "src.dackar.utils.nlp.CreatePatterns": [[28, null]], "src.dackar.utils.nlp.nlp_utils": [[30, null]], "src.dackar.utils.num": [[31, null]], "src.dackar.utils.opm": [[33, null]], "src.dackar.utils.opm.OPLparser": [[32, null]], "src.dackar.utils.utils": [[34, null]], "src.dackar.workflows": [[39, null]], "src.dackar.workflows.OperatorShiftLogsProcessing": [[35, null]], "src.dackar.workflows.RuleBasedMatcher": [[36, null]], "src.dackar.workflows.WorkOrderProcessing": [[37, null]], "src.dackar.workflows.WorkflowBase": [[38, null]], "textacy Preprocessing Methods for NLP": [[57, null]]}, "docnames": ["autoapi/index", "autoapi/src/dackar/config/index", "autoapi/src/dackar/index", "autoapi/src/dackar/knowledge_graph/graph_utils/index", "autoapi/src/dackar/knowledge_graph/index", "autoapi/src/dackar/knowledge_graph/py2neo/index", "autoapi/src/dackar/pipelines/ConjectureEntity/index", "autoapi/src/dackar/pipelines/CustomPipelineComponents/index", "autoapi/src/dackar/pipelines/EmergentActivityEntity/index", "autoapi/src/dackar/pipelines/GeneralEntity/index", "autoapi/src/dackar/pipelines/LocationEntity/index", "autoapi/src/dackar/pipelines/PhraseEntityMatcher/index", "autoapi/src/dackar/pipelines/SimpleEntityMatcher/index", "autoapi/src/dackar/pipelines/TemporalAttributeEntity/index", "autoapi/src/dackar/pipelines/TemporalEntity/index", "autoapi/src/dackar/pipelines/TemporalRelationEntity/index", "autoapi/src/dackar/pipelines/UnitEntity/index", "autoapi/src/dackar/pipelines/index", "autoapi/src/dackar/similarity/SentenceSimilarity/index", "autoapi/src/dackar/similarity/index", "autoapi/src/dackar/similarity/simUtils/index", "autoapi/src/dackar/similarity/synsetUtils/index", "autoapi/src/dackar/text_processing/Abbreviation/index", "autoapi/src/dackar/text_processing/Preprocessing/index", "autoapi/src/dackar/text_processing/index", "autoapi/src/dackar/utils/index", "autoapi/src/dackar/utils/mbse/LMLparser/index", "autoapi/src/dackar/utils/mbse/index", "autoapi/src/dackar/utils/nlp/CreatePatterns/index", "autoapi/src/dackar/utils/nlp/index", "autoapi/src/dackar/utils/nlp/nlp_utils/index", "autoapi/src/dackar/utils/num/index", "autoapi/src/dackar/utils/opm/OPLparser/index", "autoapi/src/dackar/utils/opm/index", "autoapi/src/dackar/utils/utils/index", "autoapi/src/dackar/workflows/OperatorShiftLogsProcessing/index", "autoapi/src/dackar/workflows/RuleBasedMatcher/index", "autoapi/src/dackar/workflows/WorkOrderProcessing/index", "autoapi/src/dackar/workflows/WorkflowBase/index", "autoapi/src/dackar/workflows/index", "autoapi/src/index", "contributors", "index", "install", "install_spacy3.5", "notebooks/EmergentActivity_Processing", "notebooks/PreprocessingDemo", "notebooks/RuleBasedNLP", "notebooks/WorkOrderProcessing", "notebooks/Workflow_Demo", "notebooks/abbreviationHandlerDemo", "notebooks/alias_demo", "notebooks/index", "notebooks/nlp", "notebooks/nlp_custom_pipes", "notebooks/numerizerPreprocessing", "notebooks/test_synset_similarity", "notebooks/textacyPreprocessingMethods", "support"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["autoapi/index.rst", "autoapi/src/dackar/config/index.rst", "autoapi/src/dackar/index.rst", "autoapi/src/dackar/knowledge_graph/graph_utils/index.rst", "autoapi/src/dackar/knowledge_graph/index.rst", "autoapi/src/dackar/knowledge_graph/py2neo/index.rst", "autoapi/src/dackar/pipelines/ConjectureEntity/index.rst", "autoapi/src/dackar/pipelines/CustomPipelineComponents/index.rst", "autoapi/src/dackar/pipelines/EmergentActivityEntity/index.rst", "autoapi/src/dackar/pipelines/GeneralEntity/index.rst", "autoapi/src/dackar/pipelines/LocationEntity/index.rst", "autoapi/src/dackar/pipelines/PhraseEntityMatcher/index.rst", "autoapi/src/dackar/pipelines/SimpleEntityMatcher/index.rst", "autoapi/src/dackar/pipelines/TemporalAttributeEntity/index.rst", "autoapi/src/dackar/pipelines/TemporalEntity/index.rst", "autoapi/src/dackar/pipelines/TemporalRelationEntity/index.rst", "autoapi/src/dackar/pipelines/UnitEntity/index.rst", "autoapi/src/dackar/pipelines/index.rst", "autoapi/src/dackar/similarity/SentenceSimilarity/index.rst", "autoapi/src/dackar/similarity/index.rst", "autoapi/src/dackar/similarity/simUtils/index.rst", "autoapi/src/dackar/similarity/synsetUtils/index.rst", "autoapi/src/dackar/text_processing/Abbreviation/index.rst", "autoapi/src/dackar/text_processing/Preprocessing/index.rst", "autoapi/src/dackar/text_processing/index.rst", "autoapi/src/dackar/utils/index.rst", "autoapi/src/dackar/utils/mbse/LMLparser/index.rst", "autoapi/src/dackar/utils/mbse/index.rst", "autoapi/src/dackar/utils/nlp/CreatePatterns/index.rst", "autoapi/src/dackar/utils/nlp/index.rst", "autoapi/src/dackar/utils/nlp/nlp_utils/index.rst", "autoapi/src/dackar/utils/num/index.rst", "autoapi/src/dackar/utils/opm/OPLparser/index.rst", "autoapi/src/dackar/utils/opm/index.rst", "autoapi/src/dackar/utils/utils/index.rst", "autoapi/src/dackar/workflows/OperatorShiftLogsProcessing/index.rst", "autoapi/src/dackar/workflows/RuleBasedMatcher/index.rst", "autoapi/src/dackar/workflows/WorkOrderProcessing/index.rst", "autoapi/src/dackar/workflows/WorkflowBase/index.rst", "autoapi/src/dackar/workflows/index.rst", "autoapi/src/index.rst", "contributors.rst", "index.rst", "install.rst", "install_spacy3.5.rst", "notebooks/EmergentActivity_Processing.ipynb", "notebooks/PreprocessingDemo.ipynb", "notebooks/RuleBasedNLP.ipynb", "notebooks/WorkOrderProcessing.ipynb", "notebooks/Workflow_Demo.ipynb", "notebooks/abbreviationHandlerDemo.ipynb", "notebooks/alias_demo.ipynb", "notebooks/index.rst", "notebooks/nlp.ipynb", "notebooks/nlp_custom_pipes.ipynb", "notebooks/numerizerPreprocessing.ipynb", "notebooks/test_synset_similarity.ipynb", "notebooks/textacyPreprocessingMethods.ipynb", "support.rst"], "indexentries": {"_ (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "id0", false], [7, "id1", false], [7, "src.dackar.pipelines.CustomPipelineComponents._", false]], "__call__() (src.dackar.pipelines.conjectureentity.conjectureentity method)": [[6, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity.__call__", false]], "__call__() (src.dackar.pipelines.emergentactivityentity.emergentactivity method)": [[8, "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity.__call__", false]], "__call__() (src.dackar.pipelines.generalentity.generalentity method)": [[9, "src.dackar.pipelines.GeneralEntity.GeneralEntity.__call__", false]], "__call__() (src.dackar.pipelines.locationentity.locationentity method)": [[10, "src.dackar.pipelines.LocationEntity.LocationEntity.__call__", false]], "__call__() (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher method)": [[11, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.__call__", false]], "__call__() (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher method)": [[12, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.__call__", false]], "__call__() (src.dackar.pipelines.temporalattributeentity.temporalattributeentity method)": [[13, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity.__call__", false]], "__call__() (src.dackar.pipelines.temporalentity.temporal method)": [[14, "src.dackar.pipelines.TemporalEntity.Temporal.__call__", false]], "__call__() (src.dackar.pipelines.temporalrelationentity.temporalrelationentity method)": [[15, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity.__call__", false]], "__call__() (src.dackar.pipelines.unitentity.unitentity method)": [[16, "src.dackar.pipelines.UnitEntity.UnitEntity.__call__", false]], "__call__() (src.dackar.text_processing.preprocessing.preprocessing method)": [[23, "src.dackar.text_processing.Preprocessing.Preprocessing.__call__", false]], "__call__() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.__call__", false]], "__driver (src.dackar.knowledge_graph.py2neo.py2neo attribute)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.__driver", false]], "__pwd (src.dackar.knowledge_graph.py2neo.py2neo attribute)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.__pwd", false]], "__uri (src.dackar.knowledge_graph.py2neo.py2neo attribute)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.__uri", false]], "__user (src.dackar.knowledge_graph.py2neo.py2neo attribute)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.__user", false]], "__version__ (in module src.dackar)": [[2, "src.dackar.__version__", false]], "_allrelpairs (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._allRelPairs", false]], "_allrelpairs (src.dackar.workflows.workorderprocessing.workorderprocessing attribute)": [[37, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing._allRelPairs", false]], "_causalfile (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalFile", false]], "_causalkeywordid (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalKeywordID", false]], "_causalkeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalKeywords", false]], "_causalnames (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalNames", false]], "_causalpos (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalPOS", false]], "_causalsentsnoents (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalSentsNoEnts", false]], "_causalsentsoneent (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalSentsOneEnt", false]], "_conjecturefile (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._conjectureFile", false]], "_conjecturekeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._conjectureKeywords", false]], "_coref (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._coref", false]], "_corefavail (in module src.dackar.workflows.workflowbase)": [[38, "src.dackar.workflows.WorkflowBase._corefAvail", false]], "_create_node() (src.dackar.knowledge_graph.py2neo.py2neo static method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo._create_node", false]], "_create_relation() (src.dackar.knowledge_graph.py2neo.py2neo static method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo._create_relation", false]], "_doc (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._doc", false]], "_enths (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._entHS", false]], "_entid (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._entID", false]], "_entitylabels (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._entityLabels", false]], "_entityruler (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._entityRuler", false]], "_entityrulermatches (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._entityRulerMatches", false]], "_entstatus (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._entStatus", false]], "_extractedcausals (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._extractedCausals", false]], "_extractedinfonames (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._extractedInfoNames", false]], "_find_nodes() (src.dackar.knowledge_graph.py2neo.py2neo static method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo._find_nodes", false]], "_get_all() (src.dackar.knowledge_graph.py2neo.py2neo static method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo._get_all", false]], "_load_csv_for_relations() (src.dackar.knowledge_graph.py2neo.py2neo static method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo._load_csv_for_relations", false]], "_load_csv_nodes() (src.dackar.knowledge_graph.py2neo.py2neo static method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo._load_csv_nodes", false]], "_matchedsents (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._matchedSents", false]], "_matchedsentsforvis (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._matchedSentsForVis", false]], "_objlist (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._objList", false]], "_rawcausallist (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._rawCausalList", false]], "_relationnames (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._relationNames", false]], "_relationnames (src.dackar.workflows.workorderprocessing.workorderprocessing attribute)": [[37, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing._relationNames", false]], "_reset() (src.dackar.knowledge_graph.py2neo.py2neo static method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo._reset", false]], "_screen (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._screen", false]], "_statusfile (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._statusFile", false]], "_statuskeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._statusKeywords", false]], "_subjlist (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._subjList", false]], "_textprocess (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._textProcess", false]], "_updatecausalkeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._updateCausalKeywords", false]], "_updatestatuskeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._updateStatusKeywords", false]], "_visualizematchedsents (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase._visualizeMatchedSents", false]], "abbrdict (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[23, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrDict", false]], "abbreviation (class in src.dackar.text_processing.abbreviation)": [[22, "src.dackar.text_processing.Abbreviation.Abbreviation", false]], "abbreviationsub() (src.dackar.text_processing.abbreviation.abbreviation method)": [[22, "src.dackar.text_processing.Abbreviation.Abbreviation.abbreviationSub", false]], "abbrexpander (class in src.dackar.text_processing.preprocessing)": [[23, "src.dackar.text_processing.Preprocessing.AbbrExpander", false]], "abbrlist (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[23, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrList", false]], "abbrprocess() (src.dackar.text_processing.preprocessing.abbrexpander method)": [[23, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrProcess", false]], "abbrtype (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[23, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrType", false]], "acronyms (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.acronyms", false]], "acronyms (src.dackar.utils.opm.oplparser.opmobject attribute)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.acronyms", false]], "addentitypattern() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.addEntityPattern", false]], "addkeywords() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.addKeywords", false]], "addkeywords() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[37, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.addKeywords", false]], "addwordstodictionary() (src.dackar.text_processing.preprocessing.spellchecker method)": [[23, "src.dackar.text_processing.Preprocessing.SpellChecker.addWordsToDictionary", false]], "aliaslookup (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.aliasLookup", false]], "aliasresolver() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.aliasResolver", false]], "anaphorcoref() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.anaphorCoref", false]], "anaphorentcoref() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.anaphorEntCoref", false]], "asspan (src.dackar.pipelines.emergentactivityentity.emergentactivity attribute)": [[8, "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity.asSpan", false]], "asspan (src.dackar.pipelines.generalentity.generalentity attribute)": [[9, "src.dackar.pipelines.GeneralEntity.GeneralEntity.asSpan", false]], "asspan (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher attribute)": [[11, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.asSpan", false]], "asspan (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher attribute)": [[12, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.asSpan", false]], "asspan (src.dackar.pipelines.temporalentity.temporal attribute)": [[14, "src.dackar.pipelines.TemporalEntity.Temporal.asSpan", false]], "asspan (src.dackar.pipelines.unitentity.unitentity attribute)": [[16, "src.dackar.pipelines.UnitEntity.UnitEntity.asSpan", false]], "bfs() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.bfs", false]], "brownic (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.brownIc", false]], "browninfo() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.brownInfo", false]], "checkacronym() (in module src.dackar.utils.opm.oplparser)": [[32, "src.dackar.utils.opm.OPLparser.checkAcronym", false]], "checker (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[23, "src.dackar.text_processing.Preprocessing.AbbrExpander.checker", false]], "checker (src.dackar.text_processing.preprocessing.spellchecker attribute)": [[23, "src.dackar.text_processing.Preprocessing.SpellChecker.checker", false]], "checkertype (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[23, "src.dackar.text_processing.Preprocessing.AbbrExpander.checkerType", false]], "cleanedgraph() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.cleanedGraph", false]], "close() (src.dackar.knowledge_graph.py2neo.py2neo method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.close", false]], "collectcauseeffectsents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.collectCauseEffectSents", false]], "collectextactedcausals() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.collectExtactedCausals", false]], "collectsents() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.collectSents", false]], "configfilename (in module src.dackar.config)": [[1, "src.dackar.config.configFileName", false]], "conjectureentity (class in src.dackar.pipelines.conjectureentity)": [[6, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity", false]], "connetgraph() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.connetGraph", false]], "constructsemanticvector() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.constructSemanticVector", false]], "constructsemanticvector() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.constructSemanticVector", false]], "constructsemanticvectorusingdisambiguatedsynsets() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.constructSemanticVectorUsingDisambiguatedSynsets", false]], "constructsimilarityvectorpawarmagomethod() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.constructSimilarityVectorPawarMagoMethod", false]], "constructsynsetordervector() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.constructSynsetOrderVector", false]], "constructwordordervector() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.constructWordOrderVector", false]], "content() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.content", false]], "convertsentstosynsets() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.convertSentsToSynsets", false]], "convertsentstosynsetswithdisambiguation() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.convertSentsToSynsetsWithDisambiguation", false]], "converttosynsets() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.convertToSynsets", false]], "correct() (src.dackar.text_processing.preprocessing.spellchecker method)": [[23, "src.dackar.text_processing.Preprocessing.SpellChecker.correct", false]], "create_conjecture_component() (in module src.dackar.pipelines.conjectureentity)": [[6, "src.dackar.pipelines.ConjectureEntity.create_conjecture_component", false]], "create_emergent_activity() (in module src.dackar.pipelines.emergentactivityentity)": [[8, "src.dackar.pipelines.EmergentActivityEntity.create_emergent_activity", false]], "create_general_component() (in module src.dackar.pipelines.generalentity)": [[9, "src.dackar.pipelines.GeneralEntity.create_general_component", false]], "create_location_component() (in module src.dackar.pipelines.locationentity)": [[10, "src.dackar.pipelines.LocationEntity.create_location_component", false]], "create_node() (src.dackar.knowledge_graph.py2neo.py2neo method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.create_node", false]], "create_phrase_matcher_component() (in module src.dackar.pipelines.phraseentitymatcher)": [[11, "src.dackar.pipelines.PhraseEntityMatcher.create_phrase_matcher_component", false]], "create_relation() (src.dackar.knowledge_graph.py2neo.py2neo method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.create_relation", false]], "create_simple_matcher_component() (in module src.dackar.pipelines.simpleentitymatcher)": [[12, "src.dackar.pipelines.SimpleEntityMatcher.create_simple_matcher_component", false]], "create_temporal_attribute_component() (in module src.dackar.pipelines.temporalattributeentity)": [[13, "src.dackar.pipelines.TemporalAttributeEntity.create_temporal_attribute_component", false]], "create_temporal_relation_component() (in module src.dackar.pipelines.temporalrelationentity)": [[15, "src.dackar.pipelines.TemporalRelationEntity.create_temporal_relation_component", false]], "create_unit_component() (in module src.dackar.pipelines.unitentity)": [[16, "src.dackar.pipelines.UnitEntity.create_unit_component", false]], "createpatterns (class in src.dackar.utils.nlp.createpatterns)": [[28, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns", false]], "createtextacynormalizefunction() (src.dackar.text_processing.preprocessing.preprocessing method)": [[23, "src.dackar.text_processing.Preprocessing.Preprocessing.createTextacyNormalizeFunction", false]], "createtextacyremovefunction() (src.dackar.text_processing.preprocessing.preprocessing method)": [[23, "src.dackar.text_processing.Preprocessing.Preprocessing.createTextacyRemoveFunction", false]], "createtextacyreplacefunction() (src.dackar.text_processing.preprocessing.preprocessing method)": [[23, "src.dackar.text_processing.Preprocessing.Preprocessing.createTextacyReplaceFunction", false]], "customlabel (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.customLabel", false]], "customtokenizer() (in module src.dackar.utils.nlp.nlp_utils)": [[30, "src.dackar.utils.nlp.nlp_utils.customTokenizer", false]], "dataframeentities (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.dataframeEntities", false]], "dataframerelations (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.dataframeRelations", false]], "datepattern (src.dackar.pipelines.temporalentity.temporal attribute)": [[14, "src.dackar.pipelines.TemporalEntity.Temporal.datePattern", false]], "df (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.df", false]], "disambiguationmethod (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.disambiguationMethod", false]], "displayner() (in module src.dackar.utils.nlp.nlp_utils)": [[30, "src.dackar.utils.nlp.nlp_utils.displayNER", false]], "dumpnodesedgesfiles() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.dumpNodesEdgesFiles", false]], "edge_colors (src.dackar.utils.opm.oplparser.opmobject attribute)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.edge_colors", false]], "embentities (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.embEntities", false]], "emergentactivity (class in src.dackar.pipelines.emergentactivityentity)": [[8, "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity", false]], "entities (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.entities", false]], "entities (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[28, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.entities", false]], "entityruler (src.dackar.pipelines.conjectureentity.conjectureentity attribute)": [[6, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.generalentity.generalentity attribute)": [[9, "src.dackar.pipelines.GeneralEntity.GeneralEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.locationentity.locationentity attribute)": [[10, "src.dackar.pipelines.LocationEntity.LocationEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.temporalattributeentity.temporalattributeentity attribute)": [[13, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.temporalrelationentity.temporalrelationentity attribute)": [[15, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity.entityRuler", false]], "entityruler (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.entityRuler", false]], "expandentities() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.expandEntities", false]], "extendent() (in module src.dackar.utils.nlp.nlp_utils)": [[30, "src.dackar.utils.nlp.nlp_utils.extendEnt", false]], "extract() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.extract", false]], "extractcausalreldep() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractCausalRelDep", false]], "extracthealthstatus() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.extractHealthStatus", false]], "extracthealthstatus() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[37, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.extractHealthStatus", false]], "extractinformation() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractInformation", false]], "extractinformation() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.extractInformation", false]], "extractinformation() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.extractInformation", false]], "extractinformation() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[37, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.extractInformation", false]], "extractlemma() (in module src.dackar.utils.nlp.nlp_utils)": [[30, "src.dackar.utils.nlp.nlp_utils.extractLemma", false]], "extractlemma() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.extractLemma", false]], "extractreldep() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractRelDep", false]], "extractreldep() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.extractRelDep", false]], "extractreldep() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[37, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.extractRelDep", false]], "extractstatus() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractStatus", false]], "filename (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.filename", false]], "filename (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[28, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.filename", false]], "filename (src.dackar.utils.opm.oplparser.opmobject attribute)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.filename", false]], "find_nodes() (src.dackar.knowledge_graph.py2neo.py2neo method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.find_nodes", false]], "find_temporal() (in module src.dackar.pipelines.temporalentity)": [[14, "src.dackar.pipelines.TemporalEntity.find_temporal", false]], "findhealthstatus() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.findHealthStatus", false]], "findhealthstatus() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.findHealthStatus", false]], "findleftsubj() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.findLeftSubj", false]], "findobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.findObj", false]], "findoptimaloption() (src.dackar.text_processing.preprocessing.spellchecker method)": [[23, "src.dackar.text_processing.Preprocessing.SpellChecker.findOptimalOption", false]], "findrightkeyword() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.findRightKeyword", false]], "findrightobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.findRightObj", false]], "findsubj() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.findSubj", false]], "findverb() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.findVerb", false]], "functionlist (src.dackar.text_processing.preprocessing.preprocessing attribute)": [[23, "src.dackar.text_processing.Preprocessing.Preprocessing.functionList", false]], "generalentity (class in src.dackar.pipelines.generalentity)": [[9, "src.dackar.pipelines.GeneralEntity.GeneralEntity", false]], "generateabbrdict() (src.dackar.text_processing.preprocessing.spellchecker method)": [[23, "src.dackar.text_processing.Preprocessing.SpellChecker.generateAbbrDict", false]], "generatepattern() (in module src.dackar.utils.nlp.nlp_utils)": [[30, "src.dackar.utils.nlp.nlp_utils.generatePattern", false]], "generatepatternlist() (in module src.dackar.utils.nlp.nlp_utils)": [[30, "src.dackar.utils.nlp.nlp_utils.generatePatternList", false]], "generatepatterns() (src.dackar.utils.nlp.createpatterns.createpatterns method)": [[28, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.generatePatterns", false]], "get_all() (src.dackar.knowledge_graph.py2neo.py2neo method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.get_all", false]], "getabbreviation() (src.dackar.text_processing.abbreviation.abbreviation method)": [[22, "src.dackar.text_processing.Abbreviation.Abbreviation.getAbbreviation", false]], "getamod() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getAmod", false]], "getamodonly() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getAmodOnly", false]], "getcompoundonly() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getCompoundOnly", false]], "getconjuncts() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getConjuncts", false]], "getcustoments() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getCustomEnts", false]], "getentid() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.getEntID", false]], "gethealthstatusforobj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getHealthStatusForObj", false]], "gethealthstatusforpobj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getHealthStatusForPobj", false]], "gethealthstatusforsubj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getHealthStatusForSubj", false]], "getindex() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getIndex", false]], "getkeywords() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getKeywords", false]], "getleftsscents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getLeftSSCEnts", false]], "getmisspelledwords() (src.dackar.text_processing.preprocessing.spellchecker method)": [[23, "src.dackar.text_processing.Preprocessing.SpellChecker.getMisspelledWords", false]], "getnbor() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getNbor", false]], "getonlywords() (in module src.dackar.utils.utils)": [[34, "src.dackar.utils.utils.getOnlyWords", false]], "getpatterns() (src.dackar.utils.nlp.createpatterns.createpatterns method)": [[28, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.getPatterns", false]], "getphrase() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getPhrase", false]], "getrightsscents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getRightSSCEnts", false]], "getshortacronym() (in module src.dackar.utils.utils)": [[34, "src.dackar.utils.utils.getShortAcronym", false]], "getsscent() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getSSCEnt", false]], "getstatusforobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getStatusForObj", false]], "getstatusforpobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getStatusForPobj", false]], "getstatusforsubj() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.getStatusForSubj", false]], "handleabbreviations() (src.dackar.text_processing.preprocessing.spellchecker method)": [[23, "src.dackar.text_processing.Preprocessing.SpellChecker.handleAbbreviations", false]], "handleabbreviationsdict() (src.dackar.text_processing.preprocessing.spellchecker method)": [[23, "src.dackar.text_processing.Preprocessing.SpellChecker.handleAbbreviationsDict", false]], "handleinvalidsent() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.handleInvalidSent", false]], "handlevalidsent() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.handleValidSent", false]], "identifybestsimilarsynsetfromsynsets() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.identifyBestSimilarSynsetFromSynsets", false]], "identifybestsimilarsynsetpair() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.identifyBestSimilarSynsetPair", false]], "identifybestsimilarwordfromwordset() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.identifyBestSimilarWordFromWordSet", false]], "identifybestsynset() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.identifyBestSynset", false]], "identifycauseeffectforattr() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.identifyCauseEffectForAttr", false]], "identifycauseeffectforclausemodifier() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.identifyCauseEffectForClauseModifier", false]], "identifycauseeffectfornsuj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.identifyCauseEffectForNsuj", false]], "identifynounandverbforcomparison() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.identifyNounAndVerbForComparison", false]], "initcoref() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.initCoref", false]], "isconjecture() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.isConjecture", false]], "isnegation() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.isNegation", false]], "ispassive() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.isPassive", false]], "issubelement() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.isSubElement", false]], "issubelements() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.isSubElements", false]], "isvalidcausalents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.isValidCausalEnts", false]], "isvalidcausalents() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.isValidCausalEnts", false]], "isvalidkeyword() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.isValidKeyword", false]], "label (src.dackar.pipelines.unitentity.unitentity attribute)": [[16, "src.dackar.pipelines.UnitEntity.UnitEntity.label", false]], "label (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[28, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.label", false]], "linkentities (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.linkEntities", false]], "links2opms (src.dackar.utils.opm.oplparser.opmobject attribute)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.links2OPMs", false]], "linktombsemodels (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.linkToMBSEmodels", false]], "listids (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.listIDs", false]], "lmlgraph (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.LMLgraph", false]], "lmlobject (class in src.dackar.utils.mbse.lmlparser)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject", false]], "lmlparser() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.LMLparser", false]], "load_csv_for_nodes() (src.dackar.knowledge_graph.py2neo.py2neo method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.load_csv_for_nodes", false]], "load_csv_for_relations() (src.dackar.knowledge_graph.py2neo.py2neo method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.load_csv_for_relations", false]], "locationentity (class in src.dackar.pipelines.locationentity)": [[10, "src.dackar.pipelines.LocationEntity.LocationEntity", false]], "log_format (in module src.dackar.similarity.sentencesimilarity)": [[18, "src.dackar.similarity.SentenceSimilarity.log_format", false]], "logger (in module src.dackar)": [[2, "src.dackar.logger", false]], "logger (in module src.dackar.pipelines.conjectureentity)": [[6, "src.dackar.pipelines.ConjectureEntity.logger", false]], "logger (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.logger", false]], "logger (in module src.dackar.pipelines.emergentactivityentity)": [[8, "src.dackar.pipelines.EmergentActivityEntity.logger", false]], "logger (in module src.dackar.pipelines.generalentity)": [[9, "src.dackar.pipelines.GeneralEntity.logger", false]], "logger (in module src.dackar.pipelines.locationentity)": [[10, "src.dackar.pipelines.LocationEntity.logger", false]], "logger (in module src.dackar.pipelines.phraseentitymatcher)": [[11, "src.dackar.pipelines.PhraseEntityMatcher.logger", false]], "logger (in module src.dackar.pipelines.simpleentitymatcher)": [[12, "src.dackar.pipelines.SimpleEntityMatcher.logger", false]], "logger (in module src.dackar.pipelines.temporalattributeentity)": [[13, "src.dackar.pipelines.TemporalAttributeEntity.logger", false]], "logger (in module src.dackar.pipelines.temporalrelationentity)": [[15, "src.dackar.pipelines.TemporalRelationEntity.logger", false]], "logger (in module src.dackar.pipelines.unitentity)": [[16, "src.dackar.pipelines.UnitEntity.logger", false]], "logger (in module src.dackar.similarity.sentencesimilarity)": [[18, "src.dackar.similarity.SentenceSimilarity.logger", false]], "logger (in module src.dackar.text_processing.abbreviation)": [[22, "src.dackar.text_processing.Abbreviation.logger", false]], "logger (in module src.dackar.utils.nlp.nlp_utils)": [[30, "src.dackar.utils.nlp.nlp_utils.logger", false]], "logger (in module src.dackar.utils.utils)": [[34, "src.dackar.utils.utils.logger", false]], "logger (in module src.dackar.workflows.operatorshiftlogsprocessing)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.logger", false]], "logger (in module src.dackar.workflows.rulebasedmatcher)": [[36, "src.dackar.workflows.RuleBasedMatcher.logger", false]], "logger (in module src.dackar.workflows.workflowbase)": [[38, "src.dackar.workflows.WorkflowBase.logger", false]], "logger (in module src.dackar.workflows.workorderprocessing)": [[37, "src.dackar.workflows.WorkOrderProcessing.logger", false]], "matcher (src.dackar.pipelines.emergentactivityentity.emergentactivity attribute)": [[8, "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity.matcher", false]], "matcher (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher attribute)": [[11, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.matcher", false]], "matcher (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher attribute)": [[12, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.matcher", false]], "matcher (src.dackar.pipelines.temporalentity.temporal attribute)": [[14, "src.dackar.pipelines.TemporalEntity.Temporal.matcher", false]], "matcher (src.dackar.pipelines.unitentity.unitentity attribute)": [[16, "src.dackar.pipelines.UnitEntity.UnitEntity.matcher", false]], "mergeentitieswithsameid() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.mergeEntitiesWithSameID", false]], "mergephrase() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.mergePhrase", false]], "module": [[1, "module-src.dackar.config", false], [2, "module-src.dackar", false], [3, "module-src.dackar.knowledge_graph.graph_utils", false], [4, "module-src.dackar.knowledge_graph", false], [5, "module-src.dackar.knowledge_graph.py2neo", false], [6, "module-src.dackar.pipelines.ConjectureEntity", false], [7, "module-src.dackar.pipelines.CustomPipelineComponents", false], [8, "module-src.dackar.pipelines.EmergentActivityEntity", false], [9, "module-src.dackar.pipelines.GeneralEntity", false], [10, "module-src.dackar.pipelines.LocationEntity", false], [11, "module-src.dackar.pipelines.PhraseEntityMatcher", false], [12, "module-src.dackar.pipelines.SimpleEntityMatcher", false], [13, "module-src.dackar.pipelines.TemporalAttributeEntity", false], [14, "module-src.dackar.pipelines.TemporalEntity", false], [15, "module-src.dackar.pipelines.TemporalRelationEntity", false], [16, "module-src.dackar.pipelines.UnitEntity", false], [17, "module-src.dackar.pipelines", false], [18, "module-src.dackar.similarity.SentenceSimilarity", false], [19, "module-src.dackar.similarity", false], [20, "module-src.dackar.similarity.simUtils", false], [21, "module-src.dackar.similarity.synsetUtils", false], [22, "module-src.dackar.text_processing.Abbreviation", false], [23, "module-src.dackar.text_processing.Preprocessing", false], [24, "module-src.dackar.text_processing", false], [25, "module-src.dackar.utils", false], [26, "module-src.dackar.utils.mbse.LMLparser", false], [27, "module-src.dackar.utils.mbse", false], [28, "module-src.dackar.utils.nlp.CreatePatterns", false], [29, "module-src.dackar.utils.nlp", false], [30, "module-src.dackar.utils.nlp.nlp_utils", false], [31, "module-src.dackar.utils.num", false], [32, "module-src.dackar.utils.opm.OPLparser", false], [33, "module-src.dackar.utils.opm", false], [34, "module-src.dackar.utils.utils", false], [35, "module-src.dackar.workflows.OperatorShiftLogsProcessing", false], [36, "module-src.dackar.workflows.RuleBasedMatcher", false], [37, "module-src.dackar.workflows.WorkOrderProcessing", false], [38, "module-src.dackar.workflows.WorkflowBase", false], [39, "module-src.dackar.workflows", false], [40, "module-src", false]], "name (src.dackar.pipelines.conjectureentity.conjectureentity attribute)": [[6, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity.name", false]], "name (src.dackar.pipelines.emergentactivityentity.emergentactivity attribute)": [[8, "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity.name", false]], "name (src.dackar.pipelines.generalentity.generalentity attribute)": [[9, "src.dackar.pipelines.GeneralEntity.GeneralEntity.name", false]], "name (src.dackar.pipelines.locationentity.locationentity attribute)": [[10, "src.dackar.pipelines.LocationEntity.LocationEntity.name", false]], "name (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher attribute)": [[11, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.name", false]], "name (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher attribute)": [[12, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.name", false]], "name (src.dackar.pipelines.temporalattributeentity.temporalattributeentity attribute)": [[13, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity.name", false]], "name (src.dackar.pipelines.temporalentity.temporal attribute)": [[14, "src.dackar.pipelines.TemporalEntity.Temporal.name", false]], "name (src.dackar.pipelines.temporalrelationentity.temporalrelationentity attribute)": [[15, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity.name", false]], "name (src.dackar.pipelines.unitentity.unitentity attribute)": [[16, "src.dackar.pipelines.UnitEntity.UnitEntity.name", false]], "name (src.dackar.text_processing.abbreviation.abbreviation attribute)": [[22, "src.dackar.text_processing.Abbreviation.Abbreviation.name", false]], "name (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.name", false]], "nlp (src.dackar.pipelines.unitentity.unitentity attribute)": [[16, "src.dackar.pipelines.UnitEntity.UnitEntity.nlp", false]], "nlp (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.nlp", false]], "nlpconfig (in module src.dackar.config)": [[1, "src.dackar.config.nlpConfig", false]], "node_colors (src.dackar.utils.opm.oplparser.opmobject attribute)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.node_colors", false]], "normentities() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.normEntities", false]], "not_acronyms (in module src.dackar.text_processing.abbreviation)": [[22, "src.dackar.text_processing.Abbreviation.not_acronyms", false]], "numerizer (in module src.dackar.text_processing.preprocessing)": [[23, "src.dackar.text_processing.Preprocessing.numerizer", false]], "objectlist (src.dackar.utils.opm.oplparser.opmobject attribute)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.objectList", false]], "operatorshiftlogs (class in src.dackar.workflows.operatorshiftlogsprocessing)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs", false]], "oplentityparser() (src.dackar.utils.opm.oplparser.opmobject method)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.OPLentityParser", false]], "oplparser() (src.dackar.utils.opm.oplparser.opmobject method)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.OPLparser", false]], "opltextparser() (src.dackar.utils.opm.oplparser.opmobject method)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.OPLtextParser", false]], "opmgraph (src.dackar.utils.opm.oplparser.opmobject attribute)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.opmGraph", false]], "opmobject (class in src.dackar.utils.opm.oplparser)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject", false]], "ordinaltonumber (src.dackar.pipelines.temporalentity.temporal attribute)": [[14, "src.dackar.pipelines.TemporalEntity.Temporal.ordinalToNumber", false]], "parseassetentity() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.parseAssetEntity", false]], "parseentitydescription() (in module src.dackar.utils.mbse.lmlparser)": [[26, "src.dackar.utils.mbse.LMLparser.parseEntityDescription", false]], "parselinkentity() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.parseLinkEntity", false]], "path (in module src.dackar.config)": [[1, "src.dackar.config.path", false]], "pathlength() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.pathLength", false]], "patterns (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[28, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.patterns", false]], "phraseentitymatcher (class in src.dackar.pipelines.phraseentitymatcher)": [[11, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher", false]], "pipeline (src.dackar.text_processing.preprocessing.preprocessing attribute)": [[23, "src.dackar.text_processing.Preprocessing.Preprocessing.pipeline", false]], "plotdag() (in module src.dackar.utils.nlp.nlp_utils)": [[30, "src.dackar.utils.nlp.nlp_utils.plotDAG", false]], "preprocess (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[23, "src.dackar.text_processing.Preprocessing.AbbrExpander.preprocess", false]], "preprocessing (class in src.dackar.text_processing.preprocessing)": [[23, "src.dackar.text_processing.Preprocessing.Preprocessing", false]], "preprocessordefaultlist (in module src.dackar.text_processing.preprocessing)": [[23, "src.dackar.text_processing.Preprocessing.preprocessorDefaultList", false]], "preprocessordefaultoptions (in module src.dackar.text_processing.preprocessing)": [[23, "src.dackar.text_processing.Preprocessing.preprocessorDefaultOptions", false]], "preprocessorlist (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[23, "src.dackar.text_processing.Preprocessing.AbbrExpander.preprocessorList", false]], "preprocessornames (src.dackar.text_processing.preprocessing.preprocessing attribute)": [[23, "src.dackar.text_processing.Preprocessing.Preprocessing.preprocessorNames", false]], "printdeptree() (in module src.dackar.utils.nlp.nlp_utils)": [[30, "src.dackar.utils.nlp.nlp_utils.printDepTree", false]], "printonfile() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.printOnFile", false]], "processlist (src.dackar.utils.opm.oplparser.opmobject attribute)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.processList", false]], "propagateenttype() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.propagateEntType", false]], "py2neo (class in src.dackar.knowledge_graph.py2neo)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo", false]], "pysbdsentenceboundaries() (in module src.dackar.pipelines.custompipelinecomponents)": [[7, "src.dackar.pipelines.CustomPipelineComponents.pysbdSentenceBoundaries", false]], "query() (src.dackar.knowledge_graph.py2neo.py2neo method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.query", false]], "readfile() (src.dackar.utils.nlp.createpatterns.createpatterns method)": [[28, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.readFile", false]], "removeacronym() (in module src.dackar.utils.opm.oplparser)": [[32, "src.dackar.utils.opm.OPLparser.removeAcronym", false]], "reset() (src.dackar.knowledge_graph.py2neo.py2neo method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.reset", false]], "reset() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.reset", false]], "reset() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.reset", false]], "reset() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.reset", false]], "reset() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[37, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.reset", false]], "resetpipeline() (in module src.dackar.utils.nlp.nlp_utils)": [[30, "src.dackar.utils.nlp.nlp_utils.resetPipeline", false]], "restart() (src.dackar.knowledge_graph.py2neo.py2neo method)": [[5, "src.dackar.knowledge_graph.py2neo.Py2Neo.restart", false]], "returnacronym() (src.dackar.utils.opm.oplparser.opmobject method)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.returnAcronym", false]], "returnattributelist() (src.dackar.utils.opm.oplparser.opmobject method)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.returnAttributeList", false]], "returnentities() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.returnEntities", false]], "returngraph() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.returnGraph", false]], "returngraph() (src.dackar.utils.opm.oplparser.opmobject method)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.returnGraph", false]], "returnlistids() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[26, "src.dackar.utils.mbse.LMLparser.LMLobject.returnListIDs", false]], "returnobjectlist() (src.dackar.utils.opm.oplparser.opmobject method)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.returnObjectList", false]], "returnprocesslist() (src.dackar.utils.opm.oplparser.opmobject method)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.returnProcessList", false]], "returnsexternallinks() (src.dackar.utils.opm.oplparser.opmobject method)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.returnsExternalLinks", false]], "rulebasedmatcher (class in src.dackar.workflows.rulebasedmatcher)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher", false]], "scalingdeptheffect() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.scalingDepthEffect", false]], "search_phrase() (in module src.dackar.knowledge_graph.graph_utils)": [[3, "src.dackar.knowledge_graph.graph_utils.search_phrase", false]], "selectvalidents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.selectValidEnts", false]], "semanticsimilaritysentences() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.semanticSimilaritySentences", false]], "semanticsimilaritysynsetlist() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.semanticSimilaritySynsetList", false]], "semanticsimilaritysynsets() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.semanticSimilaritySynsets", false]], "semanticsimilarityusingdisambiguatedsynsets() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.semanticSimilarityUsingDisambiguatedSynsets", false]], "semanticsimilaritywords() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.semanticSimilarityWords", false]], "sentences (src.dackar.utils.opm.oplparser.opmobject attribute)": [[32, "src.dackar.utils.opm.OPLparser.OPMobject.sentences", false]], "sentencesensedisambiguation() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.sentenceSenseDisambiguation", false]], "sentencesensedisambiguationpywsd() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.sentenceSenseDisambiguationPyWSD", false]], "sentencesimialritybestsense() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.sentenceSimialrityBestSense", false]], "sentencesimilarity (class in src.dackar.similarity.sentencesimilarity)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity", false]], "sentencesimilarity() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.sentenceSimilarity", false]], "sentencesimilarity() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.sentenceSimilarity", false]], "sentencesimilaritypawarmagomethod() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.sentenceSimilarityPawarMagoMethod", false]], "sentencesimilaritywithdisambiguation() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.sentenceSimilarityWithDisambiguation", false]], "set_neo4j_import_folder() (in module src.dackar.knowledge_graph.graph_utils)": [[3, "src.dackar.knowledge_graph.graph_utils.set_neo4j_import_folder", false]], "setparameters() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.setParameters", false]], "similaritymethod (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.similarityMethod", false]], "simpleentitymatcher (class in src.dackar.pipelines.simpleentitymatcher)": [[12, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher", false]], "spellchecker (class in src.dackar.text_processing.preprocessing)": [[23, "src.dackar.text_processing.Preprocessing.SpellChecker", false]], "splitentsfollowingnouncausal() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[36, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.splitEntsFollowingNounCausal", false]], "src": [[40, "module-src", false]], "src.dackar": [[2, "module-src.dackar", false]], "src.dackar.config": [[1, "module-src.dackar.config", false]], "src.dackar.knowledge_graph": [[4, "module-src.dackar.knowledge_graph", false]], "src.dackar.knowledge_graph.graph_utils": [[3, "module-src.dackar.knowledge_graph.graph_utils", false]], "src.dackar.knowledge_graph.py2neo": [[5, "module-src.dackar.knowledge_graph.py2neo", false]], "src.dackar.pipelines": [[17, "module-src.dackar.pipelines", false]], "src.dackar.pipelines.conjectureentity": [[6, "module-src.dackar.pipelines.ConjectureEntity", false]], "src.dackar.pipelines.custompipelinecomponents": [[7, "module-src.dackar.pipelines.CustomPipelineComponents", false]], "src.dackar.pipelines.emergentactivityentity": [[8, "module-src.dackar.pipelines.EmergentActivityEntity", false]], "src.dackar.pipelines.generalentity": [[9, "module-src.dackar.pipelines.GeneralEntity", false]], "src.dackar.pipelines.locationentity": [[10, "module-src.dackar.pipelines.LocationEntity", false]], "src.dackar.pipelines.phraseentitymatcher": [[11, "module-src.dackar.pipelines.PhraseEntityMatcher", false]], "src.dackar.pipelines.simpleentitymatcher": [[12, "module-src.dackar.pipelines.SimpleEntityMatcher", false]], "src.dackar.pipelines.temporalattributeentity": [[13, "module-src.dackar.pipelines.TemporalAttributeEntity", false]], "src.dackar.pipelines.temporalentity": [[14, "module-src.dackar.pipelines.TemporalEntity", false]], "src.dackar.pipelines.temporalrelationentity": [[15, "module-src.dackar.pipelines.TemporalRelationEntity", false]], "src.dackar.pipelines.unitentity": [[16, "module-src.dackar.pipelines.UnitEntity", false]], "src.dackar.similarity": [[19, "module-src.dackar.similarity", false]], "src.dackar.similarity.sentencesimilarity": [[18, "module-src.dackar.similarity.SentenceSimilarity", false]], "src.dackar.similarity.simutils": [[20, "module-src.dackar.similarity.simUtils", false]], "src.dackar.similarity.synsetutils": [[21, "module-src.dackar.similarity.synsetUtils", false]], "src.dackar.text_processing": [[24, "module-src.dackar.text_processing", false]], "src.dackar.text_processing.abbreviation": [[22, "module-src.dackar.text_processing.Abbreviation", false]], "src.dackar.text_processing.preprocessing": [[23, "module-src.dackar.text_processing.Preprocessing", false]], "src.dackar.utils": [[25, "module-src.dackar.utils", false]], "src.dackar.utils.mbse": [[27, "module-src.dackar.utils.mbse", false]], "src.dackar.utils.mbse.lmlparser": [[26, "module-src.dackar.utils.mbse.LMLparser", false]], "src.dackar.utils.nlp": [[29, "module-src.dackar.utils.nlp", false]], "src.dackar.utils.nlp.createpatterns": [[28, "module-src.dackar.utils.nlp.CreatePatterns", false]], "src.dackar.utils.nlp.nlp_utils": [[30, "module-src.dackar.utils.nlp.nlp_utils", false]], "src.dackar.utils.num": [[31, "module-src.dackar.utils.num", false]], "src.dackar.utils.opm": [[33, "module-src.dackar.utils.opm", false]], "src.dackar.utils.opm.oplparser": [[32, "module-src.dackar.utils.opm.OPLparser", false]], "src.dackar.utils.utils": [[34, "module-src.dackar.utils.utils", false]], "src.dackar.workflows": [[39, "module-src.dackar.workflows", false]], "src.dackar.workflows.operatorshiftlogsprocessing": [[35, "module-src.dackar.workflows.OperatorShiftLogsProcessing", false]], "src.dackar.workflows.rulebasedmatcher": [[36, "module-src.dackar.workflows.RuleBasedMatcher", false]], "src.dackar.workflows.workflowbase": [[38, "module-src.dackar.workflows.WorkflowBase", false]], "src.dackar.workflows.workorderprocessing": [[37, "module-src.dackar.workflows.WorkOrderProcessing", false]], "synsetlistsimilarity() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.synsetListSimilarity", false]], "synsetssimilarity() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.synsetsSimilarity", false]], "temporal (class in src.dackar.pipelines.temporalentity)": [[14, "src.dackar.pipelines.TemporalEntity.Temporal", false]], "temporalattributeentity (class in src.dackar.pipelines.temporalattributeentity)": [[13, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity", false]], "temporalrelationentity (class in src.dackar.pipelines.temporalrelationentity)": [[15, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity", false]], "textacynormalize (in module src.dackar.text_processing.preprocessing)": [[23, "src.dackar.text_processing.Preprocessing.textacyNormalize", false]], "textacyremove (in module src.dackar.text_processing.preprocessing)": [[23, "src.dackar.text_processing.Preprocessing.textacyRemove", false]], "textacyreplace (in module src.dackar.text_processing.preprocessing)": [[23, "src.dackar.text_processing.Preprocessing.textacyReplace", false]], "textprocess() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[35, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.textProcess", false]], "textprocess() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.textProcess", false]], "type (src.dackar.text_processing.abbreviation.abbreviation attribute)": [[22, "src.dackar.text_processing.Abbreviation.Abbreviation.type", false]], "type (src.dackar.workflows.workflowbase.workflowbase attribute)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.type", false]], "unitentity (class in src.dackar.pipelines.unitentity)": [[16, "src.dackar.pipelines.UnitEntity.UnitEntity", false]], "updateabbreviation() (src.dackar.text_processing.abbreviation.abbreviation method)": [[22, "src.dackar.text_processing.Abbreviation.Abbreviation.updateAbbreviation", false]], "validdisambiguation (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.validDisambiguation", false]], "validsent() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.validSent", false]], "validsimilarity (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.validSimilarity", false]], "ver (in module src.dackar.workflows.workflowbase)": [[38, "src.dackar.workflows.WorkflowBase.ver", false]], "visualize() (src.dackar.workflows.workflowbase.workflowbase method)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase.visualize", false]], "wordnetsimmethod (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.wordnetSimMethod", false]], "wordorder (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[18, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.wordOrder", false]], "wordordersimilaritysentences() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.wordOrderSimilaritySentences", false]], "wordordersimilaritysynsetlist() (in module src.dackar.similarity.synsetutils)": [[21, "src.dackar.similarity.synsetUtils.wordOrderSimilaritySynsetList", false]], "wordsensedisambiguation() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.wordSenseDisambiguation", false]], "wordssimilarity() (in module src.dackar.similarity.simutils)": [[20, "src.dackar.similarity.simUtils.wordsSimilarity", false]], "workflowbase (class in src.dackar.workflows.workflowbase)": [[38, "src.dackar.workflows.WorkflowBase.WorkflowBase", false]], "workorderprocessing (class in src.dackar.workflows.workorderprocessing)": [[37, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing", false]]}, "objects": {"": [[40, 0, 0, "-", "src"]], "src": [[2, 0, 0, "-", "dackar"]], "src.dackar": [[2, 1, 1, "", "__version__"], [1, 0, 0, "-", "config"], [4, 0, 0, "-", "knowledge_graph"], [2, 1, 1, "", "logger"], [17, 0, 0, "-", "pipelines"], [19, 0, 0, "-", "similarity"], [24, 0, 0, "-", "text_processing"], [25, 0, 0, "-", "utils"], [39, 0, 0, "-", "workflows"]], "src.dackar.config": [[1, 1, 1, "", "configFileName"], [1, 1, 1, "", "nlpConfig"], [1, 1, 1, "", "path"]], "src.dackar.knowledge_graph": [[3, 0, 0, "-", "graph_utils"], [5, 0, 0, "-", "py2neo"]], "src.dackar.knowledge_graph.graph_utils": [[3, 2, 1, "", "search_phrase"], [3, 2, 1, "", "set_neo4j_import_folder"]], "src.dackar.knowledge_graph.py2neo": [[5, 3, 1, "", "Py2Neo"]], "src.dackar.knowledge_graph.py2neo.Py2Neo": [[5, 4, 1, "", "__driver"], [5, 4, 1, "", "__pwd"], [5, 4, 1, "", "__uri"], [5, 4, 1, "", "__user"], [5, 5, 1, "", "_create_node"], [5, 5, 1, "", "_create_relation"], [5, 5, 1, "", "_find_nodes"], [5, 5, 1, "", "_get_all"], [5, 5, 1, "", "_load_csv_for_relations"], [5, 5, 1, "", "_load_csv_nodes"], [5, 5, 1, "", "_reset"], [5, 5, 1, "", "close"], [5, 5, 1, "", "create_node"], [5, 5, 1, "", "create_relation"], [5, 5, 1, "", "find_nodes"], [5, 5, 1, "", "get_all"], [5, 5, 1, "", "load_csv_for_nodes"], [5, 5, 1, "", "load_csv_for_relations"], [5, 5, 1, "", "query"], [5, 5, 1, "", "reset"], [5, 5, 1, "", "restart"]], "src.dackar.pipelines": [[6, 0, 0, "-", "ConjectureEntity"], [7, 0, 0, "-", "CustomPipelineComponents"], [8, 0, 0, "-", "EmergentActivityEntity"], [9, 0, 0, "-", "GeneralEntity"], [10, 0, 0, "-", "LocationEntity"], [11, 0, 0, "-", "PhraseEntityMatcher"], [12, 0, 0, "-", "SimpleEntityMatcher"], [13, 0, 0, "-", "TemporalAttributeEntity"], [14, 0, 0, "-", "TemporalEntity"], [15, 0, 0, "-", "TemporalRelationEntity"], [16, 0, 0, "-", "UnitEntity"]], "src.dackar.pipelines.ConjectureEntity": [[6, 3, 1, "", "ConjectureEntity"], [6, 2, 1, "", "create_conjecture_component"], [6, 1, 1, "", "logger"]], "src.dackar.pipelines.ConjectureEntity.ConjectureEntity": [[6, 5, 1, "", "__call__"], [6, 4, 1, "", "entityRuler"], [6, 4, 1, "", "name"]], "src.dackar.pipelines.CustomPipelineComponents": [[7, 1, 1, "id1", "_"], [7, 1, 1, "", "aliasLookup"], [7, 2, 1, "", "aliasResolver"], [7, 2, 1, "", "anaphorCoref"], [7, 2, 1, "", "anaphorEntCoref"], [7, 1, 1, "", "customLabel"], [7, 1, 1, "", "df"], [7, 2, 1, "", "expandEntities"], [7, 2, 1, "", "getEntID"], [7, 2, 1, "", "initCoref"], [7, 1, 1, "", "logger"], [7, 2, 1, "", "mergeEntitiesWithSameID"], [7, 2, 1, "", "mergePhrase"], [7, 2, 1, "", "normEntities"], [7, 2, 1, "", "propagateEntType"], [7, 2, 1, "", "pysbdSentenceBoundaries"]], "src.dackar.pipelines.EmergentActivityEntity": [[8, 3, 1, "", "EmergentActivity"], [8, 2, 1, "", "create_emergent_activity"], [8, 1, 1, "", "logger"]], "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity": [[8, 5, 1, "", "__call__"], [8, 4, 1, "", "asSpan"], [8, 4, 1, "", "matcher"], [8, 4, 1, "", "name"]], "src.dackar.pipelines.GeneralEntity": [[9, 3, 1, "", "GeneralEntity"], [9, 2, 1, "", "create_general_component"], [9, 1, 1, "", "logger"]], "src.dackar.pipelines.GeneralEntity.GeneralEntity": [[9, 5, 1, "", "__call__"], [9, 4, 1, "", "asSpan"], [9, 4, 1, "", "entityRuler"], [9, 4, 1, "", "name"]], "src.dackar.pipelines.LocationEntity": [[10, 3, 1, "", "LocationEntity"], [10, 2, 1, "", "create_location_component"], [10, 1, 1, "", "logger"]], "src.dackar.pipelines.LocationEntity.LocationEntity": [[10, 5, 1, "", "__call__"], [10, 4, 1, "", "entityRuler"], [10, 4, 1, "", "name"]], "src.dackar.pipelines.PhraseEntityMatcher": [[11, 3, 1, "", "PhraseEntityMatcher"], [11, 2, 1, "", "create_phrase_matcher_component"], [11, 1, 1, "", "logger"]], "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher": [[11, 5, 1, "", "__call__"], [11, 4, 1, "", "asSpan"], [11, 4, 1, "", "matcher"], [11, 4, 1, "", "name"]], "src.dackar.pipelines.SimpleEntityMatcher": [[12, 3, 1, "", "SimpleEntityMatcher"], [12, 2, 1, "", "create_simple_matcher_component"], [12, 1, 1, "", "logger"]], "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher": [[12, 5, 1, "", "__call__"], [12, 4, 1, "", "asSpan"], [12, 4, 1, "", "matcher"], [12, 4, 1, "", "name"]], "src.dackar.pipelines.TemporalAttributeEntity": [[13, 3, 1, "", "TemporalAttributeEntity"], [13, 2, 1, "", "create_temporal_attribute_component"], [13, 1, 1, "", "logger"]], "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity": [[13, 5, 1, "", "__call__"], [13, 4, 1, "", "entityRuler"], [13, 4, 1, "", "name"]], "src.dackar.pipelines.TemporalEntity": [[14, 3, 1, "", "Temporal"], [14, 2, 1, "", "find_temporal"]], "src.dackar.pipelines.TemporalEntity.Temporal": [[14, 5, 1, "", "__call__"], [14, 4, 1, "", "asSpan"], [14, 4, 1, "", "datePattern"], [14, 4, 1, "", "matcher"], [14, 4, 1, "", "name"], [14, 4, 1, "", "ordinalToNumber"]], "src.dackar.pipelines.TemporalRelationEntity": [[15, 3, 1, "", "TemporalRelationEntity"], [15, 2, 1, "", "create_temporal_relation_component"], [15, 1, 1, "", "logger"]], "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity": [[15, 5, 1, "", "__call__"], [15, 4, 1, "", "entityRuler"], [15, 4, 1, "", "name"]], "src.dackar.pipelines.UnitEntity": [[16, 3, 1, "", "UnitEntity"], [16, 2, 1, "", "create_unit_component"], [16, 1, 1, "", "logger"]], "src.dackar.pipelines.UnitEntity.UnitEntity": [[16, 5, 1, "", "__call__"], [16, 4, 1, "", "asSpan"], [16, 4, 1, "", "label"], [16, 4, 1, "", "matcher"], [16, 4, 1, "", "name"], [16, 4, 1, "", "nlp"]], "src.dackar.similarity": [[18, 0, 0, "-", "SentenceSimilarity"], [20, 0, 0, "-", "simUtils"], [21, 0, 0, "-", "synsetUtils"]], "src.dackar.similarity.SentenceSimilarity": [[18, 3, 1, "", "SentenceSimilarity"], [18, 1, 1, "", "log_format"], [18, 1, 1, "", "logger"]], "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity": [[18, 4, 1, "", "brownIc"], [18, 5, 1, "", "constructSimilarityVectorPawarMagoMethod"], [18, 4, 1, "", "disambiguationMethod"], [18, 5, 1, "", "sentenceSimialrityBestSense"], [18, 5, 1, "", "sentenceSimilarity"], [18, 5, 1, "", "sentenceSimilarityPawarMagoMethod"], [18, 5, 1, "", "setParameters"], [18, 4, 1, "", "similarityMethod"], [18, 4, 1, "", "validDisambiguation"], [18, 4, 1, "", "validSimilarity"], [18, 4, 1, "", "wordOrder"], [18, 4, 1, "", "wordnetSimMethod"]], "src.dackar.similarity.simUtils": [[20, 2, 1, "", "brownInfo"], [20, 2, 1, "", "constructSemanticVector"], [20, 2, 1, "", "constructWordOrderVector"], [20, 2, 1, "", "content"], [20, 2, 1, "", "convertSentsToSynsets"], [20, 2, 1, "", "convertSentsToSynsetsWithDisambiguation"], [20, 2, 1, "", "convertToSynsets"], [20, 2, 1, "", "identifyBestSimilarSynsetPair"], [20, 2, 1, "", "identifyBestSimilarWordFromWordSet"], [20, 2, 1, "", "identifyBestSynset"], [20, 2, 1, "", "identifyNounAndVerbForComparison"], [20, 2, 1, "", "semanticSimilaritySentences"], [20, 2, 1, "", "semanticSimilarityWords"], [20, 2, 1, "", "sentenceSenseDisambiguation"], [20, 2, 1, "", "sentenceSenseDisambiguationPyWSD"], [20, 2, 1, "", "sentenceSimilarity"], [20, 2, 1, "", "sentenceSimilarityWithDisambiguation"], [20, 2, 1, "", "wordOrderSimilaritySentences"], [20, 2, 1, "", "wordSenseDisambiguation"], [20, 2, 1, "", "wordsSimilarity"]], "src.dackar.similarity.synsetUtils": [[21, 2, 1, "", "constructSemanticVector"], [21, 2, 1, "", "constructSemanticVectorUsingDisambiguatedSynsets"], [21, 2, 1, "", "constructSynsetOrderVector"], [21, 2, 1, "", "identifyBestSimilarSynsetFromSynsets"], [21, 2, 1, "", "pathLength"], [21, 2, 1, "", "scalingDepthEffect"], [21, 2, 1, "", "semanticSimilaritySynsetList"], [21, 2, 1, "", "semanticSimilaritySynsets"], [21, 2, 1, "", "semanticSimilarityUsingDisambiguatedSynsets"], [21, 2, 1, "", "synsetListSimilarity"], [21, 2, 1, "", "synsetsSimilarity"], [21, 2, 1, "", "wordOrderSimilaritySynsetList"]], "src.dackar.text_processing": [[22, 0, 0, "-", "Abbreviation"], [23, 0, 0, "-", "Preprocessing"]], "src.dackar.text_processing.Abbreviation": [[22, 3, 1, "", "Abbreviation"], [22, 1, 1, "", "logger"], [22, 1, 1, "", "not_acronyms"]], "src.dackar.text_processing.Abbreviation.Abbreviation": [[22, 5, 1, "", "abbreviationSub"], [22, 5, 1, "", "getAbbreviation"], [22, 4, 1, "", "name"], [22, 4, 1, "", "type"], [22, 5, 1, "", "updateAbbreviation"]], "src.dackar.text_processing.Preprocessing": [[23, 3, 1, "", "AbbrExpander"], [23, 3, 1, "", "Preprocessing"], [23, 3, 1, "", "SpellChecker"], [23, 1, 1, "", "numerizer"], [23, 1, 1, "", "preprocessorDefaultList"], [23, 1, 1, "", "preprocessorDefaultOptions"], [23, 1, 1, "", "textacyNormalize"], [23, 1, 1, "", "textacyRemove"], [23, 1, 1, "", "textacyReplace"]], "src.dackar.text_processing.Preprocessing.AbbrExpander": [[23, 4, 1, "", "abbrDict"], [23, 4, 1, "", "abbrList"], [23, 5, 1, "", "abbrProcess"], [23, 4, 1, "", "abbrType"], [23, 4, 1, "", "checker"], [23, 4, 1, "", "checkerType"], [23, 4, 1, "", "preprocess"], [23, 4, 1, "", "preprocessorList"]], "src.dackar.text_processing.Preprocessing.Preprocessing": [[23, 5, 1, "", "__call__"], [23, 5, 1, "", "createTextacyNormalizeFunction"], [23, 5, 1, "", "createTextacyRemoveFunction"], [23, 5, 1, "", "createTextacyReplaceFunction"], [23, 4, 1, "", "functionList"], [23, 4, 1, "", "pipeline"], [23, 4, 1, "", "preprocessorNames"]], "src.dackar.text_processing.Preprocessing.SpellChecker": [[23, 5, 1, "", "addWordsToDictionary"], [23, 4, 1, "", "checker"], [23, 5, 1, "", "correct"], [23, 5, 1, "", "findOptimalOption"], [23, 5, 1, "", "generateAbbrDict"], [23, 5, 1, "", "getMisspelledWords"], [23, 5, 1, "", "handleAbbreviations"], [23, 5, 1, "", "handleAbbreviationsDict"]], "src.dackar.utils": [[27, 0, 0, "-", "mbse"], [29, 0, 0, "-", "nlp"], [31, 0, 0, "-", "num"], [33, 0, 0, "-", "opm"], [34, 0, 0, "-", "utils"]], "src.dackar.utils.mbse": [[26, 0, 0, "-", "LMLparser"]], "src.dackar.utils.mbse.LMLparser": [[26, 3, 1, "", "LMLobject"], [26, 2, 1, "", "parseEntityDescription"]], "src.dackar.utils.mbse.LMLparser.LMLobject": [[26, 4, 1, "", "LMLgraph"], [26, 5, 1, "", "LMLparser"], [26, 4, 1, "", "acronyms"], [26, 5, 1, "", "cleanedGraph"], [26, 5, 1, "", "connetGraph"], [26, 5, 1, "", "dumpNodesEdgesFiles"], [26, 4, 1, "", "embEntities"], [26, 4, 1, "", "entities"], [26, 4, 1, "", "filename"], [26, 4, 1, "", "linkEntities"], [26, 4, 1, "", "linkToMBSEmodels"], [26, 4, 1, "", "listIDs"], [26, 5, 1, "", "parseAssetEntity"], [26, 5, 1, "", "parseLinkEntity"], [26, 5, 1, "", "printOnFile"], [26, 5, 1, "", "returnEntities"], [26, 5, 1, "", "returnGraph"], [26, 5, 1, "", "returnListIDs"]], "src.dackar.utils.nlp": [[28, 0, 0, "-", "CreatePatterns"], [30, 0, 0, "-", "nlp_utils"]], "src.dackar.utils.nlp.CreatePatterns": [[28, 3, 1, "", "CreatePatterns"]], "src.dackar.utils.nlp.CreatePatterns.CreatePatterns": [[28, 4, 1, "", "entities"], [28, 4, 1, "", "filename"], [28, 5, 1, "", "generatePatterns"], [28, 5, 1, "", "getPatterns"], [28, 4, 1, "", "label"], [28, 4, 1, "", "patterns"], [28, 5, 1, "", "readFile"]], "src.dackar.utils.nlp.nlp_utils": [[30, 2, 1, "", "customTokenizer"], [30, 2, 1, "", "displayNER"], [30, 2, 1, "", "extendEnt"], [30, 2, 1, "", "extractLemma"], [30, 2, 1, "", "generatePattern"], [30, 2, 1, "", "generatePatternList"], [30, 1, 1, "", "logger"], [30, 2, 1, "", "plotDAG"], [30, 2, 1, "", "printDepTree"], [30, 2, 1, "", "resetPipeline"]], "src.dackar.utils.opm": [[32, 0, 0, "-", "OPLparser"]], "src.dackar.utils.opm.OPLparser": [[32, 3, 1, "", "OPMobject"], [32, 2, 1, "", "checkAcronym"], [32, 2, 1, "", "removeAcronym"]], "src.dackar.utils.opm.OPLparser.OPMobject": [[32, 5, 1, "", "OPLentityParser"], [32, 5, 1, "", "OPLparser"], [32, 5, 1, "", "OPLtextParser"], [32, 4, 1, "", "acronyms"], [32, 4, 1, "", "edge_colors"], [32, 4, 1, "", "filename"], [32, 4, 1, "", "links2OPMs"], [32, 4, 1, "", "node_colors"], [32, 4, 1, "", "objectList"], [32, 4, 1, "", "opmGraph"], [32, 4, 1, "", "processList"], [32, 5, 1, "", "returnAcronym"], [32, 5, 1, "", "returnAttributeList"], [32, 5, 1, "", "returnGraph"], [32, 5, 1, "", "returnObjectList"], [32, 5, 1, "", "returnProcessList"], [32, 5, 1, "", "returnsExternalLinks"], [32, 4, 1, "", "sentences"]], "src.dackar.utils.utils": [[34, 2, 1, "", "getOnlyWords"], [34, 2, 1, "", "getShortAcronym"], [34, 1, 1, "", "logger"]], "src.dackar.workflows": [[35, 0, 0, "-", "OperatorShiftLogsProcessing"], [36, 0, 0, "-", "RuleBasedMatcher"], [37, 0, 0, "-", "WorkOrderProcessing"], [38, 0, 0, "-", "WorkflowBase"]], "src.dackar.workflows.OperatorShiftLogsProcessing": [[35, 3, 1, "", "OperatorShiftLogs"], [35, 1, 1, "", "logger"]], "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs": [[35, 4, 1, "", "_allRelPairs"], [35, 4, 1, "", "_extractedInfoNames"], [35, 4, 1, "", "_objList"], [35, 4, 1, "", "_relationNames"], [35, 4, 1, "", "_subjList"], [35, 5, 1, "", "extractCausalRelDep"], [35, 5, 1, "", "extractInformation"], [35, 5, 1, "", "extractRelDep"], [35, 5, 1, "", "extractStatus"], [35, 5, 1, "", "handleInvalidSent"], [35, 5, 1, "", "handleValidSent"], [35, 5, 1, "", "isSubElement"], [35, 5, 1, "", "isSubElements"], [35, 5, 1, "", "reset"], [35, 5, 1, "", "textProcess"]], "src.dackar.workflows.RuleBasedMatcher": [[36, 3, 1, "", "RuleBasedMatcher"], [36, 1, 1, "", "logger"]], "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher": [[36, 5, 1, "", "collectCauseEffectSents"], [36, 5, 1, "", "collectExtactedCausals"], [36, 5, 1, "", "extractHealthStatus"], [36, 5, 1, "", "extractInformation"], [36, 5, 1, "", "extractRelDep"], [36, 5, 1, "", "findHealthStatus"], [36, 5, 1, "", "getHealthStatusForObj"], [36, 5, 1, "", "getHealthStatusForPobj"], [36, 5, 1, "", "getHealthStatusForSubj"], [36, 5, 1, "", "getLeftSSCEnts"], [36, 5, 1, "", "getRightSSCEnts"], [36, 5, 1, "", "getSSCEnt"], [36, 5, 1, "", "identifyCauseEffectForAttr"], [36, 5, 1, "", "identifyCauseEffectForClauseModifier"], [36, 5, 1, "", "identifyCauseEffectForNsuj"], [36, 5, 1, "", "isValidCausalEnts"], [36, 5, 1, "", "reset"], [36, 5, 1, "", "selectValidEnts"], [36, 5, 1, "", "splitEntsFollowingNounCausal"]], "src.dackar.workflows.WorkOrderProcessing": [[37, 3, 1, "", "WorkOrderProcessing"], [37, 1, 1, "", "logger"]], "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing": [[37, 4, 1, "", "_allRelPairs"], [37, 4, 1, "", "_relationNames"], [37, 5, 1, "", "addKeywords"], [37, 5, 1, "", "extractHealthStatus"], [37, 5, 1, "", "extractInformation"], [37, 5, 1, "", "extractRelDep"], [37, 5, 1, "", "reset"]], "src.dackar.workflows.WorkflowBase": [[38, 3, 1, "", "WorkflowBase"], [38, 1, 1, "", "_corefAvail"], [38, 1, 1, "", "logger"], [38, 1, 1, "", "ver"]], "src.dackar.workflows.WorkflowBase.WorkflowBase": [[38, 5, 1, "", "__call__"], [38, 4, 1, "", "_causalFile"], [38, 4, 1, "", "_causalKeywordID"], [38, 4, 1, "", "_causalKeywords"], [38, 4, 1, "", "_causalNames"], [38, 4, 1, "", "_causalPOS"], [38, 4, 1, "", "_causalSentsNoEnts"], [38, 4, 1, "", "_causalSentsOneEnt"], [38, 4, 1, "", "_conjectureFile"], [38, 4, 1, "", "_conjectureKeywords"], [38, 4, 1, "", "_coref"], [38, 4, 1, "", "_doc"], [38, 4, 1, "", "_entHS"], [38, 4, 1, "", "_entID"], [38, 4, 1, "", "_entStatus"], [38, 4, 1, "", "_entityLabels"], [38, 4, 1, "", "_entityRuler"], [38, 4, 1, "", "_entityRulerMatches"], [38, 4, 1, "", "_extractedCausals"], [38, 4, 1, "", "_matchedSents"], [38, 4, 1, "", "_matchedSentsForVis"], [38, 4, 1, "", "_rawCausalList"], [38, 4, 1, "", "_screen"], [38, 4, 1, "", "_statusFile"], [38, 4, 1, "", "_statusKeywords"], [38, 4, 1, "", "_textProcess"], [38, 4, 1, "", "_updateCausalKeywords"], [38, 4, 1, "", "_updateStatusKeywords"], [38, 4, 1, "", "_visualizeMatchedSents"], [38, 5, 1, "", "addEntityPattern"], [38, 5, 1, "", "addKeywords"], [38, 5, 1, "", "bfs"], [38, 5, 1, "", "collectSents"], [38, 4, 1, "", "dataframeEntities"], [38, 4, 1, "", "dataframeRelations"], [38, 4, 1, "", "entityRuler"], [38, 5, 1, "", "extract"], [38, 5, 1, "", "extractInformation"], [38, 5, 1, "", "extractLemma"], [38, 5, 1, "", "findHealthStatus"], [38, 5, 1, "", "findLeftSubj"], [38, 5, 1, "", "findObj"], [38, 5, 1, "", "findRightKeyword"], [38, 5, 1, "", "findRightObj"], [38, 5, 1, "", "findSubj"], [38, 5, 1, "", "findVerb"], [38, 5, 1, "", "getAmod"], [38, 5, 1, "", "getAmodOnly"], [38, 5, 1, "", "getCompoundOnly"], [38, 5, 1, "", "getConjuncts"], [38, 5, 1, "", "getCustomEnts"], [38, 5, 1, "", "getIndex"], [38, 5, 1, "", "getKeywords"], [38, 5, 1, "", "getNbor"], [38, 5, 1, "", "getPhrase"], [38, 5, 1, "", "getStatusForObj"], [38, 5, 1, "", "getStatusForPobj"], [38, 5, 1, "", "getStatusForSubj"], [38, 5, 1, "", "isConjecture"], [38, 5, 1, "", "isNegation"], [38, 5, 1, "", "isPassive"], [38, 5, 1, "", "isValidCausalEnts"], [38, 5, 1, "", "isValidKeyword"], [38, 4, 1, "", "name"], [38, 4, 1, "", "nlp"], [38, 5, 1, "", "reset"], [38, 5, 1, "", "textProcess"], [38, 4, 1, "", "type"], [38, 5, 1, "", "validSent"], [38, 5, 1, "", "visualize"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:attribute", "5": "py:method"}, "terms": {"": [14, 18, 23, 30, 32, 34, 38, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57], "0": [2, 18, 20, 21, 42, 43, 44, 45, 46, 48, 49, 50, 54, 56, 57], "00": [46, 57], "000": [46, 57], "049269914627075195": 46, "05667": 18, "087954759597778": 56, "0x123e4e810": 54, "0x127eb2310": 54, "0x128033470": 54, "0x128033a70": 54, "0x12815f4d0": 54, "0x1282128d0": 54, "0x12a781a90": 54, "0x12e866270": 53, "0x12e867d70": 53, "0x134590ad0": 53, "0x134f8fe60": 53, "0x134f8ff40": 53, "0x13e912890": 53, "0x13e924610": 53, "0x16b0fede0": 51, "0x346dd7110": 51, "0x346dd7a10": 51, "0x375919150": 51, "0x375a63a90": 51, "0x375a89d90": 51, "1": [0, 2, 14, 18, 20, 21, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57], "10": [45, 46, 48, 49, 50, 51, 53, 54, 56, 57], "100": [45, 46, 56, 57], "1000": 56, "1000000001": [46, 55], "100_cur_": [46, 57], "102": 45, "104": 45, "105": 45, "106": 45, "107": 45, "11": [44, 46, 49, 50, 53, 54, 56, 57], "117": 57, "12": [46, 49, 50, 53, 54, 56, 57], "1200": [46, 55], "123": [46, 57], "1234": [46, 57], "123_cur_abc": 57, "123_cur_abc_cur_": [46, 57], "13": [46, 49, 50, 53, 54, 57], "14": [46, 53, 54, 57], "15": [46, 53, 54, 57], "150": [46, 55], "16": [46, 53, 54, 55, 57], "1644735": 20, "17": [46, 53, 54, 55, 57], "18": [46, 53, 54, 55, 57], "1802": 18, "19": [46, 53, 54, 57], "198867082595825": 56, "1a": [46, 50, 53, 54], "1bc": 45, "1efgh": 45, "1pation": [46, 57], "1st": 55, "2": [14, 21, 26, 42, 43, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57], "20": [46, 47, 48, 49, 53, 54, 57], "2000000": 55, "2021": [32, 46, 57], "2022": [7, 23, 30, 36], "2024": [22, 26, 34, 35, 37, 38], "2025": 5, "21": [46, 47, 50, 53, 54, 56, 57], "211": 53, "21473": [46, 55], "22": [53, 54], "23": [53, 54, 55], "24": [45, 47, 53, 54, 57], "24hour": 45, "24hr": 45, "25": [53, 54], "26": [44, 53, 54, 57], "27": [53, 54, 57], "28": [53, 54, 57], "29": [53, 54], "2nd": 55, "3": [26, 32, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57], "30": [53, 54, 57], "305": 26, "31": [53, 54], "31713942870949496": 56, "32": [53, 54, 57], "33": [53, 54, 57], "34": [46, 47, 50, 53, 54, 57], "34r": 45, "35": [53, 54], "36": [53, 54], "3693": 45, "37": [53, 54], "377617835998535": 45, "38": [53, 54, 57], "39": [46, 48, 50, 51, 53, 54, 55, 57], "4": [14, 43, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57], "40": [53, 54, 55, 57], "4006917476654053": 46, "41": 53, "42": [46, 53, 55, 57], "4229929447174072": 49, "42nd": 55, "43": 53, "43946127500409304": 56, "44": [53, 57], "4493210315704346": 51, "45": [21, 53], "4567": [46, 57], "46": 53, "462": [46, 55], "465039014816284": 56, "47": 53, "5": [42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57], "52210619": 26, "53": 57, "555": [46, 57], "5pm": [10, 13], "6": [45, 46, 49, 50, 53, 54, 55, 56, 57], "60": 57, "61": 57, "614": 50, "628759145736694": 50, "630": 50, "6415700912475586": 48, "646389961242676": 47, "65": 57, "66": 57, "67": 57, "69": 57, "7": [45, 46, 49, 50, 53, 54, 55, 56, 57], "7148": 45, "7264": 53, "7309439182281494": 50, "75": [46, 55], "7603": 45, "79": 57, "8": [45, 46, 48, 49, 50, 53, 54, 55, 56, 57], "80": 57, "804": 18, "81": 57, "82": 45, "83": 57, "8340160846710205": 56, "84658": 45, "85": [20, 21], "858644962310791": 50, "89": 57, "8hour": 45, "8hr": 45, "9": [43, 45, 46, 49, 50, 53, 54, 55, 56, 57], "90": 57, "91": 54, "91120": [48, 51], "9171": 45, "94": 54, "95": 54, "96": 54, "97": 54, "979063749313354": 50, "99": [46, 54, 57], "A": [30, 34, 42, 45, 46, 50, 53, 54, 55, 57], "AND": [48, 51], "FOR": 45, "For": [21, 32, 43, 44], "IF": 45, "IN": 53, "If": 53, "In": [23, 54], "It": [10, 13, 26, 46, 57], "No": [46, 48, 51, 53, 55, 57], "That": [46, 57], "The": [7, 8, 11, 12, 14, 15, 16, 18, 20, 21, 42, 45, 46, 47, 53, 54, 55, 56, 57, 58], "These": [46, 57], "To": 53, "_": [7, 45, 48, 51, 53, 54, 55, 56], "__call__": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 38], "__driver": 5, "__init__": 53, "__main__": [53, 54], "__name__": [51, 54], "__pwd": 5, "__uri": 5, "__user": 5, "__version__": 2, "_allrelpair": [35, 37], "_causalfil": 38, "_causalkeyword": [37, 38], "_causalkeywordid": 38, "_causalnam": 38, "_causalpo": 38, "_causalsentsno": 38, "_causalsentson": 38, "_conjecturefil": 38, "_conjecturekeyword": 38, "_coref": 38, "_corefavail": 38, "_create_nod": 5, "_create_rel": 5, "_cur_": [46, 57], "_cur_1": [46, 57], "_cur_100": [46, 57], "_doc": 38, "_email_": 57, "_emoji_": [46, 57], "_enth": 38, "_entid": 38, "_entitylabel": 38, "_entityrul": 38, "_entityrulermatch": 38, "_entstatu": [38, 48], "_extractedcaus": [38, 47], "_extractedinfonam": 35, "_find_nod": 5, "_get_al": 5, "_load_csv_for_rel": 5, "_load_csv_nod": 5, "_matcheds": 38, "_matchedsentsforvi": 38, "_number_": [46, 57], "_objlist": 35, "_phone_": 57, "_rawcausallist": 38, "_relationnam": [35, 37], "_reset": 5, "_screen": 38, "_statusfil": 38, "_statuskeyword": [37, 38], "_subjlist": 35, "_tag_": [46, 57], "_textprocess": 38, "_updatecausalkeyword": 38, "_updatestatuskeyword": 38, "_url_": [46, 57], "_user_": 57, "_visualizematcheds": 38, "a218": 45, "ab": [45, 50], "abbrdatabas": 23, "abbrdict": [22, 23, 45, 50], "abbrevi": [0, 23, 24, 42, 52], "abbreviationsfilenam": 23, "abbreviationsub": [22, 45, 50], "abbrexp": 50, "abbrexpand": [23, 50], "abbrlist": [23, 50], "abbrprocess": [23, 50], "abbrtyp": 23, "abc": [46, 57], "abcd01d": 45, "abl": 50, "abol": 50, "abolit": 50, "about": 13, "abov": 50, "absol": 50, "absolut": 50, "abspath": [45, 46, 47, 48, 49, 50, 51, 56], "abst": 50, "abstr": 50, "abstract": [38, 50], "accent": [23, 46, 49], "accent_text1": 57, "accent_text2": 57, "accep": 50, "accept": [46, 50], "accom": 50, "accomm": 50, "accomod": 50, "accord": [23, 50], "acm": 53, "acronym": [26, 32, 49], "action": [35, 47], "activ": [5, 43, 44, 50], "actual": [26, 47], "ad": [7, 30, 54], "adapted_lesk": [18, 20], "add": [23, 30, 37, 38, 49, 54], "add_pattern": [53, 54], "add_pip": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 53, 54], "addentitypattern": [38, 47, 48, 49], "addhandl": [51, 54], "addit": [20, 45], "addkeyword": [37, 38], "addwordstodictionari": [23, 46, 49], "adequ": 47, "adj": [53, 54], "adjectiv": 49, "admin": 50, "administr": 50, "adp": [53, 54], "adv": [50, 53, 54], "advanc": 50, "advmod": 53, "affect": [46, 53], "afl": 50, "after": [7, 36, 38, 46, 50, 51, 54], "ag": 47, "again": [46, 57], "against": 50, "agl": 50, "agst": 50, "ah": 50, "aid": 50, "air": 46, "al": [46, 57], "alex": 53, "alia": [7, 35, 48, 51], "alias": [7, 54], "aliaslookup": [7, 54], "aliasresolv": [7, 51, 54], "all": [5, 7, 26, 30, 32, 38, 42, 43, 44, 45, 46, 47, 54, 57], "all_text": 57, "allow": 57, "along": [42, 57], "alpha": 21, "alreadi": [21, 54], "also": [44, 49, 55, 57, 58], "alt": 50, "altern": 50, "although": [47, 53], "alvat": 20, "alwai": 51, "amend": 38, "amer": 50, "american": 50, "amod": [35, 38, 53, 54], "among": 38, "amp": 50, "an": [20, 23, 26, 32, 42, 46, 47, 55, 57, 58], "anal": 50, "analysi": [20, 21, 38, 42, 50], "analyt": 50, "analyz": 23, "anam": 54, "anaphora": [7, 54], "anaphorcoref": [7, 54], "anaphorentcoref": 7, "angl": 50, "ani": [45, 53, 57], "anishvarsha": 18, "ann": 50, "annual": 50, "anomal": [46, 50], "anoth": [18, 20], "answ": 50, "answer": 50, "antici": [46, 57], "anticip": [46, 57], "apach": 42, "app": 50, "appear": [46, 53], "append": [45, 46, 47, 48, 49, 50, 51, 53, 54, 56], "apper": 50, "appli": 46, "appoint": 50, "approach": 42, "approx": 50, "approxim": 50, "appt": 50, "apr": [14, 50], "april": [35, 38, 50], "aql": 50, "ar": [23, 26, 36, 42, 46, 50, 57], "arch": 50, "architectur": 50, "archiv": 42, "arg": [28, 35, 36, 37, 38, 55], "argument": 23, "arnumb": 20, "arr1": 18, "arr2": 18, "arrai": [20, 21], "arrang": [47, 50], "arrgt": 50, "arriv": 50, "artic": 50, "articl": [7, 53, 54], "articul": 50, "arxiv": 18, "as_span": 54, "asap": 50, "ascii": 57, "asctim": [18, 47, 48, 49], "asdv": 47, "ass": 50, "assem": 50, "assembli": 50, "asset": 26, "assi": 50, "assign": [7, 54], "assmbi": 50, "associ": [23, 36, 38], "asspan": [8, 9, 11, 12, 14, 16], "assumpt": [7, 20, 54], "asusto": [46, 57], "asust\u00f3": [46, 57], "ation": 46, "atmo": 50, "atmospher": [47, 50], "attr": [30, 36, 47, 48, 49, 51, 53], "attrib": 50, "attribut": [5, 32, 50, 54], "attribute_rul": [51, 53, 54], "attributerul": [51, 53, 54], "atyp": 54, "aug": [14, 50], "august": 50, "author": [5, 7, 22, 23, 26, 30, 32, 34, 35, 36, 37, 38], "auto": [0, 47, 50, 56], "autoapi": 0, "autocorrect": [23, 42, 43, 44, 49, 52], "automat": [23, 47, 50], "autonotebook": [47, 50, 56], "autoreload": 48, "aux": [50, 53, 54], "auxiliari": 50, "auxpass": [53, 54], "avail": [45, 46, 54, 57, 58], "availcheck": 49, "averag": 50, "averaged_perceptron_tagg": [43, 44], "avg": 50, "avoid": 46, "b": [14, 34, 46, 47, 48, 49, 57], "bar": [46, 57], "base": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 28, 32, 35, 36, 37, 38], "basic": 50, "basicconfig": [47, 48, 49], "batt": 50, "batteri": 50, "bc": 50, "beam": 50, "bear": [46, 50, 53, 54, 56], "beautifulsoup4": [43, 44], "becam": 46, "becaus": [47, 53], "been": [21, 26, 46, 47, 50, 53, 54], "bef": 50, "befor": 50, "behavior": [21, 46], "being": 47, "belong": [36, 38], "best": [20, 21], "bestpair": 20, "bestsyn": [20, 21], "beta": 21, "betw": 50, "between": [18, 20, 21, 26, 30, 50, 57], "beyond": 47, "bf": 38, "bhc": 50, "bia": 55, "bill": 50, "billion": [46, 55], "bird": 55, "bjdewild": 57, "bldg": 50, "bled": 46, "blk": 50, "block": 50, "blue": 30, "blueprint": 50, "board": 50, "bodi": [26, 46, 57], "bof": 50, "bolt": 50, "bom": 50, "bool": [3, 11, 12, 18, 20, 21, 30, 36, 38, 57], "boot": 22, "bord": 50, "border": 50, "bot": [46, 50, 57], "both": [18, 20, 21, 50, 53], "bottom": 50, "bp": 50, "bp_text": 57, "bracket": [23, 26, 45, 46, 49], "bracket_text1": 57, "bracket_text2": 57, "bracket_text3": 57, "bracket_text4": 57, "bracket_text5": 57, "branch": 42, "breadth": [36, 38], "break": 54, "brg": 50, "bronz": 50, "brown": 20, "browndict": 20, "brownic": 18, "browninfo": 20, "brz": 50, "bsc": 50, "btm": 50, "btw": 50, "btwn": 50, "bug": [42, 55], "build": 50, "built": 50, "bullet_point": [23, 46, 49, 57], "burnout": [46, 50, 53, 54], "busi": [46, 53, 57], "bussmann": 47, "butt": 50, "bw": 50, "c": [43, 50], "cabl": 50, "cad": 50, "cage": [8, 11, 12, 14, 16, 46], "cal": 50, "calcul": [18, 21], "calib": [46, 50], "calibr": 50, "calif": 46, "call": [7, 54], "callback": [6, 9, 10, 11, 12, 13, 15, 16], "can": [5, 7, 23, 38, 42, 43, 44, 46, 54, 55, 57], "cannot": [46, 55], "canon": 57, "cansual": [36, 38], "cap": 50, "capac": [47, 50], "car": 55, "carbid": 50, "care": [5, 50, 57], "case": [23, 49], "cat": 50, "catal": 50, "catalogu": 50, "categori": 50, "caus": [8, 11, 12, 14, 16, 36, 38, 46, 47, 50, 53, 54], "causal": [35, 36, 37, 38], "causal_keyword": [47, 49], "causal_keywords_entity_rul": [47, 49], "causaleffect": 49, "causalfilenam": [47, 49], "causalid": [47, 49], "causalkeyword": 36, "causalkeywordid": [35, 36, 38, 47, 49], "causallabel": [47, 49], "causallist": 49, "causalnam": 47, "causalstatu": 36, "cause_effect_keywords_fil": [47, 49], "causelist": 36, "cavit": [46, 50, 53, 54], "cbl": 50, "cc": [53, 54], "ccomp": [53, 54], "cconj": [53, 54], "cd": [43, 44], "cda": 50, "cement": 50, "cent": [36, 50], "center": 50, "centrif": 50, "centrifug": 50, "centrifugalpumpful": 26, "centsindex": 36, "cert": 50, "certif": 50, "cfw": 50, "ch": [50, 51, 54], "chain": [46, 54], "cham": 50, "chamb": 50, "chamber": 50, "chamfer": 50, "chan": [46, 50], "chang": [46, 50, 55], "chann": [46, 50], "channel": 50, "chap": 50, "chapter": 50, "char": [46, 49, 57], "check": [8, 11, 12, 14, 16, 23, 36, 38, 43, 44, 46, 49, 50, 53, 54], "checkacronym": 32, "checker": [23, 46, 49], "checkertyp": 23, "chem": 50, "chemistri": 50, "child": [36, 38], "children": [38, 53], "chk": 50, "chng": 50, "chosen": 23, "circ": 50, "circl": 50, "circuit": 47, "circul": 50, "cl": 50, "class": [46, 54, 57], "classif": 50, "classifi": [43, 44], "claus": 36, "clean": [26, 35, 38, 48, 49, 51], "clean_text": 57, "cleandoc": 49, "cleanedgraph": 26, "cleanedt": 50, "cleanedtext": [45, 50], "cleanedtext2": 50, "clearanc": [45, 50], "click": [46, 57], "client": 26, "close": [5, 10, 13], "closest": [36, 38], "clr": 50, "club": 46, "cmatcher": [6, 9, 10, 13, 15], "cmu": 50, "cndct": 50, "cntl": 50, "cntmnt": 50, "cntmt": 50, "cntrl": 50, "cntrld": 50, "code": [32, 42], "coef": 50, "coeff": 50, "coeffici": 50, "cogliati": 58, "coher": [42, 52], "coil": 47, "col": [47, 49, 50], "collect": [23, 36, 38], "collectcauseeffects": 36, "collectextactedcaus": 36, "collects": 38, "color": [30, 32], "column": [5, 47, 49, 50, 54], "columnnam": 38, "com": [18, 20, 26, 46, 55, 57], "comb": 50, "combin": 50, "come": [6, 8, 9, 11, 12, 14, 16, 46], "comm": 50, "comma": [26, 49], "comment": [46, 57], "common": 23, "commun": 50, "comp": [50, 54], "comp1": 26, "comp2": 26, "comp3": 26, "compact": 53, "compani": 53, "comparison": 20, "compat": 57, "compd": 38, "complet": 26, "compon": [7, 26, 30, 53, 54], "composit": [50, 57], "compound": [38, 53, 54], "comput": [18, 20, 21, 50, 56], "conc": 50, "concent": 50, "concentr": 50, "concept": 21, "concern": [46, 57], "concr": 50, "concret": 50, "cond": 50, "conda": [43, 44], "condit": [46, 47], "conduct": [23, 50], "conf": 5, "config": [0, 2, 3, 6, 9, 10, 11, 12, 13, 15, 16, 47, 49], "config_file_path": 3, "configfilenam": 1, "congjian": 58, "conj": [30, 53, 54], "conjectur": [6, 35, 36, 38, 48, 49], "conjecture_ent": 6, "conjectureent": [0, 10, 13, 15, 17], "conjunct": 38, "conjunctlist": 38, "conn": 50, "connect": [5, 50], "connetgraph": 26, "conscienc": [46, 57], "consequ": [46, 47, 50, 53, 54], "consid": 20, "const": 50, "constant": [21, 50], "construct": [18, 20, 21], "constructsemanticvector": [20, 21], "constructsemanticvectorusingdisambiguatedsynset": 21, "constructsimilarityvectorpawarmagomethod": 18, "constructsynsetordervector": 21, "constructwordordervector": 20, "cont": 50, "contain": [0, 20, 23, 26, 30, 36, 38, 45, 46, 50], "content": [45, 57], "context": [20, 23], "contextualspellcheck": [42, 43, 44, 49, 52], "conting": 45, "continu": 50, "contribut": [20, 21, 47], "contributor": 42, "control": [47, 50], "conveni": 57, "convert": [20, 49, 55, 56], "convertsentstosynset": [20, 56], "convertsentstosynsetswithdisambigu": [20, 56], "converttosynset": 20, "copi": [42, 48, 57], "coref": 54, "coref_chain": [53, 54], "corefer": [7, 54], "corefere": [7, 43, 44, 54], "coreferee_model_en": [43, 44], "corefereebrok": [53, 54], "corner": 50, "corp": 53, "corpora": [43, 44], "corpu": [18, 20], "correct": [23, 42, 52], "correctli": 49, "correpond": 20, "correpos": 26, "correspod": 23, "correspond": [20, 23, 26, 45, 46], "cosine_lesk": [18, 20], "could": [46, 50], "count": [18, 20], "countri": 53, "coupl": 50, "cover": 50, "cp": [43, 44], "cr": 50, "crac": 50, "crack": [46, 50], "crash": 55, "creat": [0, 5, 7, 22, 23, 26, 30, 32, 34, 35, 36, 37, 38, 42, 43, 44, 56, 57], "create_conjecture_compon": 6, "create_emergent_act": 8, "create_general_compon": 9, "create_location_compon": 10, "create_nod": 5, "create_phrase_matcher_compon": 11, "create_rel": 5, "create_simple_matcher_compon": 12, "create_temporal_attribute_compon": 13, "create_temporal_relation_compon": 15, "create_unit_compon": 16, "createpattern": [0, 29], "createtextacynormalizefunct": 23, "createtextacyremovefunct": 23, "createtextacyreplacefunct": 23, "crnr": 50, "croot": 36, "csv": [5, 26], "ct": 50, "ctmt": 50, "ctr": 50, "ctrl": 50, "cultur": 55, "curli": [49, 57], "curr": 57, "curr_text": 57, "currency_symbol": [23, 46, 49, 57], "current": [7, 26, 30, 50, 54, 55], "custom": [7, 30, 38], "customent": 38, "customlabel": [7, 54], "custompip": 54, "custompipelinecompon": [0, 17, 51], "customtoken": 30, "cvr": 50, "cw": [37, 50], "cwd": [45, 46, 47, 48, 49, 50, 51, 56], "cws_compon": [48, 51], "cws_entity_rul": 48, "cycl": 47, "cyl": 50, "cylind": 50, "cypher": 5, "d": [14, 34, 45, 47, 48, 49, 50], "dackar": [0, 40, 44, 45, 46, 47, 48, 49, 50, 51, 56], "dackar_lib": [43, 44, 47, 50, 53, 56], "dai": [14, 46, 50], "data": [23, 26, 30, 36, 38, 42, 46, 50, 54], "databas": [5, 23], "datafram": [23, 30, 54], "dataframeent": 38, "dataframerel": 38, "dataset": [35, 37], "datefmt": [47, 48, 49], "datepattern": 14, "datetimerecogn": 55, "db": 5, "dbm": 5, "debug": [47, 49], "dec": [14, 50], "decemb": 50, "decid": 53, "decomposit": 57, "decon": 50, "decontamin": 50, "def": [50, 53, 54], "default": [5, 54, 57], "defin": [32, 48, 49, 51], "definit": [46, 50, 57], "deflect": [8, 11, 12, 14, 16, 46], "deg": 50, "degr": 50, "degrad": [46, 50, 53, 54], "degre": 46, "del": [46, 57], "delet": 5, "delta": [20, 21, 56], "demin": 50, "deminer": 50, "demo": [42, 52], "dep": [35, 36, 38, 53, 54], "dep_": [53, 54], "dep_pars": [51, 53, 54], "depart": 50, "depend": [30, 36, 38, 42, 46, 49, 54], "dependencypars": [51, 53, 54], "depress": 50, "depressur": 50, "dept": 50, "depth": [20, 21], "dereferenc": 54, "descr": 50, "descreas": 21, "describ": 30, "descript": [26, 50], "design": [26, 50], "desir": [45, 46], "det": [7, 50, 53, 54], "deten": 50, "detens": 50, "determ": 50, "determin": [20, 23, 50, 54], "dev": 2, "develop": [26, 42], "dewild": [46, 57], "df": [7, 30, 54], "dgarrett622": 23, "dia": 50, "diagram": 26, "diagramnam": 26, "diam": 50, "diamet": 50, "diaph": 50, "diaphragm": 50, "dict": [5, 20, 22, 23, 26, 30, 37, 38], "dictionari": [5, 22, 23, 26, 38, 45], "did": 46, "diego": 58, "differ": 42, "digit": 30, "dii": 50, "dir": 50, "direct": [36, 57], "directli": [23, 57], "director": 50, "directori": 5, "disabl": 47, "disambigu": [20, 21, 56], "disambiguationmethod": 18, "disambiguationsimmethod": 20, "disch": 50, "discharg": 50, "discnt": 50, "disconnect": 50, "discov": 50, "discoveri": 50, "disp": 50, "displ": 50, "displac": 50, "displaci": [45, 48, 51, 53, 54], "displayn": [30, 54], "distanc": 21, "distil": 50, "dn": 50, "do": [35, 36, 38, 42, 45, 50, 57], "dobj": [35, 36, 38, 53, 54], "doc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 30, 36, 38, 45, 47, 48, 51, 53, 54, 55, 57], "doc1": 53, "doc2": 53, "document": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30, 36, 38, 55], "doe": [50, 55], "dollar": 55, "doubl": [46, 57], "dowload": [43, 44], "downcom": 50, "download": 42, "downpip": 50, "doz": 50, "dozen": 50, "dp": 50, "drain": 50, "draw": 50, "driver": 5, "drn": 50, "dropna": [47, 49], "dru": 46, "dscnct": 50, "dscnt": 50, "due": [46, 47, 50, 53, 54], "dump": 47, "dumpnodesedgesfil": 26, "duplic": [11, 12, 20, 50], "dure": [8, 11, 12, 14, 16, 46], "duti": 47, "dwg": 50, "dwncmr": 50, "e": [20, 21, 26, 49, 54], "e08d": 45, "each": [23, 50, 57], "easier": 53, "easiest": 58, "east": 50, "econ": 50, "econom": 50, "edg": 30, "edge_color": 32, "eff": 50, "effect": [21, 36, 38, 49], "effectlist": 36, "effici": 50, "either": [30, 37, 38, 47], "el": [46, 57], "elaps": 50, "elec": 50, "electr": [47, 50], "elem": 50, "elem1": 35, "elem2": 35, "element": [26, 50], "elemlist": 35, "elev": 50, "els": [3, 54], "elv": 50, "em": 57, "email": [23, 46, 49], "email_text": 57, "emb": 50, "embed": 26, "embent": 26, "embrittl": 50, "emerg": 50, "emergentact": 8, "emergentactivityent": [0, 17], "emoji": [23, 46, 49, 55], "emoji_text": 57, "emploi": [20, 23], "emrg": 50, "en": [43, 44, 45, 46, 47, 50, 51, 53, 54, 56], "en_core_web_lg": [43, 44, 45, 47, 48, 49, 51, 53, 54, 55], "en_core_web_sm": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "end": [30, 38, 45, 53, 54], "energ": 47, "eng": 50, "engin": [47, 50], "englishlemmat": [51, 53, 54], "engr": 50, "engrg": 50, "enity_rul": 51, "enough": [8, 11, 12, 14, 16, 46, 53], "ent": [35, 36, 38, 47, 48, 49, 51, 53, 54], "ent_id_": 48, "ent_iob_": 54, "ent_typ": 54, "ent_type_": [53, 54], "enth": 36, "entid": [28, 35, 36, 37, 38, 47, 48, 49, 51], "entidlist": [48, 51], "entiti": [7, 11, 12, 26, 28, 30, 32, 35, 36, 38, 48, 51, 54], "entity_fil": [47, 49], "entity_rul": [51, 53, 54], "entity_text": 48, "entityfil": [47, 49], "entitylist": [47, 49], "entitynod": 26, "entityrecogn": 53, "entityrul": [6, 9, 10, 13, 15, 38, 53, 54], "entlabel": [28, 48, 49, 51], "entlist": [30, 36, 38], "entri": 47, "enttyp": 38, "enumer": 54, "env": [47, 50, 53, 56], "environ": [50, 53], "eq": 50, "eql": 50, "equal": [46, 50, 57], "equip": 50, "equiv": 50, "equival": [50, 57], "erect": 45, "error": [48, 51], "esf": 50, "esp": 50, "especi": 50, "est": [46, 50, 57], "establ": 50, "establish": 50, "estim": [20, 50], "et": [46, 50, 57], "eta": 50, "etc": [34, 50], "etcetera": 50, "even": [46, 57], "event": 47, "everi": 50, "everyth": [46, 57], "evid": 50, "ew": 50, "exampl": [26, 32, 38, 42, 49, 52, 57], "except": 38, "excess": [46, 50, 53, 54], "exchang": 50, "excit": [46, 57], "excit\u00e9": [46, 57], "exclprepo": [35, 36, 37, 38], "exclud": [35, 36, 37, 38, 47, 48, 49], "exec": 50, "execut": [5, 50], "exess": 46, "exist": [22, 38], "exlcud": 38, "exp": 21, "expand": [7, 22, 23, 54], "expandedtext": [22, 23], "expandent": [7, 54], "expans": 7, "experienc": [8, 11, 12, 14, 16, 46], "expl": 50, "explan": 50, "explos": 53, "exponenti": 21, "express": [23, 36, 38], "ext": 50, "extend": [7, 30, 38, 47, 49, 54], "extens": [7, 54], "extern": [26, 32, 49, 50], "extract": [26, 32, 35, 36, 37, 38], "extract_person_org": 53, "extractcausalreldep": 35, "extracthealthstatu": [36, 37], "extractinform": [35, 36, 37, 38], "extractlemma": [30, 38], "extractreldep": [35, 36, 37], "extractstatu": 35, "f": [46, 50, 54, 55, 57], "factor": [21, 50], "fail": [15, 32, 46, 47, 50, 53, 54], "failur": [15, 46, 47, 50, 53, 54], "faint": 46, "fals": [3, 11, 12, 18, 20, 21, 23, 30, 36, 38, 46, 47, 48, 49, 53, 54, 57], "fam": 50, "famil": 50, "familiar": 50, "fanci": [46, 57], "far": 50, "fast": [46, 47, 49, 57], "fat": 50, "fatigu": 50, "fdwtr": 50, "feb": [14, 50], "februari": [26, 34, 50], "feed": 50, "feedwat": 50, "few": 50, "fifti": [46, 55], "fig": 50, "figur": 50, "file": [3, 5, 26, 32, 38, 49, 50], "file_path": 5, "filenam": [26, 28, 32, 38, 50], "fillet": 50, "filter": 38, "filterwarn": [45, 46, 48], "find": [5, 23, 38], "find_nod": 5, "find_tempor": 14, "findhealthstatu": [36, 38], "findleftsubj": 38, "findobj": 38, "findoptimalopt": 23, "findrightkeyword": 38, "findrightobj": 38, "findsubj": 38, "findverb": 38, "fine_grain": 53, "first": [5, 7, 18, 20, 21, 23, 36, 38, 54, 55], "firstdeponli": [36, 38], "fit": [23, 50], "fitt": 50, "fixm": 45, "fl": 50, "flang": 50, "flg": 50, "flng": 50, "flnge": 50, "float": [18, 20, 21, 49, 55], "floor": 50, "flow": [8, 11, 12, 14, 16, 46, 50, 53, 54], "flower": 56, "fluid": 50, "flw": 50, "fnm": 47, "fo": 50, "fob": 50, "folder": 3, "follow": [10, 15, 23, 47, 49, 57], "foo": [46, 57], "foret": [46, 57], "forg": 43, "fork": 42, "form": [26, 30, 32, 46, 49, 57], "format": [47, 48, 49, 57], "forti": [46, 55], "for\u00eat": [46, 57], "found": [42, 46, 50, 53, 54, 56], "foundat": 50, "four": [46, 47, 55], "fourth": 55, "frac": 55, "fraction": 55, "fractional_list": 55, "fractionals_list": 55, "fragment": [46, 57], "frame": [30, 54], "frameworkdir": [45, 46, 47, 48, 49, 50, 51, 56], "francisco": 38, "free": 50, "freq": 50, "frequenc": [20, 23, 50], "fridai": [46, 57], "from": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 26, 38, 42, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57], "fsbw": 50, "ft": [47, 49], "ftg": 50, "ftp": 50, "fuel": 50, "full": [23, 49, 50], "funct": 50, "function": [23, 35, 38, 47, 49, 50, 51, 53, 54], "functionlist": 23, "functool": 57, "funni": [46, 57], "fuse": 47, "fut": 50, "futur": 50, "fuz": 47, "fv304": 26, "fw": 50, "g": [21, 26, 50], "galv": 50, "galvan": 50, "garcon": [46, 57], "gar\u00e7on": [46, 57], "gaug": [46, 50, 53, 54], "gd": 26, "gen": 50, "gener": [0, 9, 20, 21, 23, 26, 30, 35, 36, 37, 38, 45, 50, 51, 54], "general_ent": 9, "generalent": [0, 17, 51], "generateabbrdict": 23, "generatepattern": [28, 30], "generatepatternlist": [30, 47, 48, 49, 51], "geo": 50, "geog": 50, "geographi": 50, "get": [5, 20, 22, 36, 38, 54, 55, 58], "get_al": 5, "get_pip": 54, "getabbrevi": [22, 45, 50], "getamod": 38, "getamodonli": 38, "getcompoundonli": 38, "getconjunct": 38, "getcusto": 38, "getcwd": [45, 46, 47, 48, 49, 50, 51, 56], "getentid": 7, "gethealthstatusforobj": 36, "gethealthstatusforpobj": 36, "gethealthstatusforsubj": 36, "getindex": 38, "getkeyword": 38, "getleftssc": 36, "getlogg": [48, 51, 54], "getmisspelledword": [23, 46, 49], "getnbor": 38, "getonlyword": 34, "getpattern": 28, "getphras": 38, "getrightssc": 36, "getshortacronym": 34, "getsscent": 36, "getstatusforobj": 38, "getstatusforpobj": 38, "getstatusforsubj": 38, "github": [18, 20, 55, 58], "given": [18, 20, 21, 23, 30, 36, 38], "gloss": 50, "glossari": 50, "gn": 50, "go": [46, 57], "got": [46, 57], "gov": [50, 58], "govern": 50, "govt": 50, "gpe": [38, 53], "graph": [5, 26, 32], "graph_util": [0, 4], "ground": 50, "group": 36, "grow": 42, "gt": [51, 53, 54, 57], "gz": 43, "h": [21, 34, 47, 48, 49, 50, 57], "ha": [20, 21, 38, 46, 50, 53, 54], "had": [46, 47, 53], "half": 55, "hand": 50, "handl": [22, 23, 35, 46, 49], "handleabbrevi": 23, "handleabbreviationsdict": 23, "handleinvalids": 35, "handler": [42, 52], "handlevalids": 35, "happen": 46, "hard": 23, "hardwar": 50, "has_extens": 54, "has_pip": 53, "hash_text": 57, "hashtag": [23, 46, 49], "have": [18, 21, 23, 26, 35, 42, 46, 47, 50, 55], "hd": 50, "he": [22, 53], "head": [38, 46, 50, 53, 57], "headent": 38, "health": [35, 36, 37, 38, 49], "healthstatu": [36, 49], "heat": 50, "heater": 50, "hello": [12, 46, 54, 57], "helloworld": 54, "help": [42, 58], "her": 22, "here": [7, 20, 23, 46, 49, 54, 57], "hex": 50, "hexagon": 50, "hi": [22, 50, 53], "hierarch": 21, "high": [18, 47, 50], "higher": 20, "him": 22, "hist": 50, "histor": 50, "hole": 50, "holidai": 53, "honest": [46, 57], "hor": 50, "horiz": 50, "horizont": 50, "hour": [45, 47, 50], "how": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 42, 46, 57], "hp": 50, "hr": [45, 50], "ht": 50, "html": [32, 46, 47, 50, 56], "html_tag": [23, 46, 49, 57], "html_text": 57, "htr": 50, "http": [18, 20, 26, 45, 46, 47, 50, 55, 56, 57], "human": 50, "hundr": [46, 55], "hw": 50, "hx": 50, "hyd": 50, "hydr": 50, "hydraul": 50, "hydrogen": 50, "hyphen": 30, "hyphen_text": 57, "hyphenated_word": [23, 45, 46, 49, 57], "i": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 26, 30, 32, 35, 38, 42, 45, 46, 47, 49, 50, 53, 54, 55, 56, 57, 58], "iaw": 50, "ican": [46, 57], "id": [6, 7, 9, 10, 13, 15, 26, 30, 47, 48, 49, 50, 51, 54], "identifi": [20, 21, 23, 26, 32, 36, 38, 47], "identifybestsimilarsynsetfromsynset": 21, "identifybestsimilarsynsetpair": 20, "identifybestsimilarwordfromwordset": 20, "identifybestsynset": 20, "identifycauseeffectforattr": 36, "identifycauseeffectforclausemodifi": 36, "identifycauseeffectfornsuj": 36, "identifynounandverbforcomparison": 20, "identifywo": 45, "idx": 38, "ieee": 20, "ieeexplor": 20, "ig": 55, "ignor": [45, 46, 48, 55], "ignore_list": 55, "ijkl": 45, "iloc": 49, "im13": 47, "imit": 50, "imp": 50, "impel": [46, 50, 53, 54], "imperfect": 50, "impf": 50, "implement": 50, "import": [3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57], "import_folder_path": 3, "importerror": 55, "impr": 50, "improv": [42, 50], "inbd": 50, "inboard": 50, "inc": 53, "includ": [30, 36, 38, 46], "includepunct": [30, 54], "ind": 50, "indef": 50, "indefinit": 50, "indent": [50, 54], "index": [20, 21, 30, 36, 38, 42, 48, 51, 54], "indic": [26, 38, 50], "indir": 50, "indirect": 50, "induct": 50, "indust": 50, "industr": 50, "industri": [50, 56], "inf": 50, "infinit": 50, "infl": 50, "influenc": 50, "info": [20, 48, 49, 54], "infocontentnorm": [18, 20], "inform": [20, 21, 26, 35, 36, 37, 38, 49], "initcoref": [7, 54], "initi": [7, 54], "inj": 50, "inject": 50, "inl": 58, "innosl": 26, "inop": [46, 50, 53, 54], "inoper": 47, "inorg": 50, "inorgan": 50, "input": [49, 50, 57], "inq": 50, "inquiri": 50, "insp": 50, "inspec": 50, "inspect": [46, 50, 53, 54], "inst": 50, "instal": [42, 48, 50, 51], "installing_nltk_data": [43, 44], "instanc": 30, "instl": 50, "instr": 50, "instruct": 50, "instrument": 50, "insul": [45, 50], "int": [18, 20, 21, 30, 36, 38, 49, 50, 55, 57], "integr": 53, "interj": 50, "interject": 50, "intern": [47, 49, 50], "intersect": 50, "intl": 50, "intro": 50, "introd": 50, "introduct": 50, "inv": 50, "invert": 50, "investig": 47, "involv": 42, "io": [45, 46, 47, 50, 56], "iobj": [35, 38], "iprogress": [47, 50, 56], "ipython": 53, "ipywidget": [47, 50, 56], "is_digit": 45, "is_punct": [12, 45, 54], "isconjectur": 38, "islt": 50, "isneg": 38, "iso": [45, 50], "isol": 50, "ispass": 38, "issu": [42, 46, 55, 58], "issubel": 35, "isupd": 54, "isvalidcausal": [36, 38], "isvalidkeyword": 38, "item": 46, "item1": [46, 57], "item2": [46, 57], "item3": [46, 57], "item4": [46, 57], "item5": [46, 57], "item6": [46, 57], "item7": [46, 57], "item8": [46, 57], "iter": 54, "its": [20, 23, 26], "itself": 20, "j": [46, 56, 57, 58], "j08k": 45, "jaidevd": 55, "jan": [14, 50], "jannuari": 50, "jcn": [20, 21], "jcn_similar": 18, "join": [45, 46, 47, 48, 49, 50, 51, 54, 56], "joint": [20, 21, 50], "jointsyn": 21, "jointsynset": 21, "jointsynsetlist": 20, "jointword": [20, 21], "jointwordlist": 20, "jointwordsynset": 21, "joshua": 58, "json": 48, "jsp": 20, "jt": 50, "jul": 14, "jump": [36, 38], "jun": 14, "junc": 50, "junction": 50, "jupyt": [47, 48, 50, 51, 53, 54, 56], "k": 30, "keep": [7, 8, 11, 12, 14, 16, 30, 46], "kei": [5, 45, 46, 50], "keyword": [36, 37, 38, 49], "kj": 50, "know": [46, 57], "knowledge_graph": [0, 2], "ktype": [37, 38], "kw": 38, "kwarg": [28, 35, 36, 37, 38], "l1": 5, "l2": 5, "la": [46, 57], "lab": 50, "label": [5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 28, 30, 38, 47, 48, 49, 51, 53, 54, 55], "label_": [48, 53, 54], "laboratori": 50, "lack": 46, "laek": 46, "lammat": [30, 38], "lang": [51, 53, 54], "languag": [26, 30, 42, 48, 49, 53, 54, 55], "latest": [45, 46], "layer": 21, "lch": [20, 21], "lch_similar": 18, "le": [46, 57], "lead": [7, 53, 54], "leak": [50, 53, 54], "leakag": 46, "learn": [43, 44, 46, 57], "left": [36, 38, 50, 53, 54], "lemma": [30, 47, 48, 49, 51, 54], "lemma_": [53, 54], "lemmalist": 38, "lemmat": [51, 53, 54], "lemvar": 30, "len": [49, 53, 54, 56], "length": [20, 21, 50], "less": [20, 21], "letter": 30, "level": [47, 48, 49, 50], "levelnam": [47, 48, 49], "lf": 50, "lg": 50, "lh": 50, "li": 20, "lib": [47, 50, 53, 56], "librari": [23, 42, 48, 49, 50, 57], "life": 47, "lifecycl": [26, 50], "lift": 47, "light": 46, "like": [6, 8, 9, 11, 12, 14, 16, 34, 46, 50, 53, 54, 57], "limit": [47, 50], "lin": [20, 21], "line": 50, "link": [26, 32], "linkent": 26, "linknod": 26, "links2opm": 32, "linktombsemodel": 26, "list": [5, 18, 20, 21, 23, 26, 30, 32, 35, 36, 37, 38, 45, 46, 48, 50, 55, 56, 57, 58], "listid": 26, "literartur": 23, "ll": 53, "lm": 50, "lml": 26, "lml_id": 26, "lmlgraph": 26, "lmlobject": 26, "lmlparser": [0, 27], "ln": 50, "lo": 50, "load": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 45, 48, 51, 53, 54, 55], "load_csv_for_nod": 5, "load_csv_for_rel": 5, "locat": [3, 5, 10, 23, 36], "location_ent": 10, "locationent": [0, 17], "log": [20, 35, 48, 49, 51, 54], "log_format": 18, "logger": [2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 22, 30, 34, 35, 36, 37, 38, 51, 54], "lolol": [46, 57], "lololol": [46, 57], "long": [46, 57], "longer": 56, "look": 20, "lookup": [7, 54], "loss": 47, "lot": 55, "love": 53, "low": [46, 47, 50], "lower": [6, 9, 10, 12, 13, 15, 20, 21, 30, 38, 45, 49, 50, 54], "lp": 50, "lr": 5, "lt": [51, 53, 54, 57], "lvl": 50, "lwr": 50, "m": [43, 44, 45, 47, 48, 49, 50], "mach": 50, "machin": [42, 50], "made": [8, 11, 12, 14, 16, 46, 53], "mag": 50, "magn": 50, "magnet": 50, "mai": [14, 32, 42, 46, 47, 49, 57], "mail": 58, "mailto": [46, 57], "main": [45, 46, 47], "maint": 50, "mainten": 50, "maintenan": 50, "maj": 50, "major": 50, "make": [23, 50, 53], "make_pipelin": 57, "man": 50, "manag": [50, 53, 54], "mandd": [5, 7, 22, 23, 26, 30, 32, 34, 35, 36, 37, 38], "mandelli": 58, "manual": [43, 44, 47, 50, 53], "manufactur": 50, "mar": 14, "march": [5, 7, 22, 30, 36, 37], "masonri": 50, "match": [30, 35, 36, 37, 38, 45, 54], "match_id": [30, 45], "matcheds": [35, 36, 37], "matcher": [8, 11, 12, 14, 16, 30, 35, 36, 37, 38, 45, 48, 54], "materi": 50, "matl": 50, "matplotlib": [43, 44, 48], "matter": [46, 57], "max": 50, "max_similar": [18, 20], "maximum": [18, 20, 50], "maxn": [46, 49, 57], "mbp": 50, "mbse": [0, 25], "mbw": 50, "me": 22, "mea": 50, "mean": [23, 50], "measur": 50, "measurem": 50, "mech": 50, "mechan": [46, 50], "meet": 50, "mem": 50, "memori": 50, "merg": [7, 53], "merge_ent": 53, "mergeentitieswithsameid": 7, "mergephras": 7, "messag": [18, 47, 48, 49], "meta": 54, "metal": 50, "metallurgi": 50, "meter": 46, "meth": 50, "method": [7, 18, 20, 21, 23, 26, 32, 37, 38, 50, 56], "mf": 50, "mfd": 50, "mfg": 50, "mfr": 50, "mgmt": 50, "mgt": 50, "miedo": [46, 57], "might": 23, "mild": 50, "million": 55, "min": 50, "miniconda3": [47, 50, 53, 56], "minimum": 50, "misc": 50, "miscellan": 50, "misspel": [23, 49], "misspelledword": 49, "mistak": 46, "mix": 23, "mkdir": [43, 44], "mngmnt": 50, "mngmt": 50, "mngt": 50, "mntnc": 50, "mod": 50, "mode": 50, "model": [26, 30, 32, 42, 47, 48, 53, 54], "modelresult": 55, "modif": 50, "modifi": [36, 46, 49], "modul": [42, 48, 51], "mom": [46, 50, 57], "moment": 50, "monei": 55, "monoton": 21, "month": 14, "mop": 50, "more": [21, 23], "most": [23, 46], "motor": [46, 48, 50, 51, 53], "mow": 50, "mrp": 50, "mtg": 50, "mtr": 50, "much": [46, 57], "multilin": 14, "multipl": [23, 42, 57], "multpl": 23, "my": [22, 46, 57], "mycorp": 53, "n": [20, 43, 44, 45, 46, 50, 53, 54, 55, 57], "name": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 23, 26, 30, 38, 45, 46, 47, 48, 49, 51, 54, 55, 57], "nat": 50, "natur": [49, 50, 55], "nbor": [38, 53], "nc": 50, "ncm": 50, "ncr": 50, "nd": 14, "ne": 50, "necessari": 53, "need": [7, 23, 30, 38, 42, 49, 53, 54], "neg": [38, 50, 53, 54], "negat": [35, 38, 48, 49], "negation_text": 48, "neo4j": [3, 5, 26], "ner": [7, 51, 53, 54], "net": [21, 50], "network": 50, "networkx": [26, 32, 43, 44], "neuralcoref": 54, "new": [5, 11, 12, 30, 50, 54], "newdoc": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "newent": 54, "newlist": 50, "next": [46, 55, 57], "next1": 55, "nfc": 57, "nfd": 57, "nfkc": [46, 49, 57], "nfkd": 57, "nine": [46, 55], "nino": [46, 57], "ni\u00f1o": [46, 57], "nl": 50, "nlp": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 25, 35, 36, 37, 38, 45, 48, 51, 53, 54, 55], "nlp_config": 1, "nlp_util": [0, 29, 47, 48, 49, 51], "nlpconfig": [1, 47, 49], "nltk": [20, 42], "nltk_data": [43, 44], "nltkdownload": 44, "nnp": 53, "no_list": 55, "node": [5, 26], "node_color": 32, "nois": [8, 11, 12, 14, 16, 46, 53], "nom": 50, "nomin": 50, "non": 55, "nonconform": 50, "none": [5, 6, 9, 10, 11, 12, 13, 15, 16, 20, 23, 26, 28, 30, 32, 35, 36, 37, 38, 47, 49, 54, 57], "nonlinear": 21, "norm": 50, "norm_ent": 53, "normal": [7, 23, 47, 50, 54], "normd": 50, "norment": [7, 53, 54], "north": 50, "not_acronym": 22, "note": [23, 46, 50, 55], "notebook": [42, 46], "notebook_tqdm": [47, 50, 56], "notic": [46, 50, 53, 54], "noun": [7, 20, 53, 54], "nov": [14, 50], "novemb": 50, "now": 49, "noz": 50, "nozzl": 50, "np": [21, 48, 50, 51], "npation": [46, 57], "npr": 50, "nsubj": [35, 36, 38, 53, 54], "nsubjpass": [35, 36, 38, 53, 54], "nt": 50, "nuc": 50, "nucl": 50, "nuclear": 50, "nueralcoef": 53, "num": [0, 25, 53, 54], "num_text": 57, "number": [18, 20, 23, 46, 47, 49, 50], "numberrecogn": 55, "numberwithunitrecogn": 55, "numer": [23, 43, 44, 49, 50], "numerizerdoc": 49, "numpi": [20, 21, 43, 44, 48, 50, 51], "nw": 50, "nworld": [46, 57], "o": [45, 46, 47, 48, 49, 50, 51, 54, 56], "ob": 50, "obj": [5, 35, 38, 50], "obj_ent": [35, 37], "object": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 23, 26, 28, 30, 32, 35, 36, 37, 38, 50, 51, 53], "objectlist": 32, "obl": [35, 38], "observ": [46, 50], "obsrv": 50, "occ": 50, "occa": 50, "occasion": 50, "occur": 20, "occurr": 50, "oct": [14, 50], "octagon": 50, "octob": 23, "od": 50, "off": 46, "oil": [46, 48, 50, 51], "ol": [46, 57], "omg": [46, 57], "one": [18, 20, 21, 23, 46, 49, 55], "onli": [20, 23, 26, 32, 34, 45, 46, 49, 57], "oo": 50, "op": [45, 46, 50], "open": [8, 11, 12, 14, 16, 46, 47, 49, 50, 58], "openpyxl": [43, 44], "oper": [35, 46, 47, 50, 53, 54, 57], "operatorshiftlog": 35, "operatorshiftlogsprocess": [0, 39], "opg": 35, "opgh0248": 45, "opl": 32, "oplentitypars": 32, "oplpars": [0, 26, 33, 47, 48, 49], "opltextpars": 32, "opm": [0, 25, 47, 48, 49, 51], "opmgraph": 32, "opmobject": [32, 47, 48, 49], "opp": 50, "oppos": 50, "oprd": [35, 38, 53, 54], "opt": 50, "optim": 21, "optimalopt": 23, "option": [5, 14, 23, 45, 46, 50, 53, 57], "ord": 50, "order": [18, 20, 21, 36, 37, 46, 50], "ordered": 36, "ordi": 55, "ordin": [14, 55], "ordinal_list": 55, "ordinaltonumb": 14, "org": [18, 20, 46, 50, 53, 57], "organ": [38, 50], "orig": [50, 55, 57], "origin": [26, 50, 55, 57], "original_lesk": [18, 20], "otbd": 50, "other": [18, 32, 46], "otherwis": 50, "our": 22, "out": [20, 26, 32, 38, 46, 50, 54, 57], "outboard": 50, "outer": 50, "output": 50, "output_causal_effect_fil": 49, "output_health_status_fil": 49, "over": [36, 38, 54, 55], "overcurr": 47, "overh": 47, "overwork": 56, "ow": [46, 57], "p": [46, 57], "p1": [5, 48, 51], "p2": 5, "pack": 50, "packag": [42, 47, 50, 53, 55, 56, 57], "page": [0, 42], "pair": [5, 20, 21, 36], "panda": [23, 30, 43, 44, 47, 48, 49, 50, 51, 54], "panel": 47, "parab": 50, "parabol": 50, "parallel": 50, "param": 26, "paramdict": 18, "paramet": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 30, 34, 35, 36, 37, 38, 57], "pardir": [45, 46, 47, 48, 49, 50, 51, 56], "parent": 38, "pars": [26, 32, 42], "parseassetent": 26, "parseentitydescript": 26, "parselinkent": 26, "parser": [51, 53, 54], "part": [7, 50, 53, 54], "partial": 57, "particl": [7, 53, 54], "pass": [35, 46, 49, 57], "passiv": 38, "password": [46, 57], "past": [46, 53], "past_aux": 53, "path": [1, 5, 20, 21, 45, 46, 48, 50, 51, 56], "path_similar": 18, "pathlength": 21, "pation": [46, 57], "patt": 50, "pattern": [6, 9, 10, 13, 15, 28, 30, 38, 45, 50, 51, 53, 54], "patternlist": 38, "patterns": [48, 49, 51], "patternscaus": [47, 49], "patternsopm": 47, "pc": 50, "pcd": 50, "pck": 50, "pcomp": [53, 54], "pd": [47, 48, 49, 50, 51, 54], "pdf": 18, "peopl": [42, 46, 57], "per": 50, "perf": 50, "perform": [20, 21, 23, 32, 45, 46, 49, 50, 53], "perfrm": 50, "perh": 50, "perhap": 50, "period": 50, "perma": 50, "perman": 50, "person": [50, 53], "person_ent": 53, "peter": 53, "pfc": 50, "pfr": 46, "phase": 3, "phone": 46, "phone_numb": [23, 46, 49, 57], "phone_text": 57, "phrase": [3, 7, 38], "phrase_entity_match": 11, "phraseentitymatch": [0, 17], "phraselist": 11, "pictograph": 57, "piec": 50, "pin": 50, "pinguino": [46, 57], "ping\u00fcino": [46, 57], "pip": [43, 44, 48, 51], "pipe": [30, 50, 51, 53, 54], "pipelin": [0, 2, 23, 30, 36, 38, 42, 51, 52, 53], "pipeline_list": 57, "pitch": 50, "pl": 50, "plan": 50, "plant": [50, 56], "platform": 55, "pleas": [43, 47, 48, 49, 50, 51, 56], "plm": 50, "plotdag": 30, "plt": 48, "plur": 50, "plural": 50, "pm1": [48, 51], "pm_disambigu": 18, "pmatcher": [8, 11, 12, 14], "pmp": 50, "pn": 50, "po": [20, 36, 38, 49, 50, 54], "pobj": [35, 36, 38, 53, 54], "poi": 50, "point": [42, 50], "pool": 20, "poor": 46, "pop": 50, "popul": 26, "popular": 50, "pos_": [53, 54], "pos_tag": 20, "posit": 50, "posn": 50, "possibl": [6, 9, 23, 50], "post": [45, 46], "postprocess": 46, "pour": [46, 57], "power": [46, 47, 50, 53, 54], "pr": [5, 53], "pract": 50, "practic": 50, "pre": [7, 50, 54], "pred": [38, 50], "predic": [35, 36, 37, 38, 50], "predict": 50, "predsynonym": [35, 36, 37, 38], "pref": 50, "prefix": 50, "preload": 30, "prep": [50, 53, 54], "prepar": 50, "prepend": 49, "prepocessor": 49, "preposit": [35, 36, 37, 38], "preprocess": [0, 24, 35, 38, 42, 45, 50, 52], "preprocessor": [23, 45, 46], "preprocessordefaultlist": 23, "preprocessordefaultopt": 23, "preprocessorlist": [23, 45, 46, 49], "preprocessornam": 23, "preprocessoropt": [23, 45, 46, 49], "press": 50, "pressur": [46, 50, 53, 54], "presur": 46, "pretti": [30, 53, 54], "pretty_represent": [53, 54], "prevent": 47, "previou": [7, 54], "prevtoken": 54, "prfr": [46, 50], "principl": [46, 57], "print": [26, 30, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57], "printdeptre": [30, 54], "printonfil": 26, "printrecurs": 54, "prob": 50, "probab": 50, "probabl": 50, "probl": 50, "problem": 50, "problemat": 57, "proc": 57, "process": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 26, 30, 32, 35, 36, 37, 38, 50, 53, 54, 57], "processlist": 32, "procobj": [35, 38], "product": 50, "prog": 50, "progress": 50, "project": [42, 43, 44, 55, 58], "pron": 54, "prop": 50, "propag": [7, 54], "propagateenttyp": [7, 54], "properti": [5, 50, 53], "propn": [53, 54], "propos": 18, "protocol": 50, "provid": [3, 5, 20, 22, 23, 26, 38, 55], "prox": 50, "proxim": [46, 50], "ptnlist": 30, "puddl": [46, 50], "pull": [42, 53], "pump": [8, 11, 12, 14, 15, 16, 46, 48, 50, 51, 53, 54], "pump_compon": [47, 49], "punc_text1": 57, "punc_text2": 57, "punc_text3": 57, "punct": [53, 54], "punctuact": 30, "punctuat": [23, 45, 46, 49], "puncuat": 49, "punkt": [43, 44], "purif": 50, "put": 32, "pwd": 5, "pwr": 50, "py": [44, 47, 50, 53, 56], "py2neo": [0, 4], "pydant": 42, "pylab": 48, "pyplot": 48, "pysbd": [7, 43, 44], "pysbdsentenceboundari": 7, "pyspellcheck": [43, 44], "python": [5, 43, 44, 57], "python3": [47, 50, 53, 56], "pywsd": [20, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56], "pzr": 50, "qc": 50, "qnty": 50, "qty": 50, "qualiti": 50, "quantiti": 50, "quantulum3": [43, 44], "quarter": [46, 55], "que": [46, 57], "queri": 5, "question": 26, "quot": [46, 57], "quotation_mark": [23, 45, 46, 49, 57], "quote_text": 57, "qu\u00e9": [46, 57], "r": [43, 44, 46, 47, 49, 54, 57], "rad": 50, "radiat": 50, "radiu": 50, "rain": [46, 57], "rang": [49, 56], "rather": 46, "rattl": [8, 11, 12, 14, 16, 46], "ravel": [47, 49], "raw": [46, 57], "raw_text": 46, "rcp": [46, 50, 53, 54], "rcparam": 48, "rd": [14, 50], "re": [20, 21, 48, 50, 53, 54], "rea": 50, "reach": [46, 57], "reactor": [47, 50], "read": [38, 50], "read_csv": [47, 49], "read_excel": 50, "readfil": 28, "readthedoc": [45, 46, 47, 50, 56], "real_burton_dewild": [46, 57], "reason": [46, 50, 57], "rec": 50, "recirc": 50, "recircul": 50, "recogn": [7, 23, 54], "recognit": 53, "recognizers_date_tim": 55, "recognizers_numb": 55, "recognizers_number_with_unit": 55, "recognizers_sequ": 55, "recognizers_text": 55, "recomb": 50, "recombin": 50, "recommend": 47, "record": 5, "rect": 50, "rectangular": 50, "recurs": [7, 38, 54], "red": [45, 50], "reduc": 50, "reduct": [46, 50, 53, 54], "ref": [20, 50, 54], "ref_ent": 54, "ref_n": [7, 54], "ref_t": [7, 54], "ref_t_": 54, "refer": [50, 54], "refr": 50, "reftoken": 54, "refurb": 50, "refurbish": 50, "regen": 50, "regener": 50, "regex": 45, "regist": 50, "regr": 50, "regress": 50, "reinf": 50, "reinforc": 50, "reinst": 50, "reinstal": 50, "rel": [5, 50], "relabel": [11, 12], "relai": 47, "relat": [5, 35, 36, 37, 38], "relationship": 5, "relcl": 54, "releas": [45, 50], "reli": 23, "reload_ext": 48, "remov": [7, 20, 23, 26, 30, 34, 45, 49, 50, 54], "remove_extens": 54, "remove_pip": [51, 53, 54], "removeacronym": 32, "removebracket": 49, "removepunctu": 49, "removerep": 49, "remv": 50, "render": [47, 48, 51, 53, 54], "rep": 50, "repack": 50, "repair": 45, "repck": 50, "repeat": 49, "repeating_char": [23, 46, 49, 57], "repeating_text1": 57, "repeating_text2": 57, "repeating_text3": 57, "repeating_text4": 57, "repeating_text5": 57, "repect": 21, "repl": 57, "replac": [11, 12, 23, 45, 49, 50], "report": [42, 50], "repositori": 42, "repres": [26, 36, 38], "rept": 50, "req": 50, "reqd": 50, "request": [38, 42], "requir": [26, 42, 45, 46, 48, 50, 51], "res_similar": 18, "research": 50, "reservoir": 50, "reset": [5, 22, 35, 36, 37, 38, 45, 48, 50], "resetpipelin": [30, 51, 54], "resolut": [7, 54], "resolv": [7, 53, 54], "resourc": 50, "respond": [46, 53], "resrvr": 50, "restart": 5, "result": [5, 7, 47, 54], "reterm": 50, "retermin": 50, "retest": 50, "retriev": 49, "return": [3, 5, 7, 18, 20, 21, 22, 23, 26, 30, 32, 34, 35, 36, 37, 38, 53, 54], "returnacronym": 32, "returnattributelist": 32, "returnent": 26, "returngraph": [26, 32], "returnlistid": 26, "returnobjectlist": 32, "returnprocesslist": 32, "returnsexternallink": 32, "rev": 50, "reveal": [46, 47, 50, 53, 54], "revenu": 55, "revers": 36, "reviel": 46, "review": 46, "revis": 50, "rh": 50, "right": [36, 38, 49, 50, 53, 54], "rl": 50, "rm": 50, "rmv": 50, "rmve": 50, "rnd": 50, "room": [47, 50], "root": [36, 38, 49, 50, 53, 54], "rootcaus": 36, "round": [49, 50, 57], "row": [50, 54], "rplc": 50, "rplce": 50, "rsvr": 50, "rule": [35, 36, 37, 38, 54], "rulebasedmatch": [0, 39, 47, 49], "ruler": [53, 54], "run": [43, 44], "ruptur": [46, 50, 53, 54], "rx": 50, "safeguard": 47, "safeti": [8, 11, 12, 14, 16, 46, 47, 50], "same": 7, "san": 38, "save": 26, "saw": 55, "scaf": 50, "scaff": 50, "scaffold": 50, "scale": [21, 50], "scalingdeptheffect": 21, "sched": 50, "schedul": 50, "scheme": 47, "scienc": 26, "scikit": [43, 44], "score": [20, 21], "screen": [32, 38, 48, 50, 51], "screw": 50, "script": 44, "scrn": 50, "sdcr": 47, "se": [46, 57], "search": [3, 23, 36, 38, 42], "search_phras": 3, "sec": [45, 46, 47, 48, 49, 50, 51, 56], "second": [5, 18, 20, 21, 55, 56], "sect": 50, "section": [45, 46, 50, 57], "secur": 50, "see": [23, 26, 32, 45, 46, 47, 50, 55, 56, 57], "seem": [6, 8, 9, 11, 12, 14, 16, 46, 55], "sel": 50, "select": [36, 50], "selectvalid": 36, "selent": 36, "self": [26, 32, 37, 38], "semant": [18, 20, 21], "semantic_similarity_synset": [18, 20, 21], "semanticsimilaritysent": 20, "semanticsimilaritysynset": 21, "semanticsimilaritysynsetlist": 21, "semanticsimilarityusingdisambiguatedsynset": 21, "semanticsimilarityword": 20, "semsimilar": [20, 21], "sen": 50, "sens": [20, 23], "sensemethod": [20, 56], "sensor": 50, "sent": [35, 36, 38, 48, 54, 56], "sentenc": [7, 18, 20, 23, 32, 35, 36, 37, 38, 49, 54, 56], "sentence1": 18, "sentence2": 18, "sentencea": 20, "sentenceb": 20, "sentencesensedisambigu": 20, "sentencesensedisambiguationpywsd": [20, 56], "sentencesimialritybestsens": 18, "sentencesimilar": [0, 19, 20], "sentencesimilaritypawarmagomethod": 18, "sentencesimilaritywithdisambigu": 20, "sentlist": 20, "sentsynset": [20, 56], "sep": [14, 53], "separ": [26, 32], "sept": 50, "septemb": 50, "sequenc": 38, "sequencerecogn": 55, "serial": 50, "serv": 53, "server": 5, "servic": 50, "session": 5, "set": [3, 18, 20, 21, 26, 50, 54], "set_extens": 54, "set_index": 54, "set_neo4j_import_fold": 3, "setlevel": 48, "setparamet": 18, "seventi": [46, 55], "sever": [46, 50], "sg": 50, "sh": 50, "shaft": [6, 8, 9, 11, 12, 14, 16, 46, 50, 53, 54], "shape": 49, "shc": 50, "she": 22, "sheet": 50, "shft": 50, "shift": 35, "shiver": [46, 57], "short": 47, "shortdist": 21, "shortest": 21, "should": [21, 38, 47, 51], "show": [14, 46], "shown": 50, "shss": 50, "shutdown": 47, "shwn": 50, "side": 50, "sign": 46, "signific": 20, "sim": 50, "similar": [0, 2, 38, 42, 52], "similari": 21, "similarit": 18, "similaritymethod": 18, "simmethod": [20, 21, 56], "simpl": 55, "simple_entity_match": 12, "simple_lesk": [18, 20, 56], "simpleentitymatch": [0, 17], "simul": 50, "simutil": [0, 19, 56], "singl": [20, 26, 46, 53, 57], "sit": 50, "site": [47, 50, 53, 56], "sixti": [46, 55], "size": 50, "sk": 50, "sketch": 50, "skip": [30, 38], "skipcent": 36, "skipinitialspac": [47, 49], "skippunct": [30, 54], "sl": 54, "slight": 46, "smith": 53, "sn": 50, "so": 49, "socket": 50, "some": [42, 46], "soon": 50, "sourc": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 28, 30, 32, 34, 35, 36, 37, 38], "space": 54, "spaci": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30, 36, 38, 42, 45, 48, 49, 51, 54], "spain": 53, "span": [30, 36, 38, 45, 53, 54], "spare": 50, "spec": 50, "specif": 50, "specifi": [26, 48, 50, 51, 54, 57], "specimen": 50, "spell": [23, 42, 49, 52], "spellcheck": [23, 46, 48, 49, 50, 51], "spellcorrectdoc": 49, "sperat": 49, "sphinx": 0, "spit": 36, "split": [48, 49, 50, 55, 57], "splitentsfollowingnouncaus": 36, "splittolist": [23, 50], "spre": 50, "sq": 50, "squar": [26, 45, 46, 49, 50, 57], "squash": 55, "sr2ml": 49, "src": [0, 45, 46, 47, 48, 49, 50, 51, 56], "ss": 50, "ssc": [11, 12, 16, 35, 36, 37, 38, 47, 49, 54], "ssc_entity_rul": [47, 49], "sslerror": 42, "st": [14, 50, 56], "stab": 50, "stabil": 50, "stabl": [47, 50, 56], "stackoverflow": [26, 46, 57], "stainless": 50, "stamp": 20, "stand": 50, "standard": 50, "start": [30, 36, 38, 45, 47, 53, 54], "stat": 50, "state": 47, "statement": [5, 47], "static": 5, "statist": [18, 20, 50], "statu": [35, 36, 37, 38, 48, 49], "stby": 50, "std": 50, "stdrd": 50, "steam": [47, 50], "steel": 50, "steep": 50, "stem": 42, "step": [43, 44], "stk": 50, "stock": 50, "stop": [36, 38], "store": [7, 54], "stori": [46, 57], "str": [3, 5, 18, 20, 21, 23, 26, 30, 36, 38, 50, 55, 57], "streamhandl": [51, 54], "strength": 50, "string": [3, 14, 20, 22, 23, 26, 30, 34, 37, 38, 48, 49, 57], "strip": [49, 50], "strk": 50, "stroke": 50, "strong": 50, "struct": 50, "structur": [7, 26, 32, 38, 47, 50, 54], "style": [48, 51, 53, 54], "su": 56, "subel": 35, "subj": [30, 35, 38, 50], "subj_ent": [35, 37], "subject": [35, 36, 37, 38, 50], "subtre": [36, 38, 53], "suct": 50, "suction": 50, "suffix": 14, "supp": 50, "suppli": [38, 46, 50, 53, 54], "support": [20, 42, 53], "suppress": 50, "sure": [50, 53], "surf": 50, "surfac": 50, "surpris": 53, "surv": 50, "survei": 50, "susp": 50, "suspens": 50, "sw": 50, "swch": 50, "switch": [45, 50], "switchyard": 50, "sy": [45, 46, 47, 48, 49, 50, 51, 56], "symm": 50, "symmetri": 50, "syn": 21, "synonym": [35, 36, 37, 38], "synset": [18, 20, 21, 56], "synseta": 21, "synsetb": 21, "synsetlist": [20, 21], "synsetlist1": 21, "synsetlist2": 21, "synsetlistsimilar": [21, 56], "synsetsa": [21, 56], "synsetsb": 21, "synsetssimilar": 21, "synsetutil": [0, 19, 56], "syst": 50, "system": [7, 15, 47, 50, 54], "t": [46, 50, 53, 54, 57], "t1": 57, "t2": 57, "t3": 57, "t4": 57, "t8": 34, "tag_": 53, "tagger": [43, 44, 51, 53, 54], "take": [20, 45, 46, 47, 48, 49, 50, 51, 55, 56], "taken": 46, "tank": 50, "tar": 43, "tc": 50, "tdp": 50, "tech": 50, "techn": 50, "technic": 50, "technol": 50, "technologi": 50, "tel": 50, "telecom": 50, "telecomm": 50, "telecommun": 50, "telephon": 50, "temp": 50, "tempor": 14, "temporal_attribut": 13, "temporal_attribute_ent": 13, "temporal_rel": 15, "temporal_relation_ent": 15, "temporalattributeent": [0, 17], "temporalen": 14, "temporalent": [0, 17], "temporalrelationent": [0, 17], "temporari": 50, "term": [11, 12], "termin": 50, "test": [8, 11, 12, 14, 16, 23, 26, 46, 50, 53, 54, 57], "teven": [46, 57], "text": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 23, 26, 30, 35, 38, 42, 48, 50, 51, 52, 54, 55, 57], "text_fil": [47, 49], "text_list": 55, "text_process": [0, 2, 45, 46, 49, 50], "textaci": [23, 43, 44, 45, 46], "textacyin4word": [46, 57], "textacynorm": 23, "textacyremov": 23, "textacyreplac": 23, "textfil": [47, 49], "textlist": 50, "textprocess": [35, 38], "th": 14, "than": [20, 21, 46], "thd": 50, "thei": [22, 46, 50], "them": [7, 22, 32, 53], "theor": 50, "theoret": 50, "thermographi": 50, "thi": [0, 7, 20, 21, 23, 26, 32, 42, 43, 44, 46, 47, 53, 54, 57], "thick": 50, "thing": 34, "third": 55, "thk": 50, "those": 20, "thousand": [46, 55], "thread": 50, "three": [46, 55], "threshold": 23, "through": [46, 50, 57], "throwbackthursdai": [46, 57], "thru": 50, "tic": 46, "time": [42, 45, 50, 51, 52, 55], "tir": 50, "titl": [46, 57], "tk": [50, 53], "tnk": 50, "todo": 49, "tok2vec": [51, 53, 54], "token": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 30, 36, 38, 43, 44, 53, 54], "tol": 50, "toler": 50, "tolist": [47, 49], "toll": 50, "toller": 50, "toml": 1, "tomli": [43, 44], "took": [45, 46, 47, 48, 49, 50, 51, 56], "total": [20, 50], "totken": 54, "tp": 20, "tqdm": [47, 50, 56], "tqdmwarn": [47, 50, 56], "trail": [7, 53, 54], "train": 50, "tran": 50, "transact": 50, "transf": 50, "transfer": [21, 50], "transform": 50, "transl": 50, "translat": [32, 50], "transm": 50, "transmiss": 50, "transmitt": 50, "trash": [48, 51], "trav": 50, "travel": [32, 50, 53], "trblsht": 50, "tre": [46, 57], "treat": [49, 50], "treatm": 50, "treatment": 50, "tree": [30, 54], "treedist": 21, "trip": 47, "trng": 50, "troub": 50, "troubleshoot": [47, 50], "troublesom": 50, "true": [3, 8, 9, 11, 12, 14, 16, 18, 20, 21, 22, 26, 30, 35, 36, 38, 45, 47, 48, 49, 50, 51, 53, 54, 57], "try": [43, 44, 46, 48, 51, 57], "tr\u00e8": [46, 57], "tungsten": 50, "tupl": [20, 26, 30, 35, 36, 37, 38, 53, 54, 57], "turb": 50, "turbin": [47, 50], "tw": 32, "twelv": [46, 55], "twenti": [46, 55], "twitter": [46, 57], "two": [18, 20, 21, 32, 46, 55], "two_million": 55, "tworld": [46, 57], "tx": 5, "txt": 46, "ty": 50, "typ": 50, "type": [3, 5, 7, 18, 20, 21, 22, 23, 26, 30, 35, 36, 37, 38, 50, 54], "typic": 50, "typing_extens": 43, "u": [53, 57], "u200b": [46, 57], "ua": 50, "uai": 50, "ub": 50, "ucut": 50, "ufeff": [46, 57], "ugh": [46, 57], "ull": 50, "unabl": [48, 51], "under": [42, 50], "undercut": 50, "underwat": 50, "underwtr": 50, "unequ": 50, "unicod": [23, 46, 49], "unicode1_text": 57, "unicode2_text": 57, "unicode3_text": 57, "unicode4_text": 57, "unicode_emoji": 55, "unicodedata": 57, "unit": [16, 42, 48, 50, 51, 57], "unit_ent": 16, "unitent": [0, 17], "univers": 50, "unk": 50, "unkn": 50, "unknown": 50, "unkw": 50, "unkwn": 50, "unless": 50, "unnam": 49, "uno": 50, "unplug": 46, "uo": 50, "uon": 50, "up": [45, 46, 48, 49, 50, 51, 56], "updat": [22, 30, 37, 38, 47, 50, 56], "updateabbrevi": [22, 45, 50], "updateddoc": [6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "updatedword": 49, "upper": 21, "uri": 5, "url": [23, 46, 49], "url_text": 57, "us": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 26, 30, 36, 38, 46, 50, 54, 55, 56, 57], "user": [3, 5, 38, 43, 44, 46, 48, 49, 50, 51, 53, 56], "user_handl": [23, 46, 49, 57], "user_instal": [47, 50, 56], "user_text": 57, "usernam": [46, 57], "userwarn": 53, "util": [0, 2, 47, 48, 49, 51, 54], "v": 50, "vac": 50, "vacuum": 50, "valid": [36, 38], "validdisambigu": 18, "validleftssc": 36, "validrightssc": 36, "valids": 38, "validsimilar": 18, "valu": [5, 14, 21, 47, 49, 54, 57], "valv": [8, 11, 12, 14, 16, 46, 47, 50], "var": [30, 38, 47, 50], "variabl": [26, 30, 38, 50], "varlist": 38, "vb": 50, "vbd": 53, "vbg": 53, "vector": [18, 20, 21], "vendor": 47, "vent": 50, "ventil": 50, "ver": [38, 50], "verb": [20, 38, 50, 53, 54], "veri": 53, "verif": 50, "verifi": 50, "versu": 50, "vert": 50, "vertic": 50, "vessel": 50, "vi": 50, "via": [48, 51], "vib": 50, "vibe": 50, "vibrat": [6, 8, 9, 11, 12, 14, 16, 46, 50, 53], "visibl": 46, "visual": [30, 38, 50, 53, 54], "vlv": 50, "vocab": [45, 54], "vol": 50, "volum": 50, "vrfy": 50, "vsl": 50, "w": [20, 50], "w006": 53, "wa": [22, 46, 47, 50, 53, 54, 56], "wai": [42, 50, 58], "wang": 58, "wangc": [5, 7, 22, 23, 30, 34, 35, 36, 37, 38, 47, 50, 53, 56], "warm": [45, 46, 47, 48, 49, 50, 51, 56], "warn": [45, 46, 48, 53], "wash": 50, "washer": 50, "wast": 50, "wastag": 50, "water": 50, "wc": 50, "we": [7, 23, 49, 53, 54], "week": 50, "weight": [18, 20, 50], "weld": 50, "well": [45, 46, 47, 57], "were": [46, 50, 56], "west": 50, "wgt": 50, "what": [46, 57], "when": [20, 23, 42, 45, 46, 47], "which": [23, 26, 46, 47], "while": 21, "whitespac": [23, 45, 46, 49], "whitespace_text": 57, "whl": 44, "whomev": [46, 57], "why": [46, 57], "wife": 53, "wikipedia": [46, 57], "window": 42, "wip": 53, "wire": 50, "within": [36, 46, 50], "without": [20, 50], "wk": 50, "wn": [20, 21], "wo101": 45, "won": [46, 57], "wonder": [46, 57], "word": [18, 20, 21, 23, 34, 49, 55], "worda": 20, "wordb": 20, "wordcount": 20, "worddata": 20, "wordlist": 20, "wordnet": [18, 20, 21, 43, 44], "wordnetpathlength": 21, "wordnetsimmethod": 18, "wordord": 18, "wordordercontribut": 18, "wordordersimilaritysent": 20, "wordordersimilaritysynsetlist": 21, "wordsensedisambigu": 20, "wordset": 20, "wordssimilar": 20, "wordsynset": 21, "work": [37, 46, 50, 53, 57], "worker": 56, "workflow": [0, 2, 42, 47, 48, 52], "workflowbas": [0, 35, 36, 37, 39], "workorderprocess": [0, 39, 48], "world": [12, 46, 54, 57], "wrap": 20, "wrong": 45, "wsh": 50, "wshr": 50, "wst": 50, "wstg": 50, "wt": 50, "wth": [46, 57], "wtr": 50, "wup": [20, 21], "wup_similar": 18, "www": [46, 57], "xa0": 50, "xcomp": [53, 54], "xfer": 50, "xfmr": 50, "xfrmr": 50, "xlsx": [23, 50], "xml": [26, 49], "xmtr": 50, "xyza7148abc": 45, "y": [47, 48, 49], "yard": 50, "yd": 50, "year": [14, 50], "yield": 50, "you": [42, 46, 53, 57], "yourself": 50, "yp": 50, "yr": 50, "z": [14, 45], "za": 45, "zip": [43, 44, 55, 57]}, "titles": ["API Reference", "src.dackar.config", "src.dackar", "src.dackar.knowledge_graph.graph_utils", "src.dackar.knowledge_graph", "src.dackar.knowledge_graph.py2neo", "src.dackar.pipelines.ConjectureEntity", "src.dackar.pipelines.CustomPipelineComponents", "src.dackar.pipelines.EmergentActivityEntity", "src.dackar.pipelines.GeneralEntity", "src.dackar.pipelines.LocationEntity", "src.dackar.pipelines.PhraseEntityMatcher", "src.dackar.pipelines.SimpleEntityMatcher", "src.dackar.pipelines.TemporalAttributeEntity", "src.dackar.pipelines.TemporalEntity", "src.dackar.pipelines.TemporalRelationEntity", "src.dackar.pipelines.UnitEntity", "src.dackar.pipelines", "src.dackar.similarity.SentenceSimilarity", "src.dackar.similarity", "src.dackar.similarity.simUtils", "src.dackar.similarity.synsetUtils", "src.dackar.text_processing.Abbreviation", "src.dackar.text_processing.Preprocessing", "src.dackar.text_processing", "src.dackar.utils", "src.dackar.utils.mbse.LMLparser", "src.dackar.utils.mbse", "src.dackar.utils.nlp.CreatePatterns", "src.dackar.utils.nlp", "src.dackar.utils.nlp.nlp_utils", "src.dackar.utils.num", "src.dackar.utils.opm.OPLparser", "src.dackar.utils.opm", "src.dackar.utils.utils", "src.dackar.workflows.OperatorShiftLogsProcessing", "src.dackar.workflows.RuleBasedMatcher", "src.dackar.workflows.WorkOrderProcessing", "src.dackar.workflows.WorkflowBase", "src.dackar.workflows", "src", "Contributors", "Welcome to DACKAR\u2019s documentation!", "Installation with Spacy 3.1 (Archived)", "Installation with Spacy 3.5", "Emergent Activity Analysis demo", "Preprocessing demo", "Demo for Rule Based Natural Language Processing", "&lt;no title&gt;", "Demo For NLP Workflow: Based on branch wangc/nlp", "Abbreviation handler demo", "&lt;no title&gt;", "Usage Notebooks", "Example that can be used for Relation Extraction after Named Entity Recognizer", "Custom pipelines", "numerizer Preprocessing", "Similarity analysis", "textacy Preprocessing Methods for NLP", "Support"], "titleterms": {"": 42, "0": 53, "1": [43, 47, 53], "10": 47, "103": 45, "11": 47, "2": [47, 53], "3": [43, 44, 47, 53], "4": 47, "5": [44, 47], "6": 47, "7": 47, "8": 47, "9": 47, "For": 49, "abbrevi": [22, 45, 50], "accent": 57, "access": 47, "acronym": 46, "act": 55, "activ": 45, "add": [45, 46], "addit": 46, "address": 57, "after": 53, "an": [43, 44], "analysi": [43, 44, 45, 56], "analyt": 53, "ani": 46, "api": 0, "approach": [43, 44], "archiv": 43, "argument": 55, "attribut": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 22, 23, 30, 34, 35, 36, 37, 38], "autocorrect": 46, "automat": 46, "base": [47, 49], "blob": 53, "blueprint": 53, "bracket": 57, "branch": 49, "bullet": 57, "can": [47, 49, 53], "causal": [47, 49], "ch12": 53, "chain": 53, "charact": [45, 57], "class": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22, 23, 26, 28, 32, 35, 36, 37, 38, 50], "clean": 46, "coher": 46, "com": 53, "combin": [45, 57], "config": 1, "conjectureent": 6, "content": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 28, 30, 32, 34, 35, 36, 37, 38, 42], "contextualspellcheck": 46, "contribut": 42, "contributor": 41, "corefere": 53, "correct": [46, 49], "creat": [47, 49], "createpattern": 28, "creation": [45, 46], "currenc": 57, "custom": 54, "custompipelinecompon": 7, "dackar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42], "data": [43, 44, 47, 49], "demo": [45, 46, 47, 49, 50], "depend": [43, 44], "develop": 58, "dictionari": 46, "differ": [43, 44], "directli": 49, "do": 46, "doc": 49, "document": 42, "download": [43, 44], "email": 57, "emerg": 45, "emergentactivityent": 8, "emoji": 57, "entiti": [47, 49, 53], "exampl": [45, 46, 53], "extenst": 55, "extract": 53, "file": 47, "find": 46, "first": 46, "found": 47, "from": [43, 44, 47, 53], "function": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 26, 30, 32, 34], "gener": 49, "generalent": 9, "get": 46, "github": 53, "graph_util": 3, "handl": [45, 50, 57], "handler": 50, "hashtag": 57, "have": 43, "how": [43, 44], "html": 57, "http": 53, "hyphen": 57, "i": [43, 44], "id": 45, "import": 47, "indic": 42, "inform": 47, "initi": 49, "input": 47, "instal": [43, 44], "ipynb": 53, "issu": [43, 44], "keyword": 47, "knowledge_graph": [3, 4, 5, 53], "label": 45, "languag": [43, 44, 47], "librari": [43, 44], "licens": 42, "list": [47, 49, 53], "lmlparser": 26, "load": [47, 49], "locationent": 10, "log": 47, "machin": 43, "mai": 43, "mark": 57, "master": 53, "matcher": [47, 49], "mbse": [26, 27], "mention": 53, "method": 57, "misspel": 46, "model": [43, 44], "modul": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 28, 30, 32, 34, 35, 36, 37, 38, 47, 49], "much": 53, "name": 53, "natur": 47, "navig": 53, "need": 43, "ner": 49, "nlp": [28, 29, 30, 47, 49, 57], "nlp_util": 30, "nltk": [43, 44], "normal": 57, "notebook": 52, "num": 31, "number": [45, 57], "numer": [46, 55], "operatorshiftlogsprocess": 35, "oplpars": 32, "opm": [32, 33], "option": 55, "order": 45, "other": 47, "packag": [1, 2], "pars": 43, "path": [47, 49], "pattern": 49, "perform": 56, "phone": 57, "phraseentitymatch": 11, "pipelin": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 45, 46, 54, 57], "point": 57, "preprocess": [23, 43, 46, 49, 55, 57], "process": 47, "provid": [47, 49], "punctuat": 57, "py2neo": 5, "pydant": 43, "pyspellcheck": 46, "python": 53, "quotat": 57, "raw": [47, 49], "read": [47, 49], "recogn": 53, "refer": 0, "relat": 53, "remov": 57, "repeat": 57, "replac": 57, "requir": [43, 44, 49, 53], "resolut": 53, "rule": [47, 49], "rulebasedmatch": 36, "sentencesimilar": 18, "set": [47, 49], "setup": 46, "similar": [18, 19, 20, 21, 43, 44, 56], "simpleentitymatch": 12, "simutil": 20, "so": 47, "some": 43, "spaci": [43, 44, 47, 53, 55], "spell": 46, "src": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "sslerror": [43, 44], "stem": 43, "string": [47, 55], "submodul": [2, 4, 17, 19, 24, 25, 27, 29, 33, 39, 40], "support": 58, "symbol": 57, "synsetutil": 21, "tabl": 42, "tag": 57, "temporalattributeent": 13, "temporalent": 14, "temporalrelationent": 15, "text": [45, 46, 47, 49, 53], "text_process": [22, 23, 24], "textaci": 57, "thei": 53, "time": [46, 56], "unexpect": 46, "unicod": 57, "unit": 43, "unitent": 16, "up": 47, "url": 57, "us": [47, 49, 53], "usag": 52, "user": [47, 57], "util": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "variabl": 49, "wangc": 49, "welcom": 42, "were": 53, "when": [43, 44], "whitespac": 57, "window": 43, "wo": 45, "wo103": 45, "word": [46, 57], "work": 45, "workflow": [35, 36, 37, 38, 39, 46, 49], "workflowbas": 38, "workorderprocess": 37, "you": 43}})