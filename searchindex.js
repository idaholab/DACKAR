Search.setIndex({"alltitles": {"1. Set up the path, so that the NLP modules can be found": [[42, "1.-Set-up-the-path,-so-that-the-NLP-modules-can-be-found"]], "10. Process raw string data using matcher": [[42, "10.-Process-raw-string-data-using-matcher"]], "11. Access processed information from matcher": [[42, "11.-Access-processed-information-from-matcher"]], "2. Load Spacy module": [[42, "2.-Load-Spacy-module"]], "3. Load other modules": [[42, "3.-Load-other-modules"]], "4. Import NLP modules": [[42, "4.-Import-NLP-modules"]], "5. Set up logging": [[42, "5.-Set-up-logging"]], "6. Read and process entities": [[42, "6.-Read-and-process-entities"]], "7. Read and process causal keywords": [[42, "7.-Read-and-process-causal-keywords"]], "8. Create Rule-based matcher with entity list and causal entity list": [[42, "8.-Create-Rule-based-matcher-with-entity-list-and-causal-entity-list"]], "9. Read input text file, or users can provide a raw string": [[42, "9.-Read-input-text-file,-or-users-can-provide-a-raw-string"]], "API Reference": [[0, null]], "Abbreviation handler demo": [[45, null]], "Abbreviation handling class": [[45, "Abbreviation-handling-class"]], "Attributes": [[1, "attributes"], [2, "attributes"], [4, "attributes"], [5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [9, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [14, "attributes"], [18, "attributes"], [19, "attributes"], [26, "attributes"], [30, "attributes"], [31, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"]], "Autocorrect: Add any additional words to dictionary": [[41, "Autocorrect:-Add-any-additional-words-to-dictionary"]], "Autocorrect: Find acronyms or unexpected misspelled words": [[41, "Autocorrect:-Find-acronyms-or-unexpected-misspelled-words"]], "Autocorrect: Get automatically corrected text": [[41, "Autocorrect:-Get-automatically-corrected-text"]], "Autocorrect: Setup": [[41, "Autocorrect:-Setup"]], "Classes": [[4, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [18, "classes"], [19, "classes"], [22, "classes"], [24, "classes"], [28, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"]], "Coherent text example with Autocorrect and ContextualSpellCheck spelling correction": [[41, "Coherent-text-example-with-Autocorrect-and-ContextualSpellCheck-spelling-correction"]], "Combining into a pipeline": [[52, "Combining-into-a-pipeline"]], "Contents:": [[38, null]], "ContextualSpellCheck: Add any additional words to dictionary": [[41, "ContextualSpellCheck:-Add-any-additional-words-to-dictionary"]], "ContextualSpellCheck: Find acronyms or unexpected misspelled words": [[41, "ContextualSpellCheck:-Find-acronyms-or-unexpected-misspelled-words"]], "ContextualSpellCheck: Get automatically corrected text": [[41, "ContextualSpellCheck:-Get-automatically-corrected-text"]], "ContextualSpellCheck: Setup": [[41, "ContextualSpellCheck:-Setup"]], "Contributions": [[38, "contributions"]], "Contributors": [[37, null]], "Coreferee Resolution: require spacy>=3.1.0,<3.2.0": [[48, "Coreferee-Resolution:-require-spacy>=3.1.0,<3.2.0"]], "Correct the doc": [[44, "Correct-the-doc"]], "Create rule-based matcher with entity list and causal entity list": [[44, "Create-rule-based-matcher-with-entity-list-and-causal-entity-list"]], "Custom pipelines": [[49, null]], "Demo For NLP Workflow: Based on branch wangc/nlp": [[44, null]], "Demo for Rule Based Natural Language Processing": [[42, null]], "Developers:": [[53, "developers"]], "Different approach when there is an issue with SSLError": [[39, "different-approach-when-there-is-an-issue-with-sslerror"], [39, "id1"], [40, "different-approach-when-there-is-an-issue-with-sslerror"]], "Download language model from spacy": [[39, "download-language-model-from-spacy"], [40, "download-language-model-from-spacy"]], "Example from https://github.com/blueprints-for-text-analytics-python/blueprints-text/blob/master/ch12/Knowledge_Graph.ipynb": [[48, "Example-from-https://github.com/blueprints-for-text-analytics-python/blueprints-text/blob/master/ch12/Knowledge_Graph.ipynb"]], "Example that can be used for Relation Extraction after Named Entity Recognizer": [[48, null]], "First do text preprocessing": [[41, "First-do-text-preprocessing"]], "Functions": [[4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [16, "functions"], [17, "functions"], [22, "functions"], [26, "functions"], [28, "functions"], [30, "functions"]], "Generate patterns that can be used in NER": [[44, "Generate-patterns-that-can-be-used-in-NER"]], "How to install dependency libraries": [[39, "how-to-install-dependency-libraries"], [40, "how-to-install-dependency-libraries"]], "Indices and tables": [[38, "indices-and-tables"]], "Initialize variables": [[44, "Initialize-variables"]], "Installation with Spacy 3.1 (Archived)": [[39, null]], "Installation with Spacy 3.5": [[40, null]], "License": [[38, "license"]], "Load entity list and causal list or provide directly": [[44, "Load-entity-list-and-causal-list-or-provide-directly"]], "Module Contents": [[4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [22, "module-contents"], [24, "module-contents"], [26, "module-contents"], [28, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"]], "Normalize bullet points": [[52, "Normalize-bullet-points"]], "Normalize hyphenated words": [[52, "Normalize-hyphenated-words"]], "Normalize quotation marks": [[52, "Normalize-quotation-marks"]], "Normalize repeating characters": [[52, "Normalize-repeating-characters"]], "Normalize unicode": [[52, "Normalize-unicode"]], "Normalize whitespace": [[52, "Normalize-whitespace"]], "Package Contents": [[1, "package-contents"], [2, "package-contents"]], "Pipeline creation": [[41, "Pipeline-creation"]], "Preprocessing demo": [[41, null]], "PySpellChecker": [[41, "PySpellChecker"]], "Read raw text data and preprocess it": [[44, "Read-raw-text-data-and-preprocess-it"]], "Remove HTML tags": [[52, "Remove-HTML-tags"]], "Remove accents": [[52, "Remove-accents"]], "Remove brackets": [[52, "Remove-brackets"]], "Remove punctuation": [[52, "Remove-punctuation"]], "Replace URLs": [[52, "Replace-URLs"]], "Replace currency symbols": [[52, "Replace-currency-symbols"]], "Replace email addresses": [[52, "Replace-email-addresses"]], "Replace emoji": [[52, "Replace-emoji"]], "Replace hashtags": [[52, "Replace-hashtags"]], "Replace numbers": [[52, "Replace-numbers"]], "Replace phone numbers": [[52, "Replace-phone-numbers"]], "Replace user handles": [[52, "Replace-user-handles"]], "Required libraries and nltk data for similarity analysis": [[39, "required-libraries-and-nltk-data-for-similarity-analysis"]], "Required library for preprocessing": [[39, "required-library-for-preprocessing"]], "Required nltk data for similarity analysis": [[40, "required-nltk-data-for-similarity-analysis"]], "Set Paths and Loading Required Modules": [[44, "Set-Paths-and-Loading-Required-Modules"]], "Similarity analysis": [[51, null]], "Submodules": [[2, "submodules"], [13, "submodules"], [15, "submodules"], [20, "submodules"], [21, "submodules"], [23, "submodules"], [25, "submodules"], [29, "submodules"], [35, "submodules"], [36, "submodules"]], "Support": [[53, null]], "Text to clean and numerize": [[41, "Text-to-clean-and-numerize"]], "Time Autocorrect workflow": [[41, "Time-Autocorrect-workflow"]], "Time ContextualSpellCheck workflow": [[41, "Time-ContextualSpellCheck-workflow"]], "Timing for performance": [[51, "Timing-for-performance"]], "Usage Notebooks": [[47, null]], "Welcome to DACKAR\u2019s documentation!": [[38, null]], "Windows machine have an issue with pydantic": [[39, "windows-machine-have-an-issue-with-pydantic"]], "You may need to install stemming for some of unit parsing": [[39, "you-may-need-to-install-stemming-for-some-of-unit-parsing"]], "chains and mentions can be navigated much as if they were lists": [[48, "chains-and-mentions-can-be-navigated-much-as-if-they-were-lists"]], "numerizer Acting on Strings": [[50, "numerizer-Acting-on-Strings"]], "numerizer Optional Arguments": [[50, "numerizer-Optional-Arguments"]], "numerizer Preprocessing": [[50, null]], "numerizer as SpaCy Extenstion": [[50, "numerizer-as-SpaCy-Extenstion"]], "src": [[36, null]], "src.dackar": [[2, null]], "src.dackar.config": [[1, null]], "src.dackar.knowledge_graph": [[3, null]], "src.dackar.pipelines": [[13, null]], "src.dackar.pipelines.ConjectureEntity": [[4, null]], "src.dackar.pipelines.CustomPipelineComponents": [[5, null]], "src.dackar.pipelines.GeneralEntity": [[6, null]], "src.dackar.pipelines.LocationEntity": [[7, null]], "src.dackar.pipelines.PhraseEntityMatcher": [[8, null]], "src.dackar.pipelines.SimpleEntityMatcher": [[9, null]], "src.dackar.pipelines.TemporalAttributeEntity": [[10, null]], "src.dackar.pipelines.TemporalRelationEntity": [[11, null]], "src.dackar.pipelines.UnitEntity": [[12, null]], "src.dackar.similarity": [[15, null]], "src.dackar.similarity.SentenceSimilarity": [[14, null]], "src.dackar.similarity.simUtils": [[16, null]], "src.dackar.similarity.synsetUtils": [[17, null]], "src.dackar.text_processing": [[20, null]], "src.dackar.text_processing.Abbreviation": [[18, null]], "src.dackar.text_processing.Preprocessing": [[19, null]], "src.dackar.utils": [[21, null]], "src.dackar.utils.mbse": [[23, null]], "src.dackar.utils.mbse.LMLparser": [[22, null]], "src.dackar.utils.nlp": [[25, null]], "src.dackar.utils.nlp.CreatePatterns": [[24, null]], "src.dackar.utils.nlp.nlp_utils": [[26, null]], "src.dackar.utils.num": [[27, null]], "src.dackar.utils.opm": [[29, null]], "src.dackar.utils.opm.OPLparser": [[28, null]], "src.dackar.utils.utils": [[30, null]], "src.dackar.workflows": [[35, null]], "src.dackar.workflows.OperatorShiftLogsProcessing": [[31, null]], "src.dackar.workflows.RuleBasedMatcher": [[32, null]], "src.dackar.workflows.WorkOrderProcessing": [[33, null]], "src.dackar.workflows.WorkflowBase": [[34, null]], "textacy Preprocessing Methods for NLP": [[52, null]]}, "docnames": ["autoapi/index", "autoapi/src/dackar/config/index", "autoapi/src/dackar/index", "autoapi/src/dackar/knowledge_graph/index", "autoapi/src/dackar/pipelines/ConjectureEntity/index", "autoapi/src/dackar/pipelines/CustomPipelineComponents/index", "autoapi/src/dackar/pipelines/GeneralEntity/index", "autoapi/src/dackar/pipelines/LocationEntity/index", "autoapi/src/dackar/pipelines/PhraseEntityMatcher/index", "autoapi/src/dackar/pipelines/SimpleEntityMatcher/index", "autoapi/src/dackar/pipelines/TemporalAttributeEntity/index", "autoapi/src/dackar/pipelines/TemporalRelationEntity/index", "autoapi/src/dackar/pipelines/UnitEntity/index", "autoapi/src/dackar/pipelines/index", "autoapi/src/dackar/similarity/SentenceSimilarity/index", "autoapi/src/dackar/similarity/index", "autoapi/src/dackar/similarity/simUtils/index", "autoapi/src/dackar/similarity/synsetUtils/index", "autoapi/src/dackar/text_processing/Abbreviation/index", "autoapi/src/dackar/text_processing/Preprocessing/index", "autoapi/src/dackar/text_processing/index", "autoapi/src/dackar/utils/index", "autoapi/src/dackar/utils/mbse/LMLparser/index", "autoapi/src/dackar/utils/mbse/index", "autoapi/src/dackar/utils/nlp/CreatePatterns/index", "autoapi/src/dackar/utils/nlp/index", "autoapi/src/dackar/utils/nlp/nlp_utils/index", "autoapi/src/dackar/utils/num/index", "autoapi/src/dackar/utils/opm/OPLparser/index", "autoapi/src/dackar/utils/opm/index", "autoapi/src/dackar/utils/utils/index", "autoapi/src/dackar/workflows/OperatorShiftLogsProcessing/index", "autoapi/src/dackar/workflows/RuleBasedMatcher/index", "autoapi/src/dackar/workflows/WorkOrderProcessing/index", "autoapi/src/dackar/workflows/WorkflowBase/index", "autoapi/src/dackar/workflows/index", "autoapi/src/index", "contributors", "index", "install", "install_spacy3.5", "notebooks/PreprocessingDemo", "notebooks/RuleBasedNLP", "notebooks/WorkOrderProcessing", "notebooks/Workflow_Demo", "notebooks/abbreviationHandlerDemo", "notebooks/alias_demo", "notebooks/index", "notebooks/nlp", "notebooks/nlp_custom_pipes", "notebooks/numerizerPreprocessing", "notebooks/test_synset_similarity", "notebooks/textacyPreprocessingMethods", "support"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["autoapi/index.rst", "autoapi/src/dackar/config/index.rst", "autoapi/src/dackar/index.rst", "autoapi/src/dackar/knowledge_graph/index.rst", "autoapi/src/dackar/pipelines/ConjectureEntity/index.rst", "autoapi/src/dackar/pipelines/CustomPipelineComponents/index.rst", "autoapi/src/dackar/pipelines/GeneralEntity/index.rst", "autoapi/src/dackar/pipelines/LocationEntity/index.rst", "autoapi/src/dackar/pipelines/PhraseEntityMatcher/index.rst", "autoapi/src/dackar/pipelines/SimpleEntityMatcher/index.rst", "autoapi/src/dackar/pipelines/TemporalAttributeEntity/index.rst", "autoapi/src/dackar/pipelines/TemporalRelationEntity/index.rst", "autoapi/src/dackar/pipelines/UnitEntity/index.rst", "autoapi/src/dackar/pipelines/index.rst", "autoapi/src/dackar/similarity/SentenceSimilarity/index.rst", "autoapi/src/dackar/similarity/index.rst", "autoapi/src/dackar/similarity/simUtils/index.rst", "autoapi/src/dackar/similarity/synsetUtils/index.rst", "autoapi/src/dackar/text_processing/Abbreviation/index.rst", "autoapi/src/dackar/text_processing/Preprocessing/index.rst", "autoapi/src/dackar/text_processing/index.rst", "autoapi/src/dackar/utils/index.rst", "autoapi/src/dackar/utils/mbse/LMLparser/index.rst", "autoapi/src/dackar/utils/mbse/index.rst", "autoapi/src/dackar/utils/nlp/CreatePatterns/index.rst", "autoapi/src/dackar/utils/nlp/index.rst", "autoapi/src/dackar/utils/nlp/nlp_utils/index.rst", "autoapi/src/dackar/utils/num/index.rst", "autoapi/src/dackar/utils/opm/OPLparser/index.rst", "autoapi/src/dackar/utils/opm/index.rst", "autoapi/src/dackar/utils/utils/index.rst", "autoapi/src/dackar/workflows/OperatorShiftLogsProcessing/index.rst", "autoapi/src/dackar/workflows/RuleBasedMatcher/index.rst", "autoapi/src/dackar/workflows/WorkOrderProcessing/index.rst", "autoapi/src/dackar/workflows/WorkflowBase/index.rst", "autoapi/src/dackar/workflows/index.rst", "autoapi/src/index.rst", "contributors.rst", "index.rst", "install.rst", "install_spacy3.5.rst", "notebooks/PreprocessingDemo.ipynb", "notebooks/RuleBasedNLP.ipynb", "notebooks/WorkOrderProcessing.ipynb", "notebooks/Workflow_Demo.ipynb", "notebooks/abbreviationHandlerDemo.ipynb", "notebooks/alias_demo.ipynb", "notebooks/index.rst", "notebooks/nlp.ipynb", "notebooks/nlp_custom_pipes.ipynb", "notebooks/numerizerPreprocessing.ipynb", "notebooks/test_synset_similarity.ipynb", "notebooks/textacyPreprocessingMethods.ipynb", "support.rst"], "indexentries": {"_ (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "id0", false], [5, "id1", false], [5, "src.dackar.pipelines.CustomPipelineComponents._", false]], "__call__() (src.dackar.pipelines.conjectureentity.conjectureentity method)": [[4, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity.__call__", false]], "__call__() (src.dackar.pipelines.generalentity.generalentity method)": [[6, "src.dackar.pipelines.GeneralEntity.GeneralEntity.__call__", false]], "__call__() (src.dackar.pipelines.locationentity.locationentity method)": [[7, "src.dackar.pipelines.LocationEntity.LocationEntity.__call__", false]], "__call__() (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher method)": [[8, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.__call__", false]], "__call__() (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher method)": [[9, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.__call__", false]], "__call__() (src.dackar.pipelines.temporalattributeentity.temporalattributeentity method)": [[10, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity.__call__", false]], "__call__() (src.dackar.pipelines.temporalrelationentity.temporalrelationentity method)": [[11, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity.__call__", false]], "__call__() (src.dackar.pipelines.unitentity.unitentity method)": [[12, "src.dackar.pipelines.UnitEntity.UnitEntity.__call__", false]], "__call__() (src.dackar.text_processing.preprocessing.preprocessing method)": [[19, "src.dackar.text_processing.Preprocessing.Preprocessing.__call__", false]], "__call__() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.__call__", false]], "__version__ (in module src.dackar)": [[2, "src.dackar.__version__", false]], "_allrelpairs (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._allRelPairs", false]], "_allrelpairs (src.dackar.workflows.workorderprocessing.workorderprocessing attribute)": [[33, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing._allRelPairs", false]], "_causalfile (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalFile", false]], "_causalkeywordid (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalKeywordID", false]], "_causalkeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalKeywords", false]], "_causalnames (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalNames", false]], "_causalpos (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalPOS", false]], "_causalsentsnoents (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalSentsNoEnts", false]], "_causalsentsoneent (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalSentsOneEnt", false]], "_conjecturefile (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._conjectureFile", false]], "_conjecturekeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._conjectureKeywords", false]], "_coref (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._coref", false]], "_corefavail (in module src.dackar.workflows.workflowbase)": [[34, "src.dackar.workflows.WorkflowBase._corefAvail", false]], "_doc (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._doc", false]], "_enths (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._entHS", false]], "_entid (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._entID", false]], "_entitylabels (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._entityLabels", false]], "_entityruler (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._entityRuler", false]], "_entityrulermatches (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._entityRulerMatches", false]], "_entstatus (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._entStatus", false]], "_extractedcausals (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._extractedCausals", false]], "_extractedinfonames (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._extractedInfoNames", false]], "_matchedsents (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._matchedSents", false]], "_matchedsentsforvis (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._matchedSentsForVis", false]], "_objlist (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._objList", false]], "_rawcausallist (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._rawCausalList", false]], "_relationnames (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._relationNames", false]], "_relationnames (src.dackar.workflows.workorderprocessing.workorderprocessing attribute)": [[33, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing._relationNames", false]], "_screen (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._screen", false]], "_statusfile (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._statusFile", false]], "_statuskeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._statusKeywords", false]], "_subjlist (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._subjList", false]], "_textprocess (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._textProcess", false]], "_updatecausalkeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._updateCausalKeywords", false]], "_updatestatuskeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._updateStatusKeywords", false]], "_visualizematchedsents (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase._visualizeMatchedSents", false]], "abbrdict (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[19, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrDict", false]], "abbreviation (class in src.dackar.text_processing.abbreviation)": [[18, "src.dackar.text_processing.Abbreviation.Abbreviation", false]], "abbreviationsub() (src.dackar.text_processing.abbreviation.abbreviation method)": [[18, "src.dackar.text_processing.Abbreviation.Abbreviation.abbreviationSub", false]], "abbrexpander (class in src.dackar.text_processing.preprocessing)": [[19, "src.dackar.text_processing.Preprocessing.AbbrExpander", false]], "abbrlist (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[19, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrList", false]], "abbrprocess() (src.dackar.text_processing.preprocessing.abbrexpander method)": [[19, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrProcess", false]], "abbrtype (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[19, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrType", false]], "acronyms (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.acronyms", false]], "acronyms (src.dackar.utils.opm.oplparser.opmobject attribute)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.acronyms", false]], "addentitypattern() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.addEntityPattern", false]], "addkeywords() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.addKeywords", false]], "addkeywords() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[33, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.addKeywords", false]], "addwordstodictionary() (src.dackar.text_processing.preprocessing.spellchecker method)": [[19, "src.dackar.text_processing.Preprocessing.SpellChecker.addWordsToDictionary", false]], "aliaslookup (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.aliasLookup", false]], "aliasresolver() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.aliasResolver", false]], "anaphorcoref() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.anaphorCoref", false]], "anaphorentcoref() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.anaphorEntCoref", false]], "asspan (src.dackar.pipelines.generalentity.generalentity attribute)": [[6, "src.dackar.pipelines.GeneralEntity.GeneralEntity.asSpan", false]], "asspan (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher attribute)": [[8, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.asSpan", false]], "asspan (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher attribute)": [[9, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.asSpan", false]], "asspan (src.dackar.pipelines.unitentity.unitentity attribute)": [[12, "src.dackar.pipelines.UnitEntity.UnitEntity.asSpan", false]], "bfs() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.bfs", false]], "brownic (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.brownIc", false]], "browninfo() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.brownInfo", false]], "checkacronym() (in module src.dackar.utils.opm.oplparser)": [[28, "src.dackar.utils.opm.OPLparser.checkAcronym", false]], "checker (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[19, "src.dackar.text_processing.Preprocessing.AbbrExpander.checker", false]], "checker (src.dackar.text_processing.preprocessing.spellchecker attribute)": [[19, "src.dackar.text_processing.Preprocessing.SpellChecker.checker", false]], "checkertype (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[19, "src.dackar.text_processing.Preprocessing.AbbrExpander.checkerType", false]], "cleanedgraph() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.cleanedGraph", false]], "collectcauseeffectsents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.collectCauseEffectSents", false]], "collectextactedcausals() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.collectExtactedCausals", false]], "collectsents() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.collectSents", false]], "configfilename (in module src.dackar.config)": [[1, "src.dackar.config.configFileName", false]], "conjectureentity (class in src.dackar.pipelines.conjectureentity)": [[4, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity", false]], "connetgraph() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.connetGraph", false]], "constructsemanticvector() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.constructSemanticVector", false]], "constructsemanticvector() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.constructSemanticVector", false]], "constructsemanticvectorusingdisambiguatedsynsets() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.constructSemanticVectorUsingDisambiguatedSynsets", false]], "constructsimilarityvectorpawarmagomethod() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.constructSimilarityVectorPawarMagoMethod", false]], "constructsynsetordervector() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.constructSynsetOrderVector", false]], "constructwordordervector() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.constructWordOrderVector", false]], "content() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.content", false]], "convertsentstosynsets() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.convertSentsToSynsets", false]], "convertsentstosynsetswithdisambiguation() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.convertSentsToSynsetsWithDisambiguation", false]], "converttosynsets() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.convertToSynsets", false]], "correct() (src.dackar.text_processing.preprocessing.spellchecker method)": [[19, "src.dackar.text_processing.Preprocessing.SpellChecker.correct", false]], "create_conjecture_component() (in module src.dackar.pipelines.conjectureentity)": [[4, "src.dackar.pipelines.ConjectureEntity.create_conjecture_component", false]], "create_general_component() (in module src.dackar.pipelines.generalentity)": [[6, "src.dackar.pipelines.GeneralEntity.create_general_component", false]], "create_location_component() (in module src.dackar.pipelines.locationentity)": [[7, "src.dackar.pipelines.LocationEntity.create_location_component", false]], "create_phrase_matcher_component() (in module src.dackar.pipelines.phraseentitymatcher)": [[8, "src.dackar.pipelines.PhraseEntityMatcher.create_phrase_matcher_component", false]], "create_simple_matcher_component() (in module src.dackar.pipelines.simpleentitymatcher)": [[9, "src.dackar.pipelines.SimpleEntityMatcher.create_simple_matcher_component", false]], "create_temporal_attribute_component() (in module src.dackar.pipelines.temporalattributeentity)": [[10, "src.dackar.pipelines.TemporalAttributeEntity.create_temporal_attribute_component", false]], "create_temporal_relation_component() (in module src.dackar.pipelines.temporalrelationentity)": [[11, "src.dackar.pipelines.TemporalRelationEntity.create_temporal_relation_component", false]], "create_unit_component() (in module src.dackar.pipelines.unitentity)": [[12, "src.dackar.pipelines.UnitEntity.create_unit_component", false]], "createpatterns (class in src.dackar.utils.nlp.createpatterns)": [[24, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns", false]], "createtextacynormalizefunction() (src.dackar.text_processing.preprocessing.preprocessing method)": [[19, "src.dackar.text_processing.Preprocessing.Preprocessing.createTextacyNormalizeFunction", false]], "createtextacyremovefunction() (src.dackar.text_processing.preprocessing.preprocessing method)": [[19, "src.dackar.text_processing.Preprocessing.Preprocessing.createTextacyRemoveFunction", false]], "createtextacyreplacefunction() (src.dackar.text_processing.preprocessing.preprocessing method)": [[19, "src.dackar.text_processing.Preprocessing.Preprocessing.createTextacyReplaceFunction", false]], "customlabel (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.customLabel", false]], "dataframeentities (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.dataframeEntities", false]], "dataframerelations (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.dataframeRelations", false]], "df (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.df", false]], "disambiguationmethod (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.disambiguationMethod", false]], "displayner() (in module src.dackar.utils.nlp.nlp_utils)": [[26, "src.dackar.utils.nlp.nlp_utils.displayNER", false]], "dumpnodesedgesfiles() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.dumpNodesEdgesFiles", false]], "edge_colors (src.dackar.utils.opm.oplparser.opmobject attribute)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.edge_colors", false]], "embentities (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.embEntities", false]], "entities (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.entities", false]], "entities (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[24, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.entities", false]], "entityruler (src.dackar.pipelines.conjectureentity.conjectureentity attribute)": [[4, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.generalentity.generalentity attribute)": [[6, "src.dackar.pipelines.GeneralEntity.GeneralEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.locationentity.locationentity attribute)": [[7, "src.dackar.pipelines.LocationEntity.LocationEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.temporalattributeentity.temporalattributeentity attribute)": [[10, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.temporalrelationentity.temporalrelationentity attribute)": [[11, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity.entityRuler", false]], "entityruler (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.entityRuler", false]], "expandentities() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.expandEntities", false]], "extendent() (in module src.dackar.utils.nlp.nlp_utils)": [[26, "src.dackar.utils.nlp.nlp_utils.extendEnt", false]], "extract() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.extract", false]], "extractcausalreldep() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractCausalRelDep", false]], "extracthealthstatus() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.extractHealthStatus", false]], "extracthealthstatus() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[33, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.extractHealthStatus", false]], "extractinformation() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractInformation", false]], "extractinformation() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.extractInformation", false]], "extractinformation() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.extractInformation", false]], "extractinformation() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[33, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.extractInformation", false]], "extractlemma() (in module src.dackar.utils.nlp.nlp_utils)": [[26, "src.dackar.utils.nlp.nlp_utils.extractLemma", false]], "extractlemma() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.extractLemma", false]], "extractreldep() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractRelDep", false]], "extractreldep() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.extractRelDep", false]], "extractreldep() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[33, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.extractRelDep", false]], "extractstatus() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractStatus", false]], "filename (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.filename", false]], "filename (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[24, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.filename", false]], "filename (src.dackar.utils.opm.oplparser.opmobject attribute)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.filename", false]], "findhealthstatus() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.findHealthStatus", false]], "findhealthstatus() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.findHealthStatus", false]], "findleftsubj() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.findLeftSubj", false]], "findobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.findObj", false]], "findoptimaloption() (src.dackar.text_processing.preprocessing.spellchecker method)": [[19, "src.dackar.text_processing.Preprocessing.SpellChecker.findOptimalOption", false]], "findrightkeyword() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.findRightKeyword", false]], "findrightobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.findRightObj", false]], "findsubj() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.findSubj", false]], "findverb() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.findVerb", false]], "functionlist (src.dackar.text_processing.preprocessing.preprocessing attribute)": [[19, "src.dackar.text_processing.Preprocessing.Preprocessing.functionList", false]], "generalentity (class in src.dackar.pipelines.generalentity)": [[6, "src.dackar.pipelines.GeneralEntity.GeneralEntity", false]], "generateabbrdict() (src.dackar.text_processing.preprocessing.spellchecker method)": [[19, "src.dackar.text_processing.Preprocessing.SpellChecker.generateAbbrDict", false]], "generatepattern() (in module src.dackar.utils.nlp.nlp_utils)": [[26, "src.dackar.utils.nlp.nlp_utils.generatePattern", false]], "generatepatternlist() (in module src.dackar.utils.nlp.nlp_utils)": [[26, "src.dackar.utils.nlp.nlp_utils.generatePatternList", false]], "generatepatterns() (src.dackar.utils.nlp.createpatterns.createpatterns method)": [[24, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.generatePatterns", false]], "getabbreviation() (src.dackar.text_processing.abbreviation.abbreviation method)": [[18, "src.dackar.text_processing.Abbreviation.Abbreviation.getAbbreviation", false]], "getamod() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getAmod", false]], "getamodonly() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getAmodOnly", false]], "getcompoundonly() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getCompoundOnly", false]], "getconjuncts() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getConjuncts", false]], "getcustoments() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getCustomEnts", false]], "getentid() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.getEntID", false]], "gethealthstatusforobj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getHealthStatusForObj", false]], "gethealthstatusforpobj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getHealthStatusForPobj", false]], "gethealthstatusforsubj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getHealthStatusForSubj", false]], "getindex() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getIndex", false]], "getkeywords() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getKeywords", false]], "getleftsscents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getLeftSSCEnts", false]], "getmisspelledwords() (src.dackar.text_processing.preprocessing.spellchecker method)": [[19, "src.dackar.text_processing.Preprocessing.SpellChecker.getMisspelledWords", false]], "getnbor() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getNbor", false]], "getonlywords() (in module src.dackar.utils.utils)": [[30, "src.dackar.utils.utils.getOnlyWords", false]], "getpatterns() (src.dackar.utils.nlp.createpatterns.createpatterns method)": [[24, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.getPatterns", false]], "getphrase() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getPhrase", false]], "getrightsscents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getRightSSCEnts", false]], "getshortacronym() (in module src.dackar.utils.utils)": [[30, "src.dackar.utils.utils.getShortAcronym", false]], "getsscent() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getSSCEnt", false]], "getstatusforobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getStatusForObj", false]], "getstatusforpobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getStatusForPobj", false]], "getstatusforsubj() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.getStatusForSubj", false]], "handleabbreviations() (src.dackar.text_processing.preprocessing.spellchecker method)": [[19, "src.dackar.text_processing.Preprocessing.SpellChecker.handleAbbreviations", false]], "handleabbreviationsdict() (src.dackar.text_processing.preprocessing.spellchecker method)": [[19, "src.dackar.text_processing.Preprocessing.SpellChecker.handleAbbreviationsDict", false]], "handleinvalidsent() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.handleInvalidSent", false]], "handlevalidsent() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.handleValidSent", false]], "identifybestsimilarsynsetfromsynsets() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.identifyBestSimilarSynsetFromSynsets", false]], "identifybestsimilarsynsetpair() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.identifyBestSimilarSynsetPair", false]], "identifybestsimilarwordfromwordset() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.identifyBestSimilarWordFromWordSet", false]], "identifybestsynset() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.identifyBestSynset", false]], "identifycauseeffectforattr() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.identifyCauseEffectForAttr", false]], "identifycauseeffectforclausemodifier() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.identifyCauseEffectForClauseModifier", false]], "identifycauseeffectfornsuj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.identifyCauseEffectForNsuj", false]], "identifynounandverbforcomparison() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.identifyNounAndVerbForComparison", false]], "initcoref() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.initCoref", false]], "isconjecture() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.isConjecture", false]], "isnegation() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.isNegation", false]], "ispassive() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.isPassive", false]], "issubelement() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.isSubElement", false]], "issubelements() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.isSubElements", false]], "isvalidcausalents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.isValidCausalEnts", false]], "isvalidcausalents() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.isValidCausalEnts", false]], "isvalidkeyword() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.isValidKeyword", false]], "label (src.dackar.pipelines.unitentity.unitentity attribute)": [[12, "src.dackar.pipelines.UnitEntity.UnitEntity.label", false]], "label (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[24, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.label", false]], "linkentities (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.linkEntities", false]], "links2opms (src.dackar.utils.opm.oplparser.opmobject attribute)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.links2OPMs", false]], "linktombsemodels (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.linkToMBSEmodels", false]], "listids (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.listIDs", false]], "lmlgraph (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.LMLgraph", false]], "lmlobject (class in src.dackar.utils.mbse.lmlparser)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject", false]], "lmlparser() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.LMLparser", false]], "locationentity (class in src.dackar.pipelines.locationentity)": [[7, "src.dackar.pipelines.LocationEntity.LocationEntity", false]], "log_format (in module src.dackar.similarity.sentencesimilarity)": [[14, "src.dackar.similarity.SentenceSimilarity.log_format", false]], "logger (in module src.dackar)": [[2, "src.dackar.logger", false]], "logger (in module src.dackar.pipelines.conjectureentity)": [[4, "src.dackar.pipelines.ConjectureEntity.logger", false]], "logger (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.logger", false]], "logger (in module src.dackar.pipelines.generalentity)": [[6, "src.dackar.pipelines.GeneralEntity.logger", false]], "logger (in module src.dackar.pipelines.locationentity)": [[7, "src.dackar.pipelines.LocationEntity.logger", false]], "logger (in module src.dackar.pipelines.phraseentitymatcher)": [[8, "src.dackar.pipelines.PhraseEntityMatcher.logger", false]], "logger (in module src.dackar.pipelines.simpleentitymatcher)": [[9, "src.dackar.pipelines.SimpleEntityMatcher.logger", false]], "logger (in module src.dackar.pipelines.temporalattributeentity)": [[10, "src.dackar.pipelines.TemporalAttributeEntity.logger", false]], "logger (in module src.dackar.pipelines.temporalrelationentity)": [[11, "src.dackar.pipelines.TemporalRelationEntity.logger", false]], "logger (in module src.dackar.pipelines.unitentity)": [[12, "src.dackar.pipelines.UnitEntity.logger", false]], "logger (in module src.dackar.similarity.sentencesimilarity)": [[14, "src.dackar.similarity.SentenceSimilarity.logger", false]], "logger (in module src.dackar.text_processing.abbreviation)": [[18, "src.dackar.text_processing.Abbreviation.logger", false]], "logger (in module src.dackar.utils.nlp.nlp_utils)": [[26, "src.dackar.utils.nlp.nlp_utils.logger", false]], "logger (in module src.dackar.utils.utils)": [[30, "src.dackar.utils.utils.logger", false]], "logger (in module src.dackar.workflows.operatorshiftlogsprocessing)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.logger", false]], "logger (in module src.dackar.workflows.rulebasedmatcher)": [[32, "src.dackar.workflows.RuleBasedMatcher.logger", false]], "logger (in module src.dackar.workflows.workflowbase)": [[34, "src.dackar.workflows.WorkflowBase.logger", false]], "logger (in module src.dackar.workflows.workorderprocessing)": [[33, "src.dackar.workflows.WorkOrderProcessing.logger", false]], "matcher (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher attribute)": [[8, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.matcher", false]], "matcher (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher attribute)": [[9, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.matcher", false]], "matcher (src.dackar.pipelines.unitentity.unitentity attribute)": [[12, "src.dackar.pipelines.UnitEntity.UnitEntity.matcher", false]], "mergeentitieswithsameid() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.mergeEntitiesWithSameID", false]], "mergephrase() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.mergePhrase", false]], "module": [[1, "module-src.dackar.config", false], [2, "module-src.dackar", false], [3, "module-src.dackar.knowledge_graph", false], [4, "module-src.dackar.pipelines.ConjectureEntity", false], [5, "module-src.dackar.pipelines.CustomPipelineComponents", false], [6, "module-src.dackar.pipelines.GeneralEntity", false], [7, "module-src.dackar.pipelines.LocationEntity", false], [8, "module-src.dackar.pipelines.PhraseEntityMatcher", false], [9, "module-src.dackar.pipelines.SimpleEntityMatcher", false], [10, "module-src.dackar.pipelines.TemporalAttributeEntity", false], [11, "module-src.dackar.pipelines.TemporalRelationEntity", false], [12, "module-src.dackar.pipelines.UnitEntity", false], [13, "module-src.dackar.pipelines", false], [14, "module-src.dackar.similarity.SentenceSimilarity", false], [15, "module-src.dackar.similarity", false], [16, "module-src.dackar.similarity.simUtils", false], [17, "module-src.dackar.similarity.synsetUtils", false], [18, "module-src.dackar.text_processing.Abbreviation", false], [19, "module-src.dackar.text_processing.Preprocessing", false], [20, "module-src.dackar.text_processing", false], [21, "module-src.dackar.utils", false], [22, "module-src.dackar.utils.mbse.LMLparser", false], [23, "module-src.dackar.utils.mbse", false], [24, "module-src.dackar.utils.nlp.CreatePatterns", false], [25, "module-src.dackar.utils.nlp", false], [26, "module-src.dackar.utils.nlp.nlp_utils", false], [27, "module-src.dackar.utils.num", false], [28, "module-src.dackar.utils.opm.OPLparser", false], [29, "module-src.dackar.utils.opm", false], [30, "module-src.dackar.utils.utils", false], [31, "module-src.dackar.workflows.OperatorShiftLogsProcessing", false], [32, "module-src.dackar.workflows.RuleBasedMatcher", false], [33, "module-src.dackar.workflows.WorkOrderProcessing", false], [34, "module-src.dackar.workflows.WorkflowBase", false], [35, "module-src.dackar.workflows", false], [36, "module-src", false]], "name (src.dackar.pipelines.conjectureentity.conjectureentity attribute)": [[4, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity.name", false]], "name (src.dackar.pipelines.generalentity.generalentity attribute)": [[6, "src.dackar.pipelines.GeneralEntity.GeneralEntity.name", false]], "name (src.dackar.pipelines.locationentity.locationentity attribute)": [[7, "src.dackar.pipelines.LocationEntity.LocationEntity.name", false]], "name (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher attribute)": [[8, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.name", false]], "name (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher attribute)": [[9, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.name", false]], "name (src.dackar.pipelines.temporalattributeentity.temporalattributeentity attribute)": [[10, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity.name", false]], "name (src.dackar.pipelines.temporalrelationentity.temporalrelationentity attribute)": [[11, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity.name", false]], "name (src.dackar.pipelines.unitentity.unitentity attribute)": [[12, "src.dackar.pipelines.UnitEntity.UnitEntity.name", false]], "name (src.dackar.text_processing.abbreviation.abbreviation attribute)": [[18, "src.dackar.text_processing.Abbreviation.Abbreviation.name", false]], "name (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.name", false]], "nlp (src.dackar.pipelines.unitentity.unitentity attribute)": [[12, "src.dackar.pipelines.UnitEntity.UnitEntity.nlp", false]], "nlp (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.nlp", false]], "nlpconfig (in module src.dackar.config)": [[1, "src.dackar.config.nlpConfig", false]], "node_colors (src.dackar.utils.opm.oplparser.opmobject attribute)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.node_colors", false]], "normentities() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.normEntities", false]], "not_acronyms (in module src.dackar.text_processing.abbreviation)": [[18, "src.dackar.text_processing.Abbreviation.not_acronyms", false]], "numerizer (in module src.dackar.text_processing.preprocessing)": [[19, "src.dackar.text_processing.Preprocessing.numerizer", false]], "objectlist (src.dackar.utils.opm.oplparser.opmobject attribute)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.objectList", false]], "operatorshiftlogs (class in src.dackar.workflows.operatorshiftlogsprocessing)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs", false]], "oplentityparser() (src.dackar.utils.opm.oplparser.opmobject method)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.OPLentityParser", false]], "oplparser() (src.dackar.utils.opm.oplparser.opmobject method)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.OPLparser", false]], "opltextparser() (src.dackar.utils.opm.oplparser.opmobject method)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.OPLtextParser", false]], "opmgraph (src.dackar.utils.opm.oplparser.opmobject attribute)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.opmGraph", false]], "opmobject (class in src.dackar.utils.opm.oplparser)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject", false]], "parseassetentity() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.parseAssetEntity", false]], "parseentitydescription() (in module src.dackar.utils.mbse.lmlparser)": [[22, "src.dackar.utils.mbse.LMLparser.parseEntityDescription", false]], "parselinkentity() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.parseLinkEntity", false]], "path (in module src.dackar.config)": [[1, "src.dackar.config.path", false]], "pathlength() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.pathLength", false]], "patterns (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[24, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.patterns", false]], "phraseentitymatcher (class in src.dackar.pipelines.phraseentitymatcher)": [[8, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher", false]], "pipeline (src.dackar.text_processing.preprocessing.preprocessing attribute)": [[19, "src.dackar.text_processing.Preprocessing.Preprocessing.pipeline", false]], "plotdag() (in module src.dackar.utils.nlp.nlp_utils)": [[26, "src.dackar.utils.nlp.nlp_utils.plotDAG", false]], "preprocess (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[19, "src.dackar.text_processing.Preprocessing.AbbrExpander.preprocess", false]], "preprocessing (class in src.dackar.text_processing.preprocessing)": [[19, "src.dackar.text_processing.Preprocessing.Preprocessing", false]], "preprocessordefaultlist (in module src.dackar.text_processing.preprocessing)": [[19, "src.dackar.text_processing.Preprocessing.preprocessorDefaultList", false]], "preprocessordefaultoptions (in module src.dackar.text_processing.preprocessing)": [[19, "src.dackar.text_processing.Preprocessing.preprocessorDefaultOptions", false]], "preprocessorlist (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[19, "src.dackar.text_processing.Preprocessing.AbbrExpander.preprocessorList", false]], "preprocessornames (src.dackar.text_processing.preprocessing.preprocessing attribute)": [[19, "src.dackar.text_processing.Preprocessing.Preprocessing.preprocessorNames", false]], "printdeptree() (in module src.dackar.utils.nlp.nlp_utils)": [[26, "src.dackar.utils.nlp.nlp_utils.printDepTree", false]], "printonfile() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.printOnFile", false]], "processlist (src.dackar.utils.opm.oplparser.opmobject attribute)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.processList", false]], "propagateenttype() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.propagateEntType", false]], "pysbdsentenceboundaries() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.pysbdSentenceBoundaries", false]], "readfile() (src.dackar.utils.nlp.createpatterns.createpatterns method)": [[24, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.readFile", false]], "removeacronym() (in module src.dackar.utils.opm.oplparser)": [[28, "src.dackar.utils.opm.OPLparser.removeAcronym", false]], "reset() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.reset", false]], "reset() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.reset", false]], "reset() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.reset", false]], "reset() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[33, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.reset", false]], "resetpipeline() (in module src.dackar.utils.nlp.nlp_utils)": [[26, "src.dackar.utils.nlp.nlp_utils.resetPipeline", false]], "returnacronym() (src.dackar.utils.opm.oplparser.opmobject method)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.returnAcronym", false]], "returnattributelist() (src.dackar.utils.opm.oplparser.opmobject method)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.returnAttributeList", false]], "returnentities() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.returnEntities", false]], "returngraph() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.returnGraph", false]], "returngraph() (src.dackar.utils.opm.oplparser.opmobject method)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.returnGraph", false]], "returnlistids() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[22, "src.dackar.utils.mbse.LMLparser.LMLobject.returnListIDs", false]], "returnobjectlist() (src.dackar.utils.opm.oplparser.opmobject method)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.returnObjectList", false]], "returnprocesslist() (src.dackar.utils.opm.oplparser.opmobject method)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.returnProcessList", false]], "returnsexternallinks() (src.dackar.utils.opm.oplparser.opmobject method)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.returnsExternalLinks", false]], "rulebasedmatcher (class in src.dackar.workflows.rulebasedmatcher)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher", false]], "scalingdeptheffect() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.scalingDepthEffect", false]], "selectvalidents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.selectValidEnts", false]], "semanticsimilaritysentences() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.semanticSimilaritySentences", false]], "semanticsimilaritysynsetlist() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.semanticSimilaritySynsetList", false]], "semanticsimilaritysynsets() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.semanticSimilaritySynsets", false]], "semanticsimilarityusingdisambiguatedsynsets() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.semanticSimilarityUsingDisambiguatedSynsets", false]], "semanticsimilaritywords() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.semanticSimilarityWords", false]], "sentences (src.dackar.utils.opm.oplparser.opmobject attribute)": [[28, "src.dackar.utils.opm.OPLparser.OPMobject.sentences", false]], "sentencesensedisambiguation() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.sentenceSenseDisambiguation", false]], "sentencesensedisambiguationpywsd() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.sentenceSenseDisambiguationPyWSD", false]], "sentencesimialritybestsense() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.sentenceSimialrityBestSense", false]], "sentencesimilarity (class in src.dackar.similarity.sentencesimilarity)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity", false]], "sentencesimilarity() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.sentenceSimilarity", false]], "sentencesimilarity() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.sentenceSimilarity", false]], "sentencesimilaritypawarmagomethod() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.sentenceSimilarityPawarMagoMethod", false]], "sentencesimilaritywithdisambiguation() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.sentenceSimilarityWithDisambiguation", false]], "setparameters() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.setParameters", false]], "similaritymethod (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.similarityMethod", false]], "simpleentitymatcher (class in src.dackar.pipelines.simpleentitymatcher)": [[9, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher", false]], "spellchecker (class in src.dackar.text_processing.preprocessing)": [[19, "src.dackar.text_processing.Preprocessing.SpellChecker", false]], "splitentsfollowingnouncausal() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[32, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.splitEntsFollowingNounCausal", false]], "src": [[36, "module-src", false]], "src.dackar": [[2, "module-src.dackar", false]], "src.dackar.config": [[1, "module-src.dackar.config", false]], "src.dackar.knowledge_graph": [[3, "module-src.dackar.knowledge_graph", false]], "src.dackar.pipelines": [[13, "module-src.dackar.pipelines", false]], "src.dackar.pipelines.conjectureentity": [[4, "module-src.dackar.pipelines.ConjectureEntity", false]], "src.dackar.pipelines.custompipelinecomponents": [[5, "module-src.dackar.pipelines.CustomPipelineComponents", false]], "src.dackar.pipelines.generalentity": [[6, "module-src.dackar.pipelines.GeneralEntity", false]], "src.dackar.pipelines.locationentity": [[7, "module-src.dackar.pipelines.LocationEntity", false]], "src.dackar.pipelines.phraseentitymatcher": [[8, "module-src.dackar.pipelines.PhraseEntityMatcher", false]], "src.dackar.pipelines.simpleentitymatcher": [[9, "module-src.dackar.pipelines.SimpleEntityMatcher", false]], "src.dackar.pipelines.temporalattributeentity": [[10, "module-src.dackar.pipelines.TemporalAttributeEntity", false]], "src.dackar.pipelines.temporalrelationentity": [[11, "module-src.dackar.pipelines.TemporalRelationEntity", false]], "src.dackar.pipelines.unitentity": [[12, "module-src.dackar.pipelines.UnitEntity", false]], "src.dackar.similarity": [[15, "module-src.dackar.similarity", false]], "src.dackar.similarity.sentencesimilarity": [[14, "module-src.dackar.similarity.SentenceSimilarity", false]], "src.dackar.similarity.simutils": [[16, "module-src.dackar.similarity.simUtils", false]], "src.dackar.similarity.synsetutils": [[17, "module-src.dackar.similarity.synsetUtils", false]], "src.dackar.text_processing": [[20, "module-src.dackar.text_processing", false]], "src.dackar.text_processing.abbreviation": [[18, "module-src.dackar.text_processing.Abbreviation", false]], "src.dackar.text_processing.preprocessing": [[19, "module-src.dackar.text_processing.Preprocessing", false]], "src.dackar.utils": [[21, "module-src.dackar.utils", false]], "src.dackar.utils.mbse": [[23, "module-src.dackar.utils.mbse", false]], "src.dackar.utils.mbse.lmlparser": [[22, "module-src.dackar.utils.mbse.LMLparser", false]], "src.dackar.utils.nlp": [[25, "module-src.dackar.utils.nlp", false]], "src.dackar.utils.nlp.createpatterns": [[24, "module-src.dackar.utils.nlp.CreatePatterns", false]], "src.dackar.utils.nlp.nlp_utils": [[26, "module-src.dackar.utils.nlp.nlp_utils", false]], "src.dackar.utils.num": [[27, "module-src.dackar.utils.num", false]], "src.dackar.utils.opm": [[29, "module-src.dackar.utils.opm", false]], "src.dackar.utils.opm.oplparser": [[28, "module-src.dackar.utils.opm.OPLparser", false]], "src.dackar.utils.utils": [[30, "module-src.dackar.utils.utils", false]], "src.dackar.workflows": [[35, "module-src.dackar.workflows", false]], "src.dackar.workflows.operatorshiftlogsprocessing": [[31, "module-src.dackar.workflows.OperatorShiftLogsProcessing", false]], "src.dackar.workflows.rulebasedmatcher": [[32, "module-src.dackar.workflows.RuleBasedMatcher", false]], "src.dackar.workflows.workflowbase": [[34, "module-src.dackar.workflows.WorkflowBase", false]], "src.dackar.workflows.workorderprocessing": [[33, "module-src.dackar.workflows.WorkOrderProcessing", false]], "synsetlistsimilarity() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.synsetListSimilarity", false]], "synsetssimilarity() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.synsetsSimilarity", false]], "temporalattributeentity (class in src.dackar.pipelines.temporalattributeentity)": [[10, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity", false]], "temporalrelationentity (class in src.dackar.pipelines.temporalrelationentity)": [[11, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity", false]], "textacynormalize (in module src.dackar.text_processing.preprocessing)": [[19, "src.dackar.text_processing.Preprocessing.textacyNormalize", false]], "textacyremove (in module src.dackar.text_processing.preprocessing)": [[19, "src.dackar.text_processing.Preprocessing.textacyRemove", false]], "textacyreplace (in module src.dackar.text_processing.preprocessing)": [[19, "src.dackar.text_processing.Preprocessing.textacyReplace", false]], "textprocess() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[31, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.textProcess", false]], "textprocess() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.textProcess", false]], "type (src.dackar.text_processing.abbreviation.abbreviation attribute)": [[18, "src.dackar.text_processing.Abbreviation.Abbreviation.type", false]], "type (src.dackar.workflows.workflowbase.workflowbase attribute)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.type", false]], "unitentity (class in src.dackar.pipelines.unitentity)": [[12, "src.dackar.pipelines.UnitEntity.UnitEntity", false]], "updateabbreviation() (src.dackar.text_processing.abbreviation.abbreviation method)": [[18, "src.dackar.text_processing.Abbreviation.Abbreviation.updateAbbreviation", false]], "validdisambiguation (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.validDisambiguation", false]], "validsent() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.validSent", false]], "validsimilarity (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.validSimilarity", false]], "ver (in module src.dackar.workflows.workflowbase)": [[34, "src.dackar.workflows.WorkflowBase.ver", false]], "visualize() (src.dackar.workflows.workflowbase.workflowbase method)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase.visualize", false]], "wordnetsimmethod (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.wordnetSimMethod", false]], "wordorder (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[14, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.wordOrder", false]], "wordordersimilaritysentences() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.wordOrderSimilaritySentences", false]], "wordordersimilaritysynsetlist() (in module src.dackar.similarity.synsetutils)": [[17, "src.dackar.similarity.synsetUtils.wordOrderSimilaritySynsetList", false]], "wordsensedisambiguation() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.wordSenseDisambiguation", false]], "wordssimilarity() (in module src.dackar.similarity.simutils)": [[16, "src.dackar.similarity.simUtils.wordsSimilarity", false]], "workflowbase (class in src.dackar.workflows.workflowbase)": [[34, "src.dackar.workflows.WorkflowBase.WorkflowBase", false]], "workorderprocessing (class in src.dackar.workflows.workorderprocessing)": [[33, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing", false]]}, "objects": {"": [[36, 0, 0, "-", "src"]], "src": [[2, 0, 0, "-", "dackar"]], "src.dackar": [[2, 1, 1, "", "__version__"], [1, 0, 0, "-", "config"], [3, 0, 0, "-", "knowledge_graph"], [2, 1, 1, "", "logger"], [13, 0, 0, "-", "pipelines"], [15, 0, 0, "-", "similarity"], [20, 0, 0, "-", "text_processing"], [21, 0, 0, "-", "utils"], [35, 0, 0, "-", "workflows"]], "src.dackar.config": [[1, 1, 1, "", "configFileName"], [1, 1, 1, "", "nlpConfig"], [1, 1, 1, "", "path"]], "src.dackar.pipelines": [[4, 0, 0, "-", "ConjectureEntity"], [5, 0, 0, "-", "CustomPipelineComponents"], [6, 0, 0, "-", "GeneralEntity"], [7, 0, 0, "-", "LocationEntity"], [8, 0, 0, "-", "PhraseEntityMatcher"], [9, 0, 0, "-", "SimpleEntityMatcher"], [10, 0, 0, "-", "TemporalAttributeEntity"], [11, 0, 0, "-", "TemporalRelationEntity"], [12, 0, 0, "-", "UnitEntity"]], "src.dackar.pipelines.ConjectureEntity": [[4, 2, 1, "", "ConjectureEntity"], [4, 5, 1, "", "create_conjecture_component"], [4, 1, 1, "", "logger"]], "src.dackar.pipelines.ConjectureEntity.ConjectureEntity": [[4, 3, 1, "", "__call__"], [4, 4, 1, "", "entityRuler"], [4, 4, 1, "", "name"]], "src.dackar.pipelines.CustomPipelineComponents": [[5, 1, 1, "id1", "_"], [5, 1, 1, "", "aliasLookup"], [5, 5, 1, "", "aliasResolver"], [5, 5, 1, "", "anaphorCoref"], [5, 5, 1, "", "anaphorEntCoref"], [5, 1, 1, "", "customLabel"], [5, 1, 1, "", "df"], [5, 5, 1, "", "expandEntities"], [5, 5, 1, "", "getEntID"], [5, 5, 1, "", "initCoref"], [5, 1, 1, "", "logger"], [5, 5, 1, "", "mergeEntitiesWithSameID"], [5, 5, 1, "", "mergePhrase"], [5, 5, 1, "", "normEntities"], [5, 5, 1, "", "propagateEntType"], [5, 5, 1, "", "pysbdSentenceBoundaries"]], "src.dackar.pipelines.GeneralEntity": [[6, 2, 1, "", "GeneralEntity"], [6, 5, 1, "", "create_general_component"], [6, 1, 1, "", "logger"]], "src.dackar.pipelines.GeneralEntity.GeneralEntity": [[6, 3, 1, "", "__call__"], [6, 4, 1, "", "asSpan"], [6, 4, 1, "", "entityRuler"], [6, 4, 1, "", "name"]], "src.dackar.pipelines.LocationEntity": [[7, 2, 1, "", "LocationEntity"], [7, 5, 1, "", "create_location_component"], [7, 1, 1, "", "logger"]], "src.dackar.pipelines.LocationEntity.LocationEntity": [[7, 3, 1, "", "__call__"], [7, 4, 1, "", "entityRuler"], [7, 4, 1, "", "name"]], "src.dackar.pipelines.PhraseEntityMatcher": [[8, 2, 1, "", "PhraseEntityMatcher"], [8, 5, 1, "", "create_phrase_matcher_component"], [8, 1, 1, "", "logger"]], "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher": [[8, 3, 1, "", "__call__"], [8, 4, 1, "", "asSpan"], [8, 4, 1, "", "matcher"], [8, 4, 1, "", "name"]], "src.dackar.pipelines.SimpleEntityMatcher": [[9, 2, 1, "", "SimpleEntityMatcher"], [9, 5, 1, "", "create_simple_matcher_component"], [9, 1, 1, "", "logger"]], "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher": [[9, 3, 1, "", "__call__"], [9, 4, 1, "", "asSpan"], [9, 4, 1, "", "matcher"], [9, 4, 1, "", "name"]], "src.dackar.pipelines.TemporalAttributeEntity": [[10, 2, 1, "", "TemporalAttributeEntity"], [10, 5, 1, "", "create_temporal_attribute_component"], [10, 1, 1, "", "logger"]], "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity": [[10, 3, 1, "", "__call__"], [10, 4, 1, "", "entityRuler"], [10, 4, 1, "", "name"]], "src.dackar.pipelines.TemporalRelationEntity": [[11, 2, 1, "", "TemporalRelationEntity"], [11, 5, 1, "", "create_temporal_relation_component"], [11, 1, 1, "", "logger"]], "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity": [[11, 3, 1, "", "__call__"], [11, 4, 1, "", "entityRuler"], [11, 4, 1, "", "name"]], "src.dackar.pipelines.UnitEntity": [[12, 2, 1, "", "UnitEntity"], [12, 5, 1, "", "create_unit_component"], [12, 1, 1, "", "logger"]], "src.dackar.pipelines.UnitEntity.UnitEntity": [[12, 3, 1, "", "__call__"], [12, 4, 1, "", "asSpan"], [12, 4, 1, "", "label"], [12, 4, 1, "", "matcher"], [12, 4, 1, "", "name"], [12, 4, 1, "", "nlp"]], "src.dackar.similarity": [[14, 0, 0, "-", "SentenceSimilarity"], [16, 0, 0, "-", "simUtils"], [17, 0, 0, "-", "synsetUtils"]], "src.dackar.similarity.SentenceSimilarity": [[14, 2, 1, "", "SentenceSimilarity"], [14, 1, 1, "", "log_format"], [14, 1, 1, "", "logger"]], "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity": [[14, 4, 1, "", "brownIc"], [14, 3, 1, "", "constructSimilarityVectorPawarMagoMethod"], [14, 4, 1, "", "disambiguationMethod"], [14, 3, 1, "", "sentenceSimialrityBestSense"], [14, 3, 1, "", "sentenceSimilarity"], [14, 3, 1, "", "sentenceSimilarityPawarMagoMethod"], [14, 3, 1, "", "setParameters"], [14, 4, 1, "", "similarityMethod"], [14, 4, 1, "", "validDisambiguation"], [14, 4, 1, "", "validSimilarity"], [14, 4, 1, "", "wordOrder"], [14, 4, 1, "", "wordnetSimMethod"]], "src.dackar.similarity.simUtils": [[16, 5, 1, "", "brownInfo"], [16, 5, 1, "", "constructSemanticVector"], [16, 5, 1, "", "constructWordOrderVector"], [16, 5, 1, "", "content"], [16, 5, 1, "", "convertSentsToSynsets"], [16, 5, 1, "", "convertSentsToSynsetsWithDisambiguation"], [16, 5, 1, "", "convertToSynsets"], [16, 5, 1, "", "identifyBestSimilarSynsetPair"], [16, 5, 1, "", "identifyBestSimilarWordFromWordSet"], [16, 5, 1, "", "identifyBestSynset"], [16, 5, 1, "", "identifyNounAndVerbForComparison"], [16, 5, 1, "", "semanticSimilaritySentences"], [16, 5, 1, "", "semanticSimilarityWords"], [16, 5, 1, "", "sentenceSenseDisambiguation"], [16, 5, 1, "", "sentenceSenseDisambiguationPyWSD"], [16, 5, 1, "", "sentenceSimilarity"], [16, 5, 1, "", "sentenceSimilarityWithDisambiguation"], [16, 5, 1, "", "wordOrderSimilaritySentences"], [16, 5, 1, "", "wordSenseDisambiguation"], [16, 5, 1, "", "wordsSimilarity"]], "src.dackar.similarity.synsetUtils": [[17, 5, 1, "", "constructSemanticVector"], [17, 5, 1, "", "constructSemanticVectorUsingDisambiguatedSynsets"], [17, 5, 1, "", "constructSynsetOrderVector"], [17, 5, 1, "", "identifyBestSimilarSynsetFromSynsets"], [17, 5, 1, "", "pathLength"], [17, 5, 1, "", "scalingDepthEffect"], [17, 5, 1, "", "semanticSimilaritySynsetList"], [17, 5, 1, "", "semanticSimilaritySynsets"], [17, 5, 1, "", "semanticSimilarityUsingDisambiguatedSynsets"], [17, 5, 1, "", "synsetListSimilarity"], [17, 5, 1, "", "synsetsSimilarity"], [17, 5, 1, "", "wordOrderSimilaritySynsetList"]], "src.dackar.text_processing": [[18, 0, 0, "-", "Abbreviation"], [19, 0, 0, "-", "Preprocessing"]], "src.dackar.text_processing.Abbreviation": [[18, 2, 1, "", "Abbreviation"], [18, 1, 1, "", "logger"], [18, 1, 1, "", "not_acronyms"]], "src.dackar.text_processing.Abbreviation.Abbreviation": [[18, 3, 1, "", "abbreviationSub"], [18, 3, 1, "", "getAbbreviation"], [18, 4, 1, "", "name"], [18, 4, 1, "", "type"], [18, 3, 1, "", "updateAbbreviation"]], "src.dackar.text_processing.Preprocessing": [[19, 2, 1, "", "AbbrExpander"], [19, 2, 1, "", "Preprocessing"], [19, 2, 1, "", "SpellChecker"], [19, 1, 1, "", "numerizer"], [19, 1, 1, "", "preprocessorDefaultList"], [19, 1, 1, "", "preprocessorDefaultOptions"], [19, 1, 1, "", "textacyNormalize"], [19, 1, 1, "", "textacyRemove"], [19, 1, 1, "", "textacyReplace"]], "src.dackar.text_processing.Preprocessing.AbbrExpander": [[19, 4, 1, "", "abbrDict"], [19, 4, 1, "", "abbrList"], [19, 3, 1, "", "abbrProcess"], [19, 4, 1, "", "abbrType"], [19, 4, 1, "", "checker"], [19, 4, 1, "", "checkerType"], [19, 4, 1, "", "preprocess"], [19, 4, 1, "", "preprocessorList"]], "src.dackar.text_processing.Preprocessing.Preprocessing": [[19, 3, 1, "", "__call__"], [19, 3, 1, "", "createTextacyNormalizeFunction"], [19, 3, 1, "", "createTextacyRemoveFunction"], [19, 3, 1, "", "createTextacyReplaceFunction"], [19, 4, 1, "", "functionList"], [19, 4, 1, "", "pipeline"], [19, 4, 1, "", "preprocessorNames"]], "src.dackar.text_processing.Preprocessing.SpellChecker": [[19, 3, 1, "", "addWordsToDictionary"], [19, 4, 1, "", "checker"], [19, 3, 1, "", "correct"], [19, 3, 1, "", "findOptimalOption"], [19, 3, 1, "", "generateAbbrDict"], [19, 3, 1, "", "getMisspelledWords"], [19, 3, 1, "", "handleAbbreviations"], [19, 3, 1, "", "handleAbbreviationsDict"]], "src.dackar.utils": [[23, 0, 0, "-", "mbse"], [25, 0, 0, "-", "nlp"], [27, 0, 0, "-", "num"], [29, 0, 0, "-", "opm"], [30, 0, 0, "-", "utils"]], "src.dackar.utils.mbse": [[22, 0, 0, "-", "LMLparser"]], "src.dackar.utils.mbse.LMLparser": [[22, 2, 1, "", "LMLobject"], [22, 5, 1, "", "parseEntityDescription"]], "src.dackar.utils.mbse.LMLparser.LMLobject": [[22, 4, 1, "", "LMLgraph"], [22, 3, 1, "", "LMLparser"], [22, 4, 1, "", "acronyms"], [22, 3, 1, "", "cleanedGraph"], [22, 3, 1, "", "connetGraph"], [22, 3, 1, "", "dumpNodesEdgesFiles"], [22, 4, 1, "", "embEntities"], [22, 4, 1, "", "entities"], [22, 4, 1, "", "filename"], [22, 4, 1, "", "linkEntities"], [22, 4, 1, "", "linkToMBSEmodels"], [22, 4, 1, "", "listIDs"], [22, 3, 1, "", "parseAssetEntity"], [22, 3, 1, "", "parseLinkEntity"], [22, 3, 1, "", "printOnFile"], [22, 3, 1, "", "returnEntities"], [22, 3, 1, "", "returnGraph"], [22, 3, 1, "", "returnListIDs"]], "src.dackar.utils.nlp": [[24, 0, 0, "-", "CreatePatterns"], [26, 0, 0, "-", "nlp_utils"]], "src.dackar.utils.nlp.CreatePatterns": [[24, 2, 1, "", "CreatePatterns"]], "src.dackar.utils.nlp.CreatePatterns.CreatePatterns": [[24, 4, 1, "", "entities"], [24, 4, 1, "", "filename"], [24, 3, 1, "", "generatePatterns"], [24, 3, 1, "", "getPatterns"], [24, 4, 1, "", "label"], [24, 4, 1, "", "patterns"], [24, 3, 1, "", "readFile"]], "src.dackar.utils.nlp.nlp_utils": [[26, 5, 1, "", "displayNER"], [26, 5, 1, "", "extendEnt"], [26, 5, 1, "", "extractLemma"], [26, 5, 1, "", "generatePattern"], [26, 5, 1, "", "generatePatternList"], [26, 1, 1, "", "logger"], [26, 5, 1, "", "plotDAG"], [26, 5, 1, "", "printDepTree"], [26, 5, 1, "", "resetPipeline"]], "src.dackar.utils.opm": [[28, 0, 0, "-", "OPLparser"]], "src.dackar.utils.opm.OPLparser": [[28, 2, 1, "", "OPMobject"], [28, 5, 1, "", "checkAcronym"], [28, 5, 1, "", "removeAcronym"]], "src.dackar.utils.opm.OPLparser.OPMobject": [[28, 3, 1, "", "OPLentityParser"], [28, 3, 1, "", "OPLparser"], [28, 3, 1, "", "OPLtextParser"], [28, 4, 1, "", "acronyms"], [28, 4, 1, "", "edge_colors"], [28, 4, 1, "", "filename"], [28, 4, 1, "", "links2OPMs"], [28, 4, 1, "", "node_colors"], [28, 4, 1, "", "objectList"], [28, 4, 1, "", "opmGraph"], [28, 4, 1, "", "processList"], [28, 3, 1, "", "returnAcronym"], [28, 3, 1, "", "returnAttributeList"], [28, 3, 1, "", "returnGraph"], [28, 3, 1, "", "returnObjectList"], [28, 3, 1, "", "returnProcessList"], [28, 3, 1, "", "returnsExternalLinks"], [28, 4, 1, "", "sentences"]], "src.dackar.utils.utils": [[30, 5, 1, "", "getOnlyWords"], [30, 5, 1, "", "getShortAcronym"], [30, 1, 1, "", "logger"]], "src.dackar.workflows": [[31, 0, 0, "-", "OperatorShiftLogsProcessing"], [32, 0, 0, "-", "RuleBasedMatcher"], [33, 0, 0, "-", "WorkOrderProcessing"], [34, 0, 0, "-", "WorkflowBase"]], "src.dackar.workflows.OperatorShiftLogsProcessing": [[31, 2, 1, "", "OperatorShiftLogs"], [31, 1, 1, "", "logger"]], "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs": [[31, 4, 1, "", "_allRelPairs"], [31, 4, 1, "", "_extractedInfoNames"], [31, 4, 1, "", "_objList"], [31, 4, 1, "", "_relationNames"], [31, 4, 1, "", "_subjList"], [31, 3, 1, "", "extractCausalRelDep"], [31, 3, 1, "", "extractInformation"], [31, 3, 1, "", "extractRelDep"], [31, 3, 1, "", "extractStatus"], [31, 3, 1, "", "handleInvalidSent"], [31, 3, 1, "", "handleValidSent"], [31, 3, 1, "", "isSubElement"], [31, 3, 1, "", "isSubElements"], [31, 3, 1, "", "reset"], [31, 3, 1, "", "textProcess"]], "src.dackar.workflows.RuleBasedMatcher": [[32, 2, 1, "", "RuleBasedMatcher"], [32, 1, 1, "", "logger"]], "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher": [[32, 3, 1, "", "collectCauseEffectSents"], [32, 3, 1, "", "collectExtactedCausals"], [32, 3, 1, "", "extractHealthStatus"], [32, 3, 1, "", "extractInformation"], [32, 3, 1, "", "extractRelDep"], [32, 3, 1, "", "findHealthStatus"], [32, 3, 1, "", "getHealthStatusForObj"], [32, 3, 1, "", "getHealthStatusForPobj"], [32, 3, 1, "", "getHealthStatusForSubj"], [32, 3, 1, "", "getLeftSSCEnts"], [32, 3, 1, "", "getRightSSCEnts"], [32, 3, 1, "", "getSSCEnt"], [32, 3, 1, "", "identifyCauseEffectForAttr"], [32, 3, 1, "", "identifyCauseEffectForClauseModifier"], [32, 3, 1, "", "identifyCauseEffectForNsuj"], [32, 3, 1, "", "isValidCausalEnts"], [32, 3, 1, "", "reset"], [32, 3, 1, "", "selectValidEnts"], [32, 3, 1, "", "splitEntsFollowingNounCausal"]], "src.dackar.workflows.WorkOrderProcessing": [[33, 2, 1, "", "WorkOrderProcessing"], [33, 1, 1, "", "logger"]], "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing": [[33, 4, 1, "", "_allRelPairs"], [33, 4, 1, "", "_relationNames"], [33, 3, 1, "", "addKeywords"], [33, 3, 1, "", "extractHealthStatus"], [33, 3, 1, "", "extractInformation"], [33, 3, 1, "", "extractRelDep"], [33, 3, 1, "", "reset"]], "src.dackar.workflows.WorkflowBase": [[34, 2, 1, "", "WorkflowBase"], [34, 1, 1, "", "_corefAvail"], [34, 1, 1, "", "logger"], [34, 1, 1, "", "ver"]], "src.dackar.workflows.WorkflowBase.WorkflowBase": [[34, 3, 1, "", "__call__"], [34, 4, 1, "", "_causalFile"], [34, 4, 1, "", "_causalKeywordID"], [34, 4, 1, "", "_causalKeywords"], [34, 4, 1, "", "_causalNames"], [34, 4, 1, "", "_causalPOS"], [34, 4, 1, "", "_causalSentsNoEnts"], [34, 4, 1, "", "_causalSentsOneEnt"], [34, 4, 1, "", "_conjectureFile"], [34, 4, 1, "", "_conjectureKeywords"], [34, 4, 1, "", "_coref"], [34, 4, 1, "", "_doc"], [34, 4, 1, "", "_entHS"], [34, 4, 1, "", "_entID"], [34, 4, 1, "", "_entStatus"], [34, 4, 1, "", "_entityLabels"], [34, 4, 1, "", "_entityRuler"], [34, 4, 1, "", "_entityRulerMatches"], [34, 4, 1, "", "_extractedCausals"], [34, 4, 1, "", "_matchedSents"], [34, 4, 1, "", "_matchedSentsForVis"], [34, 4, 1, "", "_rawCausalList"], [34, 4, 1, "", "_screen"], [34, 4, 1, "", "_statusFile"], [34, 4, 1, "", "_statusKeywords"], [34, 4, 1, "", "_textProcess"], [34, 4, 1, "", "_updateCausalKeywords"], [34, 4, 1, "", "_updateStatusKeywords"], [34, 4, 1, "", "_visualizeMatchedSents"], [34, 3, 1, "", "addEntityPattern"], [34, 3, 1, "", "addKeywords"], [34, 3, 1, "", "bfs"], [34, 3, 1, "", "collectSents"], [34, 4, 1, "", "dataframeEntities"], [34, 4, 1, "", "dataframeRelations"], [34, 4, 1, "", "entityRuler"], [34, 3, 1, "", "extract"], [34, 3, 1, "", "extractInformation"], [34, 3, 1, "", "extractLemma"], [34, 3, 1, "", "findHealthStatus"], [34, 3, 1, "", "findLeftSubj"], [34, 3, 1, "", "findObj"], [34, 3, 1, "", "findRightKeyword"], [34, 3, 1, "", "findRightObj"], [34, 3, 1, "", "findSubj"], [34, 3, 1, "", "findVerb"], [34, 3, 1, "", "getAmod"], [34, 3, 1, "", "getAmodOnly"], [34, 3, 1, "", "getCompoundOnly"], [34, 3, 1, "", "getConjuncts"], [34, 3, 1, "", "getCustomEnts"], [34, 3, 1, "", "getIndex"], [34, 3, 1, "", "getKeywords"], [34, 3, 1, "", "getNbor"], [34, 3, 1, "", "getPhrase"], [34, 3, 1, "", "getStatusForObj"], [34, 3, 1, "", "getStatusForPobj"], [34, 3, 1, "", "getStatusForSubj"], [34, 3, 1, "", "isConjecture"], [34, 3, 1, "", "isNegation"], [34, 3, 1, "", "isPassive"], [34, 3, 1, "", "isValidCausalEnts"], [34, 3, 1, "", "isValidKeyword"], [34, 4, 1, "", "name"], [34, 4, 1, "", "nlp"], [34, 3, 1, "", "reset"], [34, 3, 1, "", "textProcess"], [34, 4, 1, "", "type"], [34, 3, 1, "", "validSent"], [34, 3, 1, "", "visualize"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "terms": {"": [14, 19, 26, 28, 30, 34, 41, 42, 43, 44, 45, 48, 49, 51, 52], "0": [2, 14, 16, 17, 38, 39, 40, 41, 43, 44, 45, 49, 51, 52], "00": [41, 52], "000": [41, 52], "049269914627075195": 41, "05667": 14, "087954759597778": 51, "0x123e4e810": 49, "0x127eb2310": 49, "0x128033470": 49, "0x128033a70": 49, "0x12815f4d0": 49, "0x1282128d0": 49, "0x12a781a90": 49, "0x12e866270": 48, "0x12e867d70": 48, "0x134590ad0": 48, "0x134f8fe60": 48, "0x134f8ff40": 48, "0x13e912890": 48, "0x13e924610": 48, "0x16b0fede0": 46, "0x346dd7110": 46, "0x346dd7a10": 46, "0x375919150": 46, "0x375a63a90": 46, "0x375a89d90": 46, "1": [0, 2, 14, 16, 17, 38, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52], "10": [41, 43, 44, 45, 46, 48, 49, 51, 52], "100": [41, 51, 52], "1000": 51, "1000000001": [41, 50], "100_cur_": [41, 52], "11": [40, 41, 44, 45, 48, 49, 51, 52], "117": 52, "12": [41, 44, 45, 48, 49, 51, 52], "1200": [41, 50], "123": [41, 52], "1234": [41, 52], "123_cur_abc": 52, "123_cur_abc_cur_": [41, 52], "13": [41, 44, 45, 48, 49, 52], "14": [41, 48, 49, 52], "15": [41, 48, 49, 52], "150": [41, 50], "16": [41, 48, 49, 50, 52], "1644735": 16, "17": [41, 48, 49, 50, 52], "18": [41, 48, 49, 50, 52], "1802": 14, "19": [41, 48, 49, 52], "198867082595825": 51, "1a": [41, 45, 48, 49], "1pation": [41, 52], "1st": 50, "2": [17, 22, 38, 39, 41, 43, 44, 45, 46, 49, 50, 51, 52], "20": [41, 42, 43, 44, 48, 49, 52], "2000000": 50, "2021": [28, 41, 52], "2022": [5, 19, 26, 32], "2024": [18, 22, 30, 31, 33, 34], "21": [41, 42, 45, 48, 49, 51, 52], "211": 48, "21473": [41, 50], "22": [48, 49], "23": [48, 49, 50], "24": [42, 48, 49, 52], "25": [48, 49], "26": [40, 48, 49, 52], "27": [48, 49, 52], "28": [48, 49, 52], "29": [48, 49], "2nd": 50, "3": [22, 28, 38, 41, 43, 44, 45, 46, 49, 50, 51, 52], "30": [48, 49, 52], "305": 22, "31": [48, 49], "31713942870949496": 51, "32": [48, 49, 52], "33": [48, 49, 52], "34": [41, 42, 45, 48, 49, 52], "35": [48, 49], "36": [48, 49], "37": [48, 49], "38": [48, 49, 52], "39": [41, 43, 45, 46, 48, 49, 50, 52], "4": [39, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52], "40": [48, 49, 50, 52], "4006917476654053": 41, "41": 48, "42": [41, 48, 50, 52], "4229929447174072": 44, "42nd": 50, "43": 48, "43946127500409304": 51, "44": [48, 52], "4493210315704346": 46, "45": [17, 48], "4567": [41, 52], "46": 48, "462": [41, 50], "465039014816284": 51, "47": 48, "5": [38, 39, 41, 44, 45, 46, 48, 49, 50, 51, 52], "52210619": 22, "53": 52, "555": [41, 52], "5pm": [7, 10], "6": [41, 44, 45, 48, 49, 50, 51, 52], "60": 52, "61": 52, "614": 45, "628759145736694": 45, "630": 45, "6415700912475586": 43, "646389961242676": 42, "65": 52, "66": 52, "67": 52, "69": 52, "7": [41, 44, 45, 48, 49, 50, 51, 52], "7264": 48, "7309439182281494": 45, "75": [41, 50], "79": 52, "8": [41, 43, 44, 45, 48, 49, 50, 51, 52], "80": 52, "804": 14, "81": 52, "83": 52, "8340160846710205": 51, "85": [16, 17], "858644962310791": 45, "89": 52, "9": [39, 41, 44, 45, 48, 49, 50, 51, 52], "90": 52, "91": 49, "91120": [43, 46], "94": 49, "95": 49, "96": 49, "97": 49, "979063749313354": 45, "99": [41, 49, 52], "A": [26, 30, 38, 41, 45, 48, 49, 50, 52], "AND": [43, 46], "For": [17, 28, 39, 40], "IN": 48, "If": 48, "In": [19, 49], "It": [7, 10, 22, 41, 52], "No": [41, 43, 46, 48, 50, 52], "That": [41, 52], "The": [5, 8, 9, 11, 12, 14, 16, 17, 38, 41, 42, 48, 49, 50, 51, 52, 53], "These": [41, 52], "To": 48, "_": [5, 43, 46, 48, 49, 50, 51], "__call__": [4, 6, 7, 8, 9, 10, 11, 12, 19, 34], "__init__": 48, "__main__": [48, 49], "__name__": [46, 49], "__version__": 2, "_allrelpair": [31, 33], "_causalfil": 34, "_causalkeyword": [33, 34], "_causalkeywordid": 34, "_causalnam": 34, "_causalpo": 34, "_causalsentsno": 34, "_causalsentson": 34, "_conjecturefil": 34, "_conjecturekeyword": 34, "_coref": 34, "_corefavail": 34, "_cur_": [41, 52], "_cur_1": [41, 52], "_cur_100": [41, 52], "_doc": 34, "_email_": 52, "_emoji_": [41, 52], "_enth": 34, "_entid": 34, "_entitylabel": 34, "_entityrul": 34, "_entityrulermatch": 34, "_entstatu": [34, 43], "_extractedcaus": [34, 42], "_extractedinfonam": 31, "_matcheds": 34, "_matchedsentsforvi": 34, "_number_": [41, 52], "_objlist": 31, "_phone_": 52, "_rawcausallist": 34, "_relationnam": [31, 33], "_screen": 34, "_statusfil": 34, "_statuskeyword": [33, 34], "_subjlist": 31, "_tag_": [41, 52], "_textprocess": 34, "_updatecausalkeyword": 34, "_updatestatuskeyword": 34, "_url_": [41, 52], "_user_": 52, "_visualizematcheds": 34, "ab": 45, "abbrdatabas": 19, "abbrdict": [18, 19, 45], "abbrevi": [0, 19, 20, 38, 47], "abbreviationsfilenam": 19, "abbreviationsub": [18, 45], "abbrexp": 45, "abbrexpand": [19, 45], "abbrlist": [19, 45], "abbrprocess": [19, 45], "abbrtyp": 19, "abc": [41, 52], "abl": 45, "abol": 45, "abolit": 45, "about": 10, "abov": 45, "absol": 45, "absolut": 45, "abspath": [41, 42, 43, 44, 45, 46, 51], "abst": 45, "abstr": 45, "abstract": [34, 45], "accent": [19, 41, 44], "accent_text1": 52, "accent_text2": 52, "accep": 45, "accept": [41, 45], "accom": 45, "accomm": 45, "accomod": 45, "accord": [19, 45], "acm": 48, "acronym": [22, 28, 44], "action": [31, 42], "activ": [39, 40, 45], "actual": [22, 42], "ad": [5, 26, 49], "adapted_lesk": [14, 16], "add": [19, 26, 33, 34, 44, 49], "add_pattern": [48, 49], "add_pip": [4, 6, 7, 8, 9, 10, 11, 12, 48, 49], "addentitypattern": [34, 42, 43, 44], "addhandl": [46, 49], "addit": 16, "addkeyword": [33, 34], "addwordstodictionari": [19, 41, 44], "adequ": 42, "adj": [48, 49], "adjectiv": 44, "admin": 45, "administr": 45, "adp": [48, 49], "adv": [45, 48, 49], "advanc": 45, "advmod": 48, "affect": [41, 48], "afl": 45, "after": [5, 32, 34, 41, 45, 46, 49], "ag": 42, "again": [41, 52], "against": 45, "agl": 45, "agst": 45, "ah": 45, "aid": 45, "air": 41, "al": [41, 52], "alex": 48, "alia": [5, 31, 43, 46], "alias": [5, 49], "aliaslookup": [5, 49], "aliasresolv": [5, 46, 49], "all": [5, 22, 26, 28, 34, 38, 39, 40, 41, 42, 49, 52], "all_text": 52, "allow": 52, "along": [38, 52], "alpha": 17, "alreadi": [17, 49], "also": [40, 44, 50, 52, 53], "alt": 45, "altern": 45, "although": [42, 48], "alvat": 16, "alwai": 46, "amend": 34, "amer": 45, "american": 45, "amod": [31, 34, 48, 49], "among": 34, "amp": 45, "an": [16, 19, 22, 28, 38, 41, 42, 50, 52, 53], "anal": 45, "analysi": [16, 17, 34, 38, 45], "analyt": 45, "analyz": 19, "anam": 49, "anaphora": [5, 49], "anaphorcoref": [5, 49], "anaphorentcoref": 5, "angl": 45, "ani": [48, 52], "anishvarsha": 14, "ann": 45, "annual": 45, "anomal": [41, 45], "anoth": [14, 16], "answ": 45, "answer": 45, "antici": [41, 52], "anticip": [41, 52], "apach": 38, "app": 45, "appear": [41, 48], "append": [41, 42, 43, 44, 45, 46, 48, 49, 51], "apper": 45, "appli": 41, "appoint": 45, "approach": 38, "approx": 45, "approxim": 45, "appt": 45, "apr": 45, "april": [31, 34, 45], "aql": 45, "ar": [19, 22, 32, 38, 41, 45, 52], "arch": 45, "architectur": 45, "archiv": 38, "arg": [24, 31, 32, 33, 34, 50], "argument": 19, "arnumb": 16, "arr1": 14, "arr2": 14, "arrai": [16, 17], "arrang": [42, 45], "arrgt": 45, "arriv": 45, "artic": 45, "articl": [5, 48, 49], "articul": 45, "arxiv": 14, "as_span": 49, "asap": 45, "ascii": 52, "asctim": [14, 42, 43, 44], "asdv": 42, "ass": 45, "assem": 45, "assembli": 45, "asset": 22, "assi": 45, "assign": [5, 49], "assmbi": 45, "associ": [19, 32, 34], "asspan": [6, 8, 9, 12], "assumpt": [5, 16, 49], "asusto": [41, 52], "asust\u00f3": [41, 52], "ation": 41, "atmo": 45, "atmospher": [42, 45], "attr": [26, 32, 42, 43, 44, 46, 48], "attrib": 45, "attribut": [28, 45, 49], "attribute_rul": [46, 48, 49], "attributerul": [46, 48, 49], "atyp": 49, "aug": 45, "august": 45, "author": [5, 18, 19, 22, 26, 28, 30, 31, 32, 33, 34], "auto": [0, 42, 45, 51], "autoapi": 0, "autocorrect": [19, 38, 39, 40, 44, 47], "automat": [19, 42, 45], "autonotebook": [42, 45, 51], "autoreload": 43, "aux": [45, 48, 49], "auxiliari": 45, "auxpass": [48, 49], "avail": [41, 49, 52, 53], "availcheck": 44, "averag": 45, "averaged_perceptron_tagg": [39, 40], "avg": 45, "avoid": 41, "b": [30, 41, 42, 43, 44, 52], "bar": [41, 52], "base": [4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 24, 28, 31, 32, 33, 34], "basic": 45, "basicconfig": [42, 43, 44], "batt": 45, "batteri": 45, "bc": 45, "beam": 45, "bear": [41, 45, 48, 49, 51], "beautifulsoup4": [39, 40], "becam": 41, "becaus": [42, 48], "been": [17, 22, 41, 42, 45, 48, 49], "bef": 45, "befor": 45, "behavior": [17, 41], "being": 42, "belong": [32, 34], "best": [16, 17], "bestpair": 16, "bestsyn": [16, 17], "beta": 17, "betw": 45, "between": [14, 16, 17, 22, 45, 52], "beyond": 42, "bf": 34, "bhc": 45, "bia": 50, "bill": 45, "billion": [41, 50], "bird": 50, "bjdewild": 52, "bldg": 45, "bled": 41, "blk": 45, "block": 45, "blue": 26, "blueprint": 45, "board": 45, "bodi": [22, 41, 52], "bof": 45, "bolt": 45, "bom": 45, "bool": [14, 16, 17, 26, 32, 34, 52], "boot": 18, "bord": 45, "border": 45, "bot": [41, 45, 52], "both": [14, 16, 17, 45, 48], "bottom": 45, "bp": 45, "bp_text": 52, "bracket": [19, 22, 41, 44], "bracket_text1": 52, "bracket_text2": 52, "bracket_text3": 52, "bracket_text4": 52, "bracket_text5": 52, "branch": 38, "breadth": [32, 34], "break": 49, "brg": 45, "bronz": 45, "brown": 16, "browndict": 16, "brownic": 14, "browninfo": 16, "brz": 45, "bsc": 45, "btm": 45, "btw": 45, "btwn": 45, "bug": [38, 50], "build": 45, "built": 45, "bullet_point": [19, 41, 44, 52], "burnout": [41, 45, 48, 49], "busi": [41, 48, 52], "bussmann": 42, "butt": 45, "bw": 45, "c": [39, 45], "cabl": 45, "cad": 45, "cage": [8, 9, 12, 41], "cal": 45, "calcul": [14, 17], "calib": [41, 45], "calibr": 45, "calif": 41, "call": [5, 49], "callback": [4, 6, 7, 8, 9, 10, 11, 12], "can": [5, 19, 34, 38, 39, 40, 41, 49, 50, 52], "cannot": [41, 50], "canon": 52, "cansual": [32, 34], "cap": 45, "capac": [42, 45], "car": 50, "carbid": 45, "care": [45, 52], "case": [19, 44], "cat": 45, "catal": 45, "catalogu": 45, "categori": 45, "caus": [8, 9, 12, 32, 34, 41, 42, 45, 48, 49], "causal": [31, 32, 33, 34], "causal_keyword": [42, 44], "causal_keywords_entity_rul": [42, 44], "causaleffect": 44, "causalfilenam": [42, 44], "causalid": [42, 44], "causalkeyword": 32, "causalkeywordid": [31, 32, 34, 42, 44], "causallabel": [42, 44], "causallist": 44, "causalnam": 42, "causalstatu": 32, "cause_effect_keywords_fil": [42, 44], "causelist": 32, "cavit": [41, 45, 48, 49], "cbl": 45, "cc": [48, 49], "ccomp": [48, 49], "cconj": [48, 49], "cd": [39, 40], "cda": 45, "cement": 45, "cent": [32, 45], "center": 45, "centrif": 45, "centrifug": 45, "centrifugalpumpful": 22, "centsindex": 32, "cert": 45, "certif": 45, "cfw": 45, "ch": [45, 46, 49], "chain": [41, 49], "cham": 45, "chamb": 45, "chamber": 45, "chamfer": 45, "chan": [41, 45], "chang": [41, 45, 50], "chann": [41, 45], "channel": 45, "chap": 45, "chapter": 45, "char": [41, 44, 52], "check": [8, 9, 12, 19, 32, 34, 39, 40, 41, 44, 45, 48, 49], "checkacronym": 28, "checker": [19, 41, 44], "checkertyp": 19, "chem": 45, "chemistri": 45, "child": [32, 34], "children": [34, 48], "chk": 45, "chng": 45, "chosen": 19, "circ": 45, "circl": 45, "circuit": 42, "circul": 45, "cl": 45, "class": [41, 49, 52], "classif": 45, "classifi": [39, 40], "claus": 32, "clean": [22, 31, 34, 43, 44, 46], "clean_text": 52, "cleandoc": 44, "cleanedgraph": 22, "cleanedt": 45, "cleanedtext": 45, "cleanedtext2": 45, "clearanc": 45, "click": [41, 52], "client": 22, "close": [7, 10], "closest": [32, 34], "clr": 45, "club": 41, "cmatcher": [4, 6, 7, 10, 11], "cmu": 45, "cndct": 45, "cntl": 45, "cntmnt": 45, "cntmt": 45, "cntrl": 45, "cntrld": 45, "code": [28, 38], "coef": 45, "coeff": 45, "coeffici": 45, "cogliati": 53, "coher": [38, 47], "coil": 42, "col": [42, 44, 45], "collect": [19, 32, 34], "collectcauseeffects": 32, "collectextactedcaus": 32, "collects": 34, "color": [26, 28], "column": [42, 44, 45, 49], "columnnam": 34, "com": [14, 16, 22, 41, 50, 52], "comb": 45, "combin": 45, "come": [4, 6, 8, 9, 12, 41], "comm": 45, "comma": [22, 44], "comment": [41, 52], "common": 19, "commun": 45, "comp": [45, 49], "comp1": 22, "comp2": 22, "comp3": 22, "compact": 48, "compani": 48, "comparison": 16, "compat": 52, "compd": 34, "complet": 22, "compon": [5, 22, 26, 48, 49], "composit": [45, 52], "compound": [34, 48, 49], "comput": [14, 16, 17, 45, 51], "conc": 45, "concent": 45, "concentr": 45, "concept": 17, "concern": [41, 52], "concr": 45, "concret": 45, "cond": 45, "conda": [39, 40], "condit": [41, 42], "conduct": [19, 45], "config": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 42, 44], "configfilenam": 1, "congjian": 53, "conj": [26, 48, 49], "conjectur": [4, 31, 32, 34, 43, 44], "conjecture_ent": 4, "conjectureent": [0, 7, 10, 11, 13], "conjunct": 34, "conjunctlist": 34, "conn": 45, "connect": 45, "connetgraph": 22, "conscienc": [41, 52], "consequ": [41, 42, 45, 48, 49], "consid": 16, "const": 45, "constant": [17, 45], "construct": [14, 16, 17], "constructsemanticvector": [16, 17], "constructsemanticvectorusingdisambiguatedsynset": 17, "constructsimilarityvectorpawarmagomethod": 14, "constructsynsetordervector": 17, "constructwordordervector": 16, "cont": 45, "contain": [0, 16, 19, 22, 26, 32, 34, 41, 45], "content": 52, "context": [16, 19], "contextualspellcheck": [38, 39, 40, 44, 47], "continu": 45, "contribut": [16, 17, 42], "contributor": 38, "control": [42, 45], "conveni": 52, "convert": [16, 44, 50, 51], "convertsentstosynset": [16, 51], "convertsentstosynsetswithdisambigu": [16, 51], "converttosynset": 16, "copi": [38, 43, 52], "coref": 49, "coref_chain": [48, 49], "corefer": [5, 49], "corefere": [5, 39, 40, 49], "coreferee_model_en": [39, 40], "corefereebrok": [48, 49], "corner": 45, "corp": 48, "corpora": [39, 40], "corpu": [14, 16], "correct": [19, 38, 47], "correctli": 44, "correpond": 16, "correpos": 22, "correspod": 19, "correspond": [16, 19, 22, 41], "cosine_lesk": [14, 16], "could": [41, 45], "count": [14, 16], "countri": 48, "coupl": 45, "cover": 45, "cp": [39, 40], "cr": 45, "crac": 45, "crack": [41, 45], "crash": 50, "creat": [0, 5, 18, 19, 22, 26, 28, 30, 31, 32, 33, 34, 38, 39, 40, 51, 52], "create_conjecture_compon": 4, "create_general_compon": 6, "create_location_compon": 7, "create_phrase_matcher_compon": 8, "create_simple_matcher_compon": 9, "create_temporal_attribute_compon": 10, "create_temporal_relation_compon": 11, "create_unit_compon": 12, "createpattern": [0, 25], "createtextacynormalizefunct": 19, "createtextacyremovefunct": 19, "createtextacyreplacefunct": 19, "crnr": 45, "croot": 32, "csv": 22, "ct": 45, "ctmt": 45, "ctr": 45, "ctrl": 45, "cultur": 50, "curli": [44, 52], "curr": 52, "curr_text": 52, "currency_symbol": [19, 41, 44, 52], "current": [5, 22, 26, 45, 49, 50], "custom": [5, 26, 34], "customent": 34, "customlabel": [5, 49], "custompip": 49, "custompipelinecompon": [0, 13, 46], "cvr": 45, "cw": [33, 45], "cwd": [41, 42, 43, 44, 45, 46, 51], "cws_compon": [43, 46], "cws_entity_rul": 43, "cycl": 42, "cyl": 45, "cylind": 45, "d": [30, 42, 43, 44, 45], "dackar": [0, 36, 40, 41, 42, 43, 44, 45, 46, 51], "dackar_lib": [39, 40, 42, 45, 48, 51], "dai": [41, 45], "data": [19, 22, 26, 32, 34, 38, 41, 45, 49], "databas": 19, "datafram": [19, 26, 49], "dataframeent": 34, "dataframerel": 34, "dataset": [31, 33], "datefmt": [42, 43, 44], "datetimerecogn": 50, "debug": [42, 44], "dec": 45, "decemb": 45, "decid": 48, "decomposit": 52, "decon": 45, "decontamin": 45, "def": [45, 48, 49], "default": [49, 52], "defin": [28, 43, 44, 46], "definit": [41, 45, 52], "deflect": [8, 9, 12, 41], "deg": 45, "degr": 45, "degrad": [41, 45, 48, 49], "degre": 41, "del": [41, 52], "delta": [16, 17, 51], "demin": 45, "deminer": 45, "demo": [38, 47], "dep": [31, 32, 34, 48, 49], "dep_": [48, 49], "dep_pars": [46, 48, 49], "depart": 45, "depend": [26, 32, 34, 38, 41, 44, 49], "dependencypars": [46, 48, 49], "depress": 45, "depressur": 45, "dept": 45, "depth": [16, 17], "dereferenc": 49, "descr": 45, "descreas": 17, "describ": 26, "descript": [22, 45], "design": [22, 45], "desir": 41, "det": [5, 45, 48, 49], "deten": 45, "detens": 45, "determ": 45, "determin": [16, 19, 45, 49], "dev": 2, "develop": [22, 38], "dewild": [41, 52], "df": [5, 26, 49], "dgarrett622": 19, "dia": 45, "diagram": 22, "diagramnam": 22, "diam": 45, "diamet": 45, "diaph": 45, "diaphragm": 45, "dict": [16, 18, 19, 22, 26, 33, 34], "dictionari": [18, 19, 22, 34], "did": 41, "diego": 53, "differ": 38, "dii": 45, "dir": 45, "direct": [32, 52], "directli": [19, 52], "director": 45, "disabl": 42, "disambigu": [16, 17, 51], "disambiguationmethod": 14, "disambiguationsimmethod": 16, "disch": 45, "discharg": 45, "discnt": 45, "disconnect": 45, "discov": 45, "discoveri": 45, "disp": 45, "displ": 45, "displac": 45, "displaci": [43, 46, 48, 49], "displayn": [26, 49], "distanc": 17, "distil": 45, "dn": 45, "do": [31, 32, 34, 38, 45, 52], "dobj": [31, 32, 34, 48, 49], "doc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 26, 32, 34, 42, 43, 46, 48, 49, 50, 52], "doc1": 48, "doc2": 48, "document": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 26, 32, 34, 50], "doe": [45, 50], "dollar": 50, "doubl": [41, 52], "dowload": [39, 40], "downcom": 45, "download": 38, "downpip": 45, "doz": 45, "dozen": 45, "dp": 45, "drain": 45, "draw": 45, "drn": 45, "dropna": [42, 44], "dru": 41, "dscnct": 45, "dscnt": 45, "due": [41, 42, 45, 48, 49], "dump": 42, "dumpnodesedgesfil": 22, "duplic": [16, 45], "dure": [8, 9, 12, 41], "duti": 42, "dwg": 45, "dwncmr": 45, "e": [16, 17, 22, 44, 49], "each": [19, 45, 52], "easier": 48, "easiest": 53, "east": 45, "econ": 45, "econom": 45, "edg": 26, "edge_color": 28, "eff": 45, "effect": [17, 32, 34, 44], "effectlist": 32, "effici": 45, "either": [26, 33, 34, 42], "el": [41, 52], "elaps": 45, "elec": 45, "electr": [42, 45], "elem": 45, "elem1": 31, "elem2": 31, "element": [22, 45], "elemlist": 31, "elev": 45, "els": 49, "elv": 45, "em": 52, "email": [19, 41, 44], "email_text": 52, "emb": 45, "embed": 22, "embent": 22, "embrittl": 45, "emerg": 45, "emoji": [19, 41, 44, 50], "emoji_text": 52, "emploi": [16, 19], "emrg": 45, "en": [39, 40, 41, 42, 45, 46, 48, 49, 51], "en_core_web_lg": [39, 40, 42, 43, 44, 46, 48, 49, 50], "en_core_web_sm": [4, 6, 7, 8, 9, 10, 11, 12], "end": [26, 34, 48, 49], "energ": 42, "eng": 45, "engin": [42, 45], "englishlemmat": [46, 48, 49], "engr": 45, "engrg": 45, "enity_rul": 46, "enough": [8, 9, 12, 41, 48], "ent": [31, 32, 34, 42, 43, 44, 46, 48, 49], "ent_id_": 43, "ent_iob_": 49, "ent_typ": 49, "ent_type_": [48, 49], "enth": 32, "entid": [24, 31, 32, 33, 34, 42, 43, 44, 46], "entidlist": [43, 46], "entiti": [5, 22, 24, 26, 28, 31, 32, 34, 43, 46, 49], "entity_fil": [42, 44], "entity_rul": [46, 48, 49], "entity_text": 43, "entityfil": [42, 44], "entitylist": [42, 44], "entitynod": 22, "entityrecogn": 48, "entityrul": [4, 6, 7, 10, 11, 34, 48, 49], "entlabel": [24, 43, 44, 46], "entlist": [26, 32, 34], "entri": 42, "enttyp": 34, "enumer": 49, "env": [42, 45, 48, 51], "environ": [45, 48], "eq": 45, "eql": 45, "equal": [41, 45, 52], "equip": 45, "equiv": 45, "equival": [45, 52], "error": [43, 46], "esf": 45, "esp": 45, "especi": 45, "est": [41, 45, 52], "establ": 45, "establish": 45, "estim": [16, 45], "et": [41, 45, 52], "eta": 45, "etc": [30, 45], "etcetera": 45, "even": [41, 52], "event": 42, "everi": 45, "everyth": [41, 52], "evid": 45, "ew": 45, "exampl": [22, 28, 34, 38, 44, 47, 52], "except": 34, "excess": [41, 45, 48, 49], "exchang": 45, "excit": [41, 52], "excit\u00e9": [41, 52], "exclprepo": [31, 32, 33, 34], "exclud": [31, 32, 33, 34, 42, 43, 44], "exec": 45, "execut": 45, "exess": 41, "exist": [18, 34], "exlcud": 34, "exp": 17, "expand": [5, 18, 19, 49], "expandedtext": [18, 19], "expandent": [5, 49], "expans": 5, "experienc": [8, 9, 12, 41], "expl": 45, "explan": 45, "explos": 48, "exponenti": 17, "express": [19, 32, 34], "ext": 45, "extend": [5, 26, 34, 42, 44, 49], "extens": [5, 49], "extern": [22, 28, 44, 45], "extract": [22, 28, 31, 32, 33, 34], "extract_person_org": 48, "extractcausalreldep": 31, "extracthealthstatu": [32, 33], "extractinform": [31, 32, 33, 34], "extractlemma": [26, 34], "extractreldep": [31, 32, 33], "extractstatu": 31, "f": [41, 45, 49, 50, 52], "factor": [17, 45], "fail": [11, 28, 41, 42, 45, 48, 49], "failur": [11, 41, 42, 45, 48, 49], "faint": 41, "fals": [14, 16, 17, 19, 26, 32, 34, 41, 42, 43, 44, 48, 49, 52], "fam": 45, "famil": 45, "familiar": 45, "fanci": [41, 52], "far": 45, "fast": [41, 42, 44, 52], "fat": 45, "fatigu": 45, "fdwtr": 45, "feb": 45, "februari": [22, 30, 45], "feed": 45, "feedwat": 45, "few": 45, "fifti": [41, 50], "fig": 45, "figur": 45, "file": [22, 28, 34, 44, 45], "filenam": [22, 24, 28, 34, 45], "fillet": 45, "filter": 34, "filterwarn": [41, 43], "find": [19, 34], "findhealthstatu": [32, 34], "findleftsubj": 34, "findobj": 34, "findoptimalopt": 19, "findrightkeyword": 34, "findrightobj": 34, "findsubj": 34, "findverb": 34, "fine_grain": 48, "first": [5, 14, 16, 17, 19, 32, 34, 49, 50], "firstdeponli": [32, 34], "fit": [19, 45], "fitt": 45, "fl": 45, "flang": 45, "flg": 45, "flng": 45, "flnge": 45, "float": [14, 16, 17, 44, 50], "floor": 45, "flow": [8, 9, 12, 41, 45, 48, 49], "flower": 51, "fluid": 45, "flw": 45, "fnm": 42, "fo": 45, "fob": 45, "follow": [7, 11, 19, 42, 44, 52], "foo": [41, 52], "foret": [41, 52], "forg": 39, "fork": 38, "form": [22, 26, 28, 41, 44, 52], "format": [42, 43, 44, 52], "forti": [41, 50], "for\u00eat": [41, 52], "found": [38, 41, 45, 48, 49, 51], "foundat": 45, "four": [41, 42, 50], "fourth": 50, "frac": 50, "fraction": 50, "fractional_list": 50, "fractionals_list": 50, "fragment": [41, 52], "frame": [26, 49], "frameworkdir": [41, 42, 43, 44, 45, 46, 51], "francisco": 34, "free": 45, "freq": 45, "frequenc": [16, 19, 45], "fridai": [41, 52], "from": [4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 22, 34, 38, 41, 43, 44, 45, 46, 49, 50, 51, 52], "fsbw": 45, "ft": [42, 44], "ftg": 45, "ftp": 45, "fuel": 45, "full": [19, 44, 45], "funct": 45, "function": [19, 31, 34, 42, 44, 45, 46, 48, 49], "functionlist": 19, "functool": 52, "funni": [41, 52], "fuse": 42, "fut": 45, "futur": 45, "fuz": 42, "fv304": 22, "fw": 45, "g": [17, 22, 45], "galv": 45, "galvan": 45, "garcon": [41, 52], "gar\u00e7on": [41, 52], "gaug": [41, 45, 48, 49], "gd": 22, "gen": 45, "gener": [0, 6, 16, 17, 19, 22, 26, 31, 32, 33, 34, 45, 46, 49], "general_ent": 6, "generalent": [0, 13, 46], "generateabbrdict": 19, "generatepattern": [24, 26], "generatepatternlist": [26, 42, 43, 44, 46], "geo": 45, "geog": 45, "geographi": 45, "get": [16, 18, 32, 34, 49, 50, 53], "get_pip": 49, "getabbrevi": [18, 45], "getamod": 34, "getamodonli": 34, "getcompoundonli": 34, "getconjunct": 34, "getcusto": 34, "getcwd": [41, 42, 43, 44, 45, 46, 51], "getentid": 5, "gethealthstatusforobj": 32, "gethealthstatusforpobj": 32, "gethealthstatusforsubj": 32, "getindex": 34, "getkeyword": 34, "getleftssc": 32, "getlogg": [43, 46, 49], "getmisspelledword": [19, 41, 44], "getnbor": 34, "getonlyword": 30, "getpattern": 24, "getphras": 34, "getrightssc": 32, "getshortacronym": 30, "getsscent": 32, "getstatusforobj": 34, "getstatusforpobj": 34, "getstatusforsubj": 34, "github": [14, 16, 50, 53], "given": [14, 16, 17, 19, 26, 32, 34], "gloss": 45, "glossari": 45, "gn": 45, "go": [41, 52], "got": [41, 52], "gov": [45, 53], "govern": 45, "govt": 45, "gpe": [34, 48], "graph": [22, 28], "ground": 45, "group": 32, "grow": 38, "gt": [46, 48, 49, 52], "gz": 39, "h": [17, 30, 42, 43, 44, 45, 52], "ha": [16, 17, 34, 41, 45, 48, 49], "had": [41, 42, 48], "half": 50, "hand": 45, "handl": [18, 19, 31, 41, 44], "handleabbrevi": 19, "handleabbreviationsdict": 19, "handleinvalids": 31, "handler": [38, 47], "handlevalids": 31, "happen": 41, "hard": 19, "hardwar": 45, "has_extens": 49, "has_pip": 48, "hash_text": 52, "hashtag": [19, 41, 44], "have": [14, 17, 19, 22, 31, 38, 41, 42, 45, 50], "hd": 45, "he": [18, 48], "head": [34, 41, 45, 48, 52], "headent": 34, "health": [31, 32, 33, 34, 44], "healthstatu": [32, 44], "heat": 45, "heater": 45, "hello": [9, 41, 49, 52], "helloworld": 49, "help": [38, 53], "her": 18, "here": [5, 16, 19, 41, 44, 49, 52], "hex": 45, "hexagon": 45, "hi": [18, 45, 48], "hierarch": 17, "high": [14, 42, 45], "higher": 16, "him": 18, "hist": 45, "histor": 45, "hole": 45, "holidai": 48, "honest": [41, 52], "hor": 45, "horiz": 45, "horizont": 45, "hour": [42, 45], "how": [4, 6, 7, 8, 9, 10, 11, 12, 22, 38, 41, 52], "hp": 45, "hr": 45, "ht": 45, "html": [28, 41, 42, 45, 51], "html_tag": [19, 41, 44, 52], "html_text": 52, "htr": 45, "http": [14, 16, 22, 41, 42, 45, 50, 51, 52], "human": 45, "hundr": [41, 50], "hw": 45, "hx": 45, "hyd": 45, "hydr": 45, "hydraul": 45, "hydrogen": 45, "hyphen_text": 52, "hyphenated_word": [19, 41, 44, 52], "i": [4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 17, 18, 19, 22, 26, 28, 31, 34, 38, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53], "iaw": 45, "ican": [41, 52], "id": [4, 5, 6, 7, 10, 11, 22, 26, 42, 43, 44, 45, 46, 49], "identifi": [16, 17, 19, 22, 28, 32, 34, 42], "identifybestsimilarsynsetfromsynset": 17, "identifybestsimilarsynsetpair": 16, "identifybestsimilarwordfromwordset": 16, "identifybestsynset": 16, "identifycauseeffectforattr": 32, "identifycauseeffectforclausemodifi": 32, "identifycauseeffectfornsuj": 32, "identifynounandverbforcomparison": 16, "idx": 34, "ieee": 16, "ieeexplor": 16, "ig": 50, "ignor": [41, 43, 50], "ignore_list": 50, "iloc": 44, "im13": 42, "imit": 45, "imp": 45, "impel": [41, 45, 48, 49], "imperfect": 45, "impf": 45, "implement": 45, "import": [4, 6, 7, 8, 9, 10, 11, 12, 22, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52], "importerror": 50, "impr": 45, "improv": [38, 45], "inbd": 45, "inboard": 45, "inc": 48, "includ": [26, 32, 34, 41], "includepunct": [26, 49], "ind": 45, "indef": 45, "indefinit": 45, "indent": [45, 49], "index": [16, 17, 26, 32, 34, 38, 43, 46, 49], "indic": [22, 34, 45], "indir": 45, "indirect": 45, "induct": 45, "indust": 45, "industr": 45, "industri": [45, 51], "inf": 45, "infinit": 45, "infl": 45, "influenc": 45, "info": [16, 43, 44, 49], "infocontentnorm": [14, 16], "inform": [16, 17, 22, 31, 32, 33, 34, 44], "initcoref": [5, 49], "initi": [5, 49], "inj": 45, "inject": 45, "inl": 53, "innosl": 22, "inop": [41, 45, 48, 49], "inoper": 42, "inorg": 45, "inorgan": 45, "input": [44, 45, 52], "inq": 45, "inquiri": 45, "insp": 45, "inspec": 45, "inspect": [41, 45, 48, 49], "inst": 45, "instal": [38, 43, 45, 46], "installing_nltk_data": [39, 40], "instanc": 26, "instl": 45, "instr": 45, "instruct": 45, "instrument": 45, "insul": 45, "int": [14, 16, 17, 26, 32, 34, 44, 45, 50, 52], "integr": 48, "interj": 45, "interject": 45, "intern": [42, 44, 45], "intersect": 45, "intl": 45, "intro": 45, "introd": 45, "introduct": 45, "inv": 45, "invert": 45, "investig": 42, "involv": 38, "io": [41, 42, 45, 51], "iobj": [31, 34], "iprogress": [42, 45, 51], "ipython": 48, "ipywidget": [42, 45, 51], "is_punct": [9, 49], "isconjectur": 34, "islt": 45, "isneg": 34, "iso": 45, "isol": 45, "ispass": 34, "issu": [38, 41, 50, 53], "issubel": 31, "isupd": 49, "isvalidcausal": [32, 34], "isvalidkeyword": 34, "item": 41, "item1": [41, 52], "item2": [41, 52], "item3": [41, 52], "item4": [41, 52], "item5": [41, 52], "item6": [41, 52], "item7": [41, 52], "item8": [41, 52], "iter": 49, "its": [16, 19, 22], "itself": 16, "j": [41, 51, 52, 53], "jaidevd": 50, "jan": 45, "jannuari": 45, "jcn": [16, 17], "jcn_similar": 14, "join": [41, 42, 43, 44, 45, 46, 49, 51], "joint": [16, 17, 45], "jointsyn": 17, "jointsynset": 17, "jointsynsetlist": 16, "jointword": [16, 17], "jointwordlist": 16, "jointwordsynset": 17, "joshua": 53, "json": 43, "jsp": 16, "jt": 45, "jump": [32, 34], "junc": 45, "junction": 45, "jupyt": [42, 43, 45, 46, 48, 49, 51], "k": 26, "keep": [5, 8, 9, 12, 41], "kei": [41, 45], "keyword": [32, 33, 34, 44], "kj": 45, "know": [41, 52], "knowledge_graph": [0, 2], "ktype": [33, 34], "kw": 34, "kwarg": [24, 31, 32, 33, 34], "la": [41, 52], "lab": 45, "label": [4, 5, 6, 7, 8, 9, 10, 11, 12, 24, 26, 34, 42, 43, 44, 46, 48, 49, 50], "label_": [43, 48, 49], "laboratori": 45, "lack": 41, "laek": 41, "lammat": [26, 34], "lang": [46, 48, 49], "languag": [22, 26, 38, 43, 44, 48, 49, 50], "latest": 41, "layer": 17, "lch": [16, 17], "lch_similar": 14, "le": [41, 52], "lead": [5, 48, 49], "leak": [45, 48, 49], "leakag": 41, "learn": [39, 40, 41, 52], "left": [32, 34, 45, 48, 49], "lemma": [26, 42, 43, 44, 46, 49], "lemma_": [48, 49], "lemmalist": 34, "lemmat": [46, 48, 49], "lemvar": 26, "len": [44, 48, 49, 51], "length": [16, 17, 45], "less": [16, 17], "level": [42, 43, 44, 45], "levelnam": [42, 43, 44], "lf": 45, "lg": 45, "lh": 45, "li": 16, "lib": [42, 45, 48, 51], "librari": [19, 38, 43, 44, 45, 52], "life": 42, "lifecycl": [22, 45], "lift": 42, "light": 41, "like": [4, 6, 8, 9, 12, 30, 41, 45, 48, 49, 52], "limit": [42, 45], "lin": [16, 17], "line": 45, "link": [22, 28], "linkent": 22, "linknod": 22, "links2opm": 28, "linktombsemodel": 22, "list": [14, 16, 17, 19, 22, 26, 28, 31, 32, 33, 34, 41, 43, 45, 50, 51, 52, 53], "listid": 22, "literartur": 19, "ll": 48, "lm": 45, "lml": 22, "lml_id": 22, "lmlgraph": 22, "lmlobject": 22, "lmlparser": [0, 23], "ln": 45, "lo": 45, "load": [4, 6, 7, 8, 9, 10, 11, 12, 43, 46, 48, 49, 50], "locat": [7, 19, 32], "location_ent": 7, "locationent": [0, 13], "log": [16, 31, 43, 44, 46, 49], "log_format": 14, "logger": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 26, 30, 31, 32, 33, 34, 46, 49], "lolol": [41, 52], "lololol": [41, 52], "long": [41, 52], "longer": 51, "look": 16, "lookup": [5, 49], "loss": 42, "lot": 50, "love": 48, "low": [41, 42, 45], "lower": [4, 6, 7, 9, 10, 11, 16, 17, 26, 34, 44, 45, 49], "lp": 45, "lt": [46, 48, 49, 52], "lvl": 45, "lwr": 45, "m": [39, 40, 42, 43, 44, 45], "mach": 45, "machin": [38, 45], "made": [8, 9, 12, 41, 48], "mag": 45, "magn": 45, "magnet": 45, "mai": [28, 38, 41, 42, 44, 52], "mail": 53, "mailto": [41, 52], "main": [41, 42], "maint": 45, "mainten": 45, "maintenan": 45, "maj": 45, "major": 45, "make": [19, 45, 48], "make_pipelin": 52, "man": 45, "manag": [45, 48, 49], "mandd": [5, 18, 19, 22, 26, 28, 30, 31, 32, 33, 34], "mandelli": 53, "manual": [39, 40, 42, 45, 48], "manufactur": 45, "march": [5, 18, 26, 32, 33], "masonri": 45, "match": [26, 31, 32, 33, 34, 49], "match_id": 26, "matcheds": [31, 32, 33], "matcher": [8, 9, 12, 26, 31, 32, 33, 34, 43, 49], "materi": 45, "matl": 45, "matplotlib": [39, 40, 43], "matter": [41, 52], "max": 45, "max_similar": [14, 16], "maximum": [14, 16, 45], "maxn": [41, 44, 52], "mbp": 45, "mbse": [0, 21], "mbw": 45, "me": 18, "mea": 45, "mean": [19, 45], "measur": 45, "measurem": 45, "mech": 45, "mechan": [41, 45], "meet": 45, "mem": 45, "memori": 45, "merg": [5, 48], "merge_ent": 48, "mergeentitieswithsameid": 5, "mergephras": 5, "messag": [14, 42, 43, 44], "meta": 49, "metal": 45, "metallurgi": 45, "meter": 41, "meth": 45, "method": [5, 14, 16, 17, 19, 22, 28, 33, 34, 45, 51], "mf": 45, "mfd": 45, "mfg": 45, "mfr": 45, "mgmt": 45, "mgt": 45, "miedo": [41, 52], "might": 19, "mild": 45, "million": 50, "min": 45, "miniconda3": [42, 45, 48, 51], "minimum": 45, "misc": 45, "miscellan": 45, "misspel": [19, 44], "misspelledword": 44, "mistak": 41, "mix": 19, "mkdir": [39, 40], "mngmnt": 45, "mngmt": 45, "mngt": 45, "mntnc": 45, "mod": 45, "mode": 45, "model": [22, 26, 28, 38, 42, 43, 48, 49], "modelresult": 50, "modif": 45, "modifi": [32, 41, 44], "modul": [38, 43, 46], "mom": [41, 45, 52], "moment": 45, "monei": 50, "monoton": 17, "mop": 45, "more": [17, 19], "most": [19, 41], "motor": [41, 43, 45, 46, 48], "mow": 45, "mrp": 45, "mtg": 45, "mtr": 45, "much": [41, 52], "multipl": [19, 38, 52], "multpl": 19, "my": [18, 41, 52], "mycorp": 48, "n": [16, 39, 40, 41, 45, 48, 49, 50, 52], "name": [4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 19, 22, 26, 34, 41, 42, 43, 44, 46, 49, 50, 52], "nat": 45, "natur": [44, 45, 50], "nbor": [34, 48], "nc": 45, "ncm": 45, "ncr": 45, "ne": 45, "necessari": 48, "need": [5, 19, 26, 34, 38, 44, 48, 49], "neg": [34, 45, 48, 49], "negat": [31, 34, 43, 44], "negation_text": 43, "neo4j": 22, "ner": [5, 46, 48, 49], "net": [17, 45], "network": 45, "networkx": [22, 28, 39, 40], "neuralcoref": 49, "new": [26, 45, 49], "newdoc": [4, 6, 7, 8, 9, 10, 11, 12], "newent": 49, "newlist": 45, "next": [41, 50, 52], "next1": 50, "nfc": 52, "nfd": 52, "nfkc": [41, 44, 52], "nfkd": 52, "nine": [41, 50], "nino": [41, 52], "ni\u00f1o": [41, 52], "nl": 45, "nlp": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 21, 31, 32, 33, 34, 43, 46, 48, 49, 50], "nlp_config": 1, "nlp_util": [0, 25, 42, 43, 44, 46], "nlpconfig": [1, 42, 44], "nltk": [16, 38], "nltk_data": [39, 40], "nltkdownload": 40, "nnp": 48, "no_list": 50, "node": 22, "node_color": 28, "nois": [8, 9, 12, 41, 48], "nom": 45, "nomin": 45, "non": 50, "nonconform": 45, "none": [4, 6, 7, 8, 9, 10, 11, 12, 16, 19, 22, 24, 26, 28, 31, 32, 33, 34, 42, 44, 49, 52], "nonlinear": 17, "norm": 45, "norm_ent": 48, "normal": [5, 19, 42, 45, 49], "normd": 45, "norment": [5, 48, 49], "north": 45, "not_acronym": 18, "note": [19, 41, 45, 50], "notebook": [38, 41], "notebook_tqdm": [42, 45, 51], "notic": [41, 45, 48, 49], "noun": [5, 16, 48, 49], "nov": 45, "novemb": 45, "now": 44, "noz": 45, "nozzl": 45, "np": [17, 43, 45, 46], "npation": [41, 52], "npr": 45, "nsubj": [31, 32, 34, 48, 49], "nsubjpass": [31, 32, 34, 48, 49], "nt": 45, "nuc": 45, "nucl": 45, "nuclear": 45, "nueralcoef": 48, "num": [0, 21, 48, 49], "num_text": 52, "number": [14, 16, 19, 41, 42, 44, 45], "numberrecogn": 50, "numberwithunitrecogn": 50, "numer": [19, 39, 40, 44, 45], "numerizerdoc": 44, "numpi": [16, 17, 39, 40, 43, 45, 46], "nw": 45, "nworld": [41, 52], "o": [41, 42, 43, 44, 45, 46, 49, 51], "ob": 45, "obj": [31, 34, 45], "obj_ent": [31, 33], "object": [4, 6, 7, 8, 9, 10, 11, 12, 18, 19, 22, 24, 26, 28, 31, 32, 33, 34, 45, 46, 48], "objectlist": 28, "obl": [31, 34], "observ": [41, 45], "obsrv": 45, "occ": 45, "occa": 45, "occasion": 45, "occur": 16, "occurr": 45, "oct": 45, "octagon": 45, "octob": 19, "od": 45, "off": 41, "oil": [41, 43, 45, 46], "ol": [41, 52], "omg": [41, 52], "one": [14, 16, 17, 19, 41, 44, 50], "onli": [16, 19, 22, 28, 30, 41, 44, 52], "oo": 45, "op": [41, 45], "open": [8, 9, 12, 41, 42, 44, 45, 53], "openpyxl": [39, 40], "oper": [31, 41, 42, 45, 48, 49, 52], "operatorshiftlog": 31, "operatorshiftlogsprocess": [0, 35], "opg": 31, "opl": 28, "oplentitypars": 28, "oplpars": [0, 22, 29, 42, 43, 44], "opltextpars": 28, "opm": [0, 21, 42, 43, 44, 46], "opmgraph": 28, "opmobject": [28, 42, 43, 44], "opp": 45, "oppos": 45, "oprd": [31, 34, 48, 49], "opt": 45, "optim": 17, "optimalopt": 19, "option": [19, 41, 45, 48, 52], "ord": 45, "order": [14, 16, 17, 32, 33, 41, 45], "ordered": 32, "ordi": 50, "ordin": 50, "ordinal_list": 50, "org": [14, 16, 41, 45, 48, 52], "organ": [34, 45], "orig": [45, 50, 52], "origin": [22, 45, 50, 52], "original_lesk": [14, 16], "otbd": 45, "other": [14, 28, 41], "otherwis": 45, "our": 18, "out": [16, 22, 28, 34, 41, 45, 49, 52], "outboard": 45, "outer": 45, "output": 45, "output_causal_effect_fil": 44, "output_health_status_fil": 44, "over": [32, 34, 49, 50], "overcurr": 42, "overh": 42, "overwork": 51, "ow": [41, 52], "p": [41, 52], "p1": [43, 46], "pack": 45, "packag": [38, 42, 45, 48, 50, 51, 52], "page": [0, 38], "pair": [16, 17, 32], "panda": [19, 26, 39, 40, 42, 43, 44, 45, 46, 49], "panel": 42, "parab": 45, "parabol": 45, "parallel": 45, "param": 22, "paramdict": 14, "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 26, 30, 31, 32, 33, 34, 52], "pardir": [41, 42, 43, 44, 45, 46, 51], "parent": 34, "pars": [22, 28, 38], "parseassetent": 22, "parseentitydescript": 22, "parselinkent": 22, "parser": [46, 48, 49], "part": [5, 45, 48, 49], "partial": 52, "particl": [5, 48, 49], "pass": [31, 41, 44, 52], "passiv": 34, "password": [41, 52], "past": [41, 48], "past_aux": 48, "path": [1, 16, 17, 41, 43, 45, 46, 51], "path_similar": 14, "pathlength": 17, "pation": [41, 52], "patt": 45, "pattern": [4, 6, 7, 10, 11, 24, 26, 34, 45, 46, 48, 49], "patternlist": 34, "patterns": [43, 44, 46], "patternscaus": [42, 44], "patternsopm": 42, "pc": 45, "pcd": 45, "pck": 45, "pcomp": [48, 49], "pd": [42, 43, 44, 45, 46, 49], "pdf": 14, "peopl": [38, 41, 52], "per": 45, "perf": 45, "perform": [16, 17, 19, 28, 41, 44, 45, 48], "perfrm": 45, "perh": 45, "perhap": 45, "period": 45, "perma": 45, "perman": 45, "person": [45, 48], "person_ent": 48, "peter": 48, "pfc": 45, "pfr": 41, "phone": 41, "phone_numb": [19, 41, 44, 52], "phone_text": 52, "phrase": [5, 34], "phrase_entity_match": 8, "phraseentitymatch": [0, 13], "phraselist": 8, "pictograph": 52, "piec": 45, "pin": 45, "pinguino": [41, 52], "ping\u00fcino": [41, 52], "pip": [39, 40, 43, 46], "pipe": [26, 45, 46, 48, 49], "pipelin": [0, 2, 19, 26, 32, 34, 38, 46, 47, 48], "pipeline_list": 52, "pitch": 45, "pl": 45, "plan": 45, "plant": [45, 51], "platform": 50, "pleas": [39, 42, 43, 44, 45, 46, 51], "plm": 45, "plotdag": 26, "plt": 43, "plur": 45, "plural": 45, "pm1": [43, 46], "pm_disambigu": 14, "pmatcher": [8, 9], "pmp": 45, "pn": 45, "po": [16, 32, 34, 44, 45, 49], "pobj": [31, 32, 34, 48, 49], "poi": 45, "point": [38, 45], "pool": 16, "poor": 41, "pop": 45, "popul": 22, "popular": 45, "pos_": [48, 49], "pos_tag": 16, "posit": 45, "posn": 45, "possibl": [4, 6, 19, 45], "post": 41, "postprocess": 41, "pour": [41, 52], "power": [41, 42, 45, 48, 49], "pr": 48, "pract": 45, "practic": 45, "pre": [5, 45, 49], "pred": [34, 45], "predic": [31, 32, 33, 34, 45], "predict": 45, "predsynonym": [31, 32, 33, 34], "pref": 45, "prefix": 45, "preload": 26, "prep": [45, 48, 49], "prepar": 45, "prepend": 44, "prepocessor": 44, "preposit": [31, 32, 33, 34], "preprocess": [0, 20, 31, 34, 38, 45, 47], "preprocessor": [19, 41], "preprocessordefaultlist": 19, "preprocessordefaultopt": 19, "preprocessorlist": [19, 41, 44], "preprocessornam": 19, "preprocessoropt": [19, 41, 44], "press": 45, "pressur": [41, 45, 48, 49], "presur": 41, "pretti": [26, 48, 49], "pretty_represent": [48, 49], "prevent": 42, "previou": [5, 49], "prevtoken": 49, "prfr": [41, 45], "principl": [41, 52], "print": [22, 26, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52], "printdeptre": [26, 49], "printonfil": 22, "printrecurs": 49, "prob": 45, "probab": 45, "probabl": 45, "probl": 45, "problem": 45, "problemat": 52, "proc": 52, "process": [4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 22, 26, 28, 31, 32, 33, 34, 45, 48, 49, 52], "processlist": 28, "procobj": [31, 34], "product": 45, "prog": 45, "progress": 45, "project": [38, 39, 40, 50, 53], "pron": 49, "prop": 45, "propag": [5, 49], "propagateenttyp": [5, 49], "properti": [45, 48], "propn": [48, 49], "propos": 14, "protocol": 45, "provid": [16, 18, 19, 22, 34, 50], "prox": 45, "proxim": [41, 45], "ptnlist": 26, "puddl": [41, 45], "pull": [38, 48], "pump": [8, 9, 11, 12, 41, 43, 45, 46, 48, 49], "pump_compon": [42, 44], "punc_text1": 52, "punc_text2": 52, "punc_text3": 52, "punct": [48, 49], "punctuact": 26, "punctuat": [19, 41, 44], "puncuat": 44, "punkt": [39, 40], "purif": 45, "put": 28, "pwr": 45, "py": [40, 42, 45, 48, 51], "pydant": 38, "pylab": 43, "pyplot": 43, "pysbd": [5, 39, 40], "pysbdsentenceboundari": 5, "pyspellcheck": [39, 40], "python": [39, 40, 52], "python3": [42, 45, 48, 51], "pywsd": [16, 39, 40, 41, 42, 43, 44, 45, 46, 51], "pzr": 45, "qc": 45, "qnty": 45, "qty": 45, "qualiti": 45, "quantiti": 45, "quantulum3": [39, 40], "quarter": [41, 50], "que": [41, 52], "question": 22, "quot": [41, 52], "quotation_mark": [19, 41, 44, 52], "quote_text": 52, "qu\u00e9": [41, 52], "r": [39, 40, 41, 42, 44, 49, 52], "rad": 45, "radiat": 45, "radiu": 45, "rain": [41, 52], "rang": [44, 51], "rather": 41, "rattl": [8, 9, 12, 41], "ravel": [42, 44], "raw": [41, 52], "raw_text": 41, "rcp": [41, 45, 48, 49], "rcparam": 43, "rd": 45, "re": [16, 17, 43, 45, 48, 49], "rea": 45, "reach": [41, 52], "reactor": [42, 45], "read": [34, 45], "read_csv": [42, 44], "read_excel": 45, "readfil": 24, "readthedoc": [41, 42, 45, 51], "real_burton_dewild": [41, 52], "reason": [41, 45, 52], "rec": 45, "recirc": 45, "recircul": 45, "recogn": [5, 19, 49], "recognit": 48, "recognizers_date_tim": 50, "recognizers_numb": 50, "recognizers_number_with_unit": 50, "recognizers_sequ": 50, "recognizers_text": 50, "recomb": 45, "recombin": 45, "recommend": 42, "rect": 45, "rectangular": 45, "recurs": [5, 34, 49], "red": 45, "reduc": 45, "reduct": [41, 45, 48, 49], "ref": [16, 45, 49], "ref_ent": 49, "ref_n": [5, 49], "ref_t": [5, 49], "ref_t_": 49, "refer": [45, 49], "refr": 45, "reftoken": 49, "refurb": 45, "refurbish": 45, "regen": 45, "regener": 45, "regist": 45, "regr": 45, "regress": 45, "reinf": 45, "reinforc": 45, "reinst": 45, "reinstal": 45, "rel": 45, "relai": 42, "relat": [31, 32, 33, 34], "relcl": 49, "releas": 45, "reli": 19, "reload_ext": 43, "remov": [5, 16, 19, 22, 26, 30, 44, 45, 49], "remove_extens": 49, "remove_pip": [46, 48, 49], "removeacronym": 28, "removebracket": 44, "removepunctu": 44, "removerep": 44, "remv": 45, "render": [42, 43, 46, 48, 49], "rep": 45, "repack": 45, "repck": 45, "repeat": 44, "repeating_char": [19, 41, 44, 52], "repeating_text1": 52, "repeating_text2": 52, "repeating_text3": 52, "repeating_text4": 52, "repeating_text5": 52, "repect": 17, "repl": 52, "replac": [19, 44, 45], "report": [38, 45], "repositori": 38, "repres": [22, 32, 34], "rept": 45, "req": 45, "reqd": 45, "request": [34, 38], "requir": [22, 38, 41, 43, 45, 46], "res_similar": 14, "research": 45, "reservoir": 45, "reset": [18, 31, 32, 33, 34, 43, 45], "resetpipelin": [26, 46, 49], "resolut": [5, 49], "resolv": [5, 48, 49], "resourc": 45, "respond": [41, 48], "resrvr": 45, "result": [5, 42, 49], "reterm": 45, "retermin": 45, "retest": 45, "retriev": 44, "return": [5, 14, 16, 17, 18, 19, 22, 26, 28, 30, 31, 32, 33, 34, 48, 49], "returnacronym": 28, "returnattributelist": 28, "returnent": 22, "returngraph": [22, 28], "returnlistid": 22, "returnobjectlist": 28, "returnprocesslist": 28, "returnsexternallink": 28, "rev": 45, "reveal": [41, 42, 45, 48, 49], "revenu": 50, "revers": 32, "reviel": 41, "review": 41, "revis": 45, "rh": 45, "right": [32, 34, 44, 45, 48, 49], "rl": 45, "rm": 45, "rmv": 45, "rmve": 45, "rnd": 45, "room": [42, 45], "root": [32, 34, 44, 45, 48, 49], "rootcaus": 32, "round": [44, 45, 52], "row": [45, 49], "rplc": 45, "rplce": 45, "rsvr": 45, "rule": [31, 32, 33, 34, 49], "rulebasedmatch": [0, 35, 42, 44], "ruler": [48, 49], "run": [39, 40], "ruptur": [41, 45, 48, 49], "rx": 45, "safeguard": 42, "safeti": [8, 9, 12, 41, 42, 45], "same": 5, "san": 34, "save": 22, "saw": 50, "scaf": 45, "scaff": 45, "scaffold": 45, "scale": [17, 45], "scalingdeptheffect": 17, "sched": 45, "schedul": 45, "scheme": 42, "scienc": 22, "scikit": [39, 40], "score": [16, 17], "screen": [28, 34, 43, 45, 46], "screw": 45, "script": 40, "scrn": 45, "sdcr": 42, "se": [41, 52], "search": [19, 32, 34, 38], "sec": [41, 42, 43, 44, 45, 46, 51], "second": [14, 16, 17, 50, 51], "sect": 45, "section": [41, 45, 52], "secur": 45, "see": [19, 22, 28, 41, 42, 45, 50, 51, 52], "seem": [4, 6, 8, 9, 12, 41, 50], "sel": 45, "select": [32, 45], "selectvalid": 32, "selent": 32, "self": [22, 28, 33, 34], "semant": [14, 16, 17], "semantic_similarity_synset": [14, 16, 17], "semanticsimilaritysent": 16, "semanticsimilaritysynset": 17, "semanticsimilaritysynsetlist": 17, "semanticsimilarityusingdisambiguatedsynset": 17, "semanticsimilarityword": 16, "semsimilar": [16, 17], "sen": 45, "sens": [16, 19], "sensemethod": [16, 51], "sensor": 45, "sent": [31, 32, 34, 43, 49, 51], "sentenc": [5, 14, 16, 19, 28, 31, 32, 33, 34, 44, 49, 51], "sentence1": 14, "sentence2": 14, "sentencea": 16, "sentenceb": 16, "sentencesensedisambigu": 16, "sentencesensedisambiguationpywsd": [16, 51], "sentencesimialritybestsens": 14, "sentencesimilar": [0, 15, 16], "sentencesimilaritypawarmagomethod": 14, "sentencesimilaritywithdisambigu": 16, "sentlist": 16, "sentsynset": [16, 51], "sep": 48, "separ": [22, 28], "sept": 45, "septemb": 45, "sequenc": 34, "sequencerecogn": 50, "serial": 45, "serv": 48, "servic": 45, "set": [14, 16, 17, 22, 45, 49], "set_extens": 49, "set_index": 49, "setlevel": 43, "setparamet": 14, "seventi": [41, 50], "sever": [41, 45], "sg": 45, "sh": 45, "shaft": [4, 6, 8, 9, 12, 41, 45, 48, 49], "shape": 44, "shc": 45, "she": 18, "sheet": 45, "shft": 45, "shift": 31, "shiver": [41, 52], "short": 42, "shortdist": 17, "shortest": 17, "should": [17, 34, 42, 46], "show": 41, "shown": 45, "shss": 45, "shutdown": 42, "shwn": 45, "side": 45, "sign": 41, "signific": 16, "sim": 45, "similar": [0, 2, 34, 38, 47], "similari": 17, "similarit": 14, "similaritymethod": 14, "simmethod": [16, 17, 51], "simpl": 50, "simple_entity_match": 9, "simple_lesk": [14, 16, 51], "simpleentitymatch": [0, 13], "simul": 45, "simutil": [0, 15, 51], "singl": [16, 22, 41, 48, 52], "sit": 45, "site": [42, 45, 48, 51], "sixti": [41, 50], "size": 45, "sk": 45, "sketch": 45, "skip": [26, 34], "skipcent": 32, "skipinitialspac": [42, 44], "skippunct": [26, 49], "sl": 49, "slight": 41, "smith": 48, "sn": 45, "so": 44, "socket": 45, "some": [38, 41], "soon": 45, "sourc": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 24, 26, 28, 30, 31, 32, 33, 34], "space": 49, "spaci": [4, 5, 6, 7, 8, 9, 10, 11, 12, 26, 32, 34, 38, 43, 44, 46, 49], "spain": 48, "span": [26, 32, 34, 48, 49], "spare": 45, "spec": 45, "specif": 45, "specifi": [22, 43, 45, 46, 49, 52], "specimen": 45, "spell": [19, 38, 44, 47], "spellcheck": [19, 41, 43, 44, 45, 46], "spellcorrectdoc": 44, "sperat": 44, "sphinx": 0, "spit": 32, "split": [43, 44, 45, 50, 52], "splitentsfollowingnouncaus": 32, "splittolist": [19, 45], "spre": 45, "sq": 45, "squar": [22, 41, 44, 45, 52], "squash": 50, "sr2ml": 44, "src": [0, 41, 42, 43, 44, 45, 46, 51], "ss": 45, "ssc": [8, 9, 12, 31, 32, 33, 34, 42, 44, 49], "ssc_entity_rul": [42, 44], "sslerror": 38, "st": [45, 51], "stab": 45, "stabil": 45, "stabl": [42, 45, 51], "stackoverflow": [22, 41, 52], "stainless": 45, "stamp": 16, "stand": 45, "standard": 45, "start": [26, 32, 34, 42, 48, 49], "stat": 45, "state": 42, "statement": 42, "statist": [14, 16, 45], "statu": [31, 32, 33, 34, 43, 44], "stby": 45, "std": 45, "stdrd": 45, "steam": [42, 45], "steel": 45, "steep": 45, "stem": 38, "step": [39, 40], "stk": 45, "stock": 45, "stop": [32, 34], "store": [5, 49], "stori": [41, 52], "str": [14, 16, 17, 19, 22, 26, 32, 34, 45, 50, 52], "streamhandl": [46, 49], "strength": 45, "string": [16, 18, 19, 22, 26, 30, 33, 34, 43, 44, 52], "strip": [44, 45], "strk": 45, "stroke": 45, "strong": 45, "struct": 45, "structur": [5, 22, 28, 34, 42, 45, 49], "style": [43, 46, 48, 49], "su": 51, "subel": 31, "subj": [26, 31, 34, 45], "subj_ent": [31, 33], "subject": [31, 32, 33, 34, 45], "subtre": [32, 34, 48], "suct": 45, "suction": 45, "supp": 45, "suppli": [34, 41, 45, 48, 49], "support": [16, 38, 48], "suppress": 45, "sure": [45, 48], "surf": 45, "surfac": 45, "surpris": 48, "surv": 45, "survei": 45, "susp": 45, "suspens": 45, "sw": 45, "swch": 45, "switch": 45, "switchyard": 45, "sy": [41, 42, 43, 44, 45, 46, 51], "symm": 45, "symmetri": 45, "syn": 17, "synonym": [31, 32, 33, 34], "synset": [14, 16, 17, 51], "synseta": 17, "synsetb": 17, "synsetlist": [16, 17], "synsetlist1": 17, "synsetlist2": 17, "synsetlistsimilar": [17, 51], "synsetsa": [17, 51], "synsetsb": 17, "synsetssimilar": 17, "synsetutil": [0, 15, 51], "syst": 45, "system": [5, 11, 42, 45, 49], "t": [41, 45, 48, 49, 52], "t1": 52, "t2": 52, "t3": 52, "t4": 52, "t8": 30, "tag_": 48, "tagger": [39, 40, 46, 48, 49], "take": [16, 41, 42, 43, 44, 45, 46, 50, 51], "taken": 41, "tank": 45, "tar": 39, "tc": 45, "tdp": 45, "tech": 45, "techn": 45, "technic": 45, "technol": 45, "technologi": 45, "tel": 45, "telecom": 45, "telecomm": 45, "telecommun": 45, "telephon": 45, "temp": 45, "temporal_attribut": 10, "temporal_attribute_ent": 10, "temporal_rel": 11, "temporal_relation_ent": 11, "temporalattributeent": [0, 13], "temporalrelationent": [0, 13], "temporari": 45, "term": [8, 9], "termin": 45, "test": [8, 9, 12, 19, 22, 41, 45, 48, 49, 52], "teven": [41, 52], "text": [4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 19, 22, 26, 31, 34, 38, 43, 45, 46, 47, 49, 50, 52], "text_fil": [42, 44], "text_list": 50, "text_process": [0, 2, 41, 44, 45], "textaci": [19, 39, 40, 41], "textacyin4word": [41, 52], "textacynorm": 19, "textacyremov": 19, "textacyreplac": 19, "textfil": [42, 44], "textlist": 45, "textprocess": [31, 34], "than": [16, 17, 41], "thd": 45, "thei": [18, 41, 45], "them": [5, 18, 28, 48], "theor": 45, "theoret": 45, "thermographi": 45, "thi": [0, 5, 16, 17, 19, 22, 28, 38, 39, 40, 41, 42, 48, 49, 52], "thick": 45, "thing": 30, "third": 50, "thk": 45, "those": 16, "thousand": [41, 50], "thread": 45, "three": [41, 50], "threshold": 19, "through": [41, 45, 52], "throwbackthursdai": [41, 52], "thru": 45, "tic": 41, "time": [38, 45, 46, 47, 50], "tir": 45, "titl": [41, 52], "tk": [45, 48], "tnk": 45, "todo": 44, "tok2vec": [46, 48, 49], "token": [4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 26, 32, 34, 39, 40, 48, 49], "tol": 45, "toler": 45, "tolist": [42, 44], "toll": 45, "toller": 45, "toml": 1, "tomli": [39, 40], "took": [41, 42, 43, 44, 45, 46, 51], "total": [16, 45], "totken": 49, "tp": 16, "tqdm": [42, 45, 51], "tqdmwarn": [42, 45, 51], "trail": [5, 48, 49], "train": 45, "tran": 45, "transact": 45, "transf": 45, "transfer": [17, 45], "transform": 45, "transl": 45, "translat": [28, 45], "transm": 45, "transmiss": 45, "transmitt": 45, "trash": [43, 46], "trav": 45, "travel": [28, 45, 48], "trblsht": 45, "tre": [41, 52], "treat": [44, 45], "treatm": 45, "treatment": 45, "tree": [26, 49], "treedist": 17, "trip": 42, "trng": 45, "troub": 45, "troubleshoot": [42, 45], "troublesom": 45, "true": [6, 8, 9, 12, 14, 16, 17, 18, 22, 26, 31, 32, 34, 42, 43, 44, 45, 46, 48, 49, 52], "try": [39, 40, 41, 43, 46, 52], "tr\u00e8": [41, 52], "tungsten": 45, "tupl": [16, 22, 26, 31, 32, 33, 34, 48, 49, 52], "turb": 45, "turbin": [42, 45], "tw": 28, "twelv": [41, 50], "twenti": [41, 50], "twitter": [41, 52], "two": [14, 16, 17, 28, 41, 50], "two_million": 50, "tworld": [41, 52], "txt": 41, "ty": 45, "typ": 45, "type": [5, 14, 16, 17, 18, 19, 22, 26, 31, 32, 33, 34, 45, 49], "typic": 45, "typing_extens": 39, "u": [48, 52], "u200b": [41, 52], "ua": 45, "uai": 45, "ub": 45, "ucut": 45, "ufeff": [41, 52], "ugh": [41, 52], "ull": 45, "unabl": [43, 46], "under": [38, 45], "undercut": 45, "underwat": 45, "underwtr": 45, "unequ": 45, "unicod": [19, 41, 44], "unicode1_text": 52, "unicode2_text": 52, "unicode3_text": 52, "unicode4_text": 52, "unicode_emoji": 50, "unicodedata": 52, "unit": [12, 38, 43, 45, 46, 52], "unit_ent": 12, "unitent": [0, 13], "univers": 45, "unk": 45, "unkn": 45, "unknown": 45, "unkw": 45, "unkwn": 45, "unless": 45, "unnam": 44, "uno": 45, "unplug": 41, "uo": 45, "uon": 45, "up": [41, 43, 44, 45, 46, 51], "updat": [18, 26, 33, 34, 42, 45, 51], "updateabbrevi": [18, 45], "updateddoc": [4, 6, 7, 8, 9, 10, 11, 12], "updatedword": 44, "upper": 17, "url": [19, 41, 44], "url_text": 52, "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 22, 26, 32, 34, 41, 45, 49, 50, 51, 52], "user": [34, 39, 40, 41, 43, 44, 45, 46, 48, 51], "user_handl": [19, 41, 44, 52], "user_instal": [42, 45, 51], "user_text": 52, "usernam": [41, 52], "userwarn": 48, "util": [0, 2, 42, 43, 44, 46, 49], "v": 45, "vac": 45, "vacuum": 45, "valid": [32, 34], "validdisambigu": 14, "validleftssc": 32, "validrightssc": 32, "valids": 34, "validsimilar": 14, "valu": [17, 42, 44, 49, 52], "valv": [8, 9, 12, 41, 42, 45], "var": [26, 34, 42, 45], "variabl": [22, 26, 34, 45], "varlist": 34, "vb": 45, "vbd": 48, "vbg": 48, "vector": [14, 16, 17], "vendor": 42, "vent": 45, "ventil": 45, "ver": [34, 45], "verb": [16, 34, 45, 48, 49], "veri": 48, "verif": 45, "verifi": 45, "versu": 45, "vert": 45, "vertic": 45, "vessel": 45, "vi": 45, "via": [43, 46], "vib": 45, "vibe": 45, "vibrat": [4, 6, 8, 9, 12, 41, 45, 48], "visibl": 41, "visual": [26, 34, 45, 48, 49], "vlv": 45, "vocab": 49, "vol": 45, "volum": 45, "vrfy": 45, "vsl": 45, "w": [16, 45], "w006": 48, "wa": [18, 41, 42, 45, 48, 49, 51], "wai": [38, 45, 53], "wang": 53, "wangc": [5, 18, 19, 26, 30, 31, 32, 33, 34, 42, 45, 48, 51], "warm": [41, 42, 43, 44, 45, 46, 51], "warn": [41, 43, 48], "wash": 45, "washer": 45, "wast": 45, "wastag": 45, "water": 45, "wc": 45, "we": [5, 19, 44, 48, 49], "week": 45, "weight": [14, 16, 45], "weld": 45, "well": [41, 42, 52], "were": [41, 45, 51], "west": 45, "wgt": 45, "what": [41, 52], "when": [16, 19, 38, 41, 42], "which": [19, 22, 41, 42], "while": 17, "whitespac": [19, 41, 44], "whitespace_text": 52, "whl": 40, "whomev": [41, 52], "why": [41, 52], "wife": 48, "wikipedia": [41, 52], "window": 38, "wip": 48, "wire": 45, "within": [32, 41, 45], "without": [16, 45], "wk": 45, "wn": [16, 17], "won": [41, 52], "wonder": [41, 52], "word": [14, 16, 17, 19, 30, 44, 50], "worda": 16, "wordb": 16, "wordcount": 16, "worddata": 16, "wordlist": 16, "wordnet": [14, 16, 17, 39, 40], "wordnetpathlength": 17, "wordnetsimmethod": 14, "wordord": 14, "wordordercontribut": 14, "wordordersimilaritysent": 16, "wordordersimilaritysynsetlist": 17, "wordsensedisambigu": 16, "wordset": 16, "wordssimilar": 16, "wordsynset": 17, "work": [33, 41, 45, 48, 52], "worker": 51, "workflow": [0, 2, 38, 42, 43, 47], "workflowbas": [0, 31, 32, 33, 35], "workorderprocess": [0, 35, 43], "world": [9, 41, 49, 52], "wrap": 16, "wsh": 45, "wshr": 45, "wst": 45, "wstg": 45, "wt": 45, "wth": [41, 52], "wtr": 45, "wup": [16, 17], "wup_similar": 14, "www": [41, 52], "xa0": 45, "xcomp": [48, 49], "xfer": 45, "xfmr": 45, "xfrmr": 45, "xlsx": [19, 45], "xml": [22, 44], "xmtr": 45, "y": [42, 43, 44], "yard": 45, "yd": 45, "year": 45, "yield": 45, "you": [38, 41, 48, 52], "yourself": 45, "yp": 45, "yr": 45, "zip": [39, 40, 50, 52]}, "titles": ["API Reference", "src.dackar.config", "src.dackar", "src.dackar.knowledge_graph", "src.dackar.pipelines.ConjectureEntity", "src.dackar.pipelines.CustomPipelineComponents", "src.dackar.pipelines.GeneralEntity", "src.dackar.pipelines.LocationEntity", "src.dackar.pipelines.PhraseEntityMatcher", "src.dackar.pipelines.SimpleEntityMatcher", "src.dackar.pipelines.TemporalAttributeEntity", "src.dackar.pipelines.TemporalRelationEntity", "src.dackar.pipelines.UnitEntity", "src.dackar.pipelines", "src.dackar.similarity.SentenceSimilarity", "src.dackar.similarity", "src.dackar.similarity.simUtils", "src.dackar.similarity.synsetUtils", "src.dackar.text_processing.Abbreviation", "src.dackar.text_processing.Preprocessing", "src.dackar.text_processing", "src.dackar.utils", "src.dackar.utils.mbse.LMLparser", "src.dackar.utils.mbse", "src.dackar.utils.nlp.CreatePatterns", "src.dackar.utils.nlp", "src.dackar.utils.nlp.nlp_utils", "src.dackar.utils.num", "src.dackar.utils.opm.OPLparser", "src.dackar.utils.opm", "src.dackar.utils.utils", "src.dackar.workflows.OperatorShiftLogsProcessing", "src.dackar.workflows.RuleBasedMatcher", "src.dackar.workflows.WorkOrderProcessing", "src.dackar.workflows.WorkflowBase", "src.dackar.workflows", "src", "Contributors", "Welcome to DACKAR\u2019s documentation!", "Installation with Spacy 3.1 (Archived)", "Installation with Spacy 3.5", "Preprocessing demo", "Demo for Rule Based Natural Language Processing", "&lt;no title&gt;", "Demo For NLP Workflow: Based on branch wangc/nlp", "Abbreviation handler demo", "&lt;no title&gt;", "Usage Notebooks", "Example that can be used for Relation Extraction after Named Entity Recognizer", "Custom pipelines", "numerizer Preprocessing", "Similarity analysis", "textacy Preprocessing Methods for NLP", "Support"], "titleterms": {"": 38, "0": 48, "1": [39, 42, 48], "10": 42, "11": 42, "2": [42, 48], "3": [39, 40, 42, 48], "4": 42, "5": [40, 42], "6": 42, "7": 42, "8": 42, "9": 42, "For": 44, "abbrevi": [18, 45], "accent": 52, "access": 42, "acronym": 41, "act": 50, "add": 41, "addit": 41, "address": 52, "after": 48, "an": [39, 40], "analysi": [39, 40, 51], "analyt": 48, "ani": 41, "api": 0, "approach": [39, 40], "archiv": 39, "argument": 50, "attribut": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18, 19, 26, 30, 31, 32, 33, 34], "autocorrect": 41, "automat": 41, "base": [42, 44], "blob": 48, "blueprint": 48, "bracket": 52, "branch": 44, "bullet": 52, "can": [42, 44, 48], "causal": [42, 44], "ch12": 48, "chain": 48, "charact": 52, "class": [4, 6, 7, 8, 9, 10, 11, 12, 14, 18, 19, 22, 24, 28, 31, 32, 33, 34, 45], "clean": 41, "coher": 41, "com": 48, "combin": 52, "config": 1, "conjectureent": 4, "content": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 24, 26, 28, 30, 31, 32, 33, 34, 38], "contextualspellcheck": 41, "contribut": 38, "contributor": 37, "corefere": 48, "correct": [41, 44], "creat": [42, 44], "createpattern": 24, "creation": 41, "currenc": 52, "custom": 49, "custompipelinecompon": 5, "dackar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38], "data": [39, 40, 42, 44], "demo": [41, 42, 44, 45], "depend": [39, 40], "develop": 53, "dictionari": 41, "differ": [39, 40], "directli": 44, "do": 41, "doc": 44, "document": 38, "download": [39, 40], "email": 52, "emoji": 52, "entiti": [42, 44, 48], "exampl": [41, 48], "extenst": 50, "extract": 48, "file": 42, "find": 41, "first": 41, "found": 42, "from": [39, 40, 42, 48], "function": [4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 22, 26, 28, 30], "gener": 44, "generalent": 6, "get": 41, "github": 48, "handl": [45, 52], "handler": 45, "hashtag": 52, "have": 39, "how": [39, 40], "html": 52, "http": 48, "hyphen": 52, "i": [39, 40], "import": 42, "indic": 38, "inform": 42, "initi": 44, "input": 42, "instal": [39, 40], "ipynb": 48, "issu": [39, 40], "keyword": 42, "knowledge_graph": [3, 48], "languag": [39, 40, 42], "librari": [39, 40], "licens": 38, "list": [42, 44, 48], "lmlparser": 22, "load": [42, 44], "locationent": 7, "log": 42, "machin": 39, "mai": 39, "mark": 52, "master": 48, "matcher": [42, 44], "mbse": [22, 23], "mention": 48, "method": 52, "misspel": 41, "model": [39, 40], "modul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 24, 26, 28, 30, 31, 32, 33, 34, 42, 44], "much": 48, "name": 48, "natur": 42, "navig": 48, "need": 39, "ner": 44, "nlp": [24, 25, 26, 42, 44, 52], "nlp_util": 26, "nltk": [39, 40], "normal": 52, "notebook": 47, "num": 27, "number": 52, "numer": [41, 50], "operatorshiftlogsprocess": 31, "oplpars": 28, "opm": [28, 29], "option": 50, "other": 42, "packag": [1, 2], "pars": 39, "path": [42, 44], "pattern": 44, "perform": 51, "phone": 52, "phraseentitymatch": 8, "pipelin": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 41, 49, 52], "point": 52, "preprocess": [19, 39, 41, 44, 50, 52], "process": 42, "provid": [42, 44], "punctuat": 52, "pydant": 39, "pyspellcheck": 41, "python": 48, "quotat": 52, "raw": [42, 44], "read": [42, 44], "recogn": 48, "refer": 0, "relat": 48, "remov": 52, "repeat": 52, "replac": 52, "requir": [39, 40, 44, 48], "resolut": 48, "rule": [42, 44], "rulebasedmatch": 32, "sentencesimilar": 14, "set": [42, 44], "setup": 41, "similar": [14, 15, 16, 17, 39, 40, 51], "simpleentitymatch": 9, "simutil": 16, "so": 42, "some": 39, "spaci": [39, 40, 42, 48, 50], "spell": 41, "src": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "sslerror": [39, 40], "stem": 39, "string": [42, 50], "submodul": [2, 13, 15, 20, 21, 23, 25, 29, 35, 36], "support": 53, "symbol": 52, "synsetutil": 17, "tabl": 38, "tag": 52, "temporalattributeent": 10, "temporalrelationent": 11, "text": [41, 42, 44, 48], "text_process": [18, 19, 20], "textaci": 52, "thei": 48, "time": [41, 51], "unexpect": 41, "unicod": 52, "unit": 39, "unitent": 12, "up": 42, "url": 52, "us": [42, 44, 48], "usag": 47, "user": [42, 52], "util": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "variabl": 44, "wangc": 44, "welcom": 38, "were": 48, "when": [39, 40], "whitespac": 52, "window": 39, "word": [41, 52], "workflow": [31, 32, 33, 34, 35, 41, 44], "workflowbas": 34, "workorderprocess": 33, "you": 39}})