Search.setIndex({"alltitles": {"1. Set up the path, so that the NLP modules can be found": [[45, "1.-Set-up-the-path,-so-that-the-NLP-modules-can-be-found"]], "10. Process raw string data using matcher": [[45, "10.-Process-raw-string-data-using-matcher"]], "11. Access processed information from matcher": [[45, "11.-Access-processed-information-from-matcher"]], "2. Load Spacy module": [[45, "2.-Load-Spacy-module"]], "3. Load other modules": [[45, "3.-Load-other-modules"]], "4. Import NLP modules": [[45, "4.-Import-NLP-modules"]], "5. Set up logging": [[45, "5.-Set-up-logging"]], "6. Read and process entities": [[45, "6.-Read-and-process-entities"]], "7. Read and process causal keywords": [[45, "7.-Read-and-process-causal-keywords"]], "8. Create Rule-based matcher with entity list and causal entity list": [[45, "8.-Create-Rule-based-matcher-with-entity-list-and-causal-entity-list"]], "9. Read input text file, or users can provide a raw string": [[45, "9.-Read-input-text-file,-or-users-can-provide-a-raw-string"]], "API Reference": [[0, null]], "Abbreviation Handling": [[43, "Abbreviation-Handling"]], "Abbreviation handler demo": [[48, null]], "Abbreviation handling class": [[48, "Abbreviation-handling-class"]], "Add a pipeline to label ID: a combination of characters and numbers": [[43, "Add-a-pipeline-to-label-ID:-a-combination-of-characters-and-numbers"]], "Add a pipeline to label work order ID: \u2018wo 103\u2019 or \u2018wo103\u2019": [[43, "Add-a-pipeline-to-label-work-order-ID:-'wo-103'-or-'wo103'"]], "Attributes": [[1, "attributes"], [2, "attributes"], [4, "attributes"], [5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [9, "attributes"], [10, "attributes"], [11, "attributes"], [13, "attributes"], [14, "attributes"], [16, "attributes"], [20, "attributes"], [21, "attributes"], [28, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"], [35, "attributes"], [36, "attributes"]], "Autocorrect: Add any additional words to dictionary": [[44, "Autocorrect:-Add-any-additional-words-to-dictionary"]], "Autocorrect: Find acronyms or unexpected misspelled words": [[44, "Autocorrect:-Find-acronyms-or-unexpected-misspelled-words"]], "Autocorrect: Get automatically corrected text": [[44, "Autocorrect:-Get-automatically-corrected-text"]], "Autocorrect: Setup": [[44, "Autocorrect:-Setup"]], "Classes": [[4, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [20, "classes"], [21, "classes"], [24, "classes"], [26, "classes"], [30, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"]], "Coherent text example with Autocorrect and ContextualSpellCheck spelling correction": [[44, "Coherent-text-example-with-Autocorrect-and-ContextualSpellCheck-spelling-correction"]], "Combining into a pipeline": [[55, "Combining-into-a-pipeline"]], "Contents:": [[40, null]], "ContextualSpellCheck: Add any additional words to dictionary": [[44, "ContextualSpellCheck:-Add-any-additional-words-to-dictionary"]], "ContextualSpellCheck: Find acronyms or unexpected misspelled words": [[44, "ContextualSpellCheck:-Find-acronyms-or-unexpected-misspelled-words"]], "ContextualSpellCheck: Get automatically corrected text": [[44, "ContextualSpellCheck:-Get-automatically-corrected-text"]], "ContextualSpellCheck: Setup": [[44, "ContextualSpellCheck:-Setup"]], "Contributions": [[40, "contributions"]], "Contributors": [[39, null]], "Coreferee Resolution: require spacy>=3.1.0,<3.2.0": [[51, "Coreferee-Resolution:-require-spacy>=3.1.0,<3.2.0"]], "Correct the doc": [[47, "Correct-the-doc"]], "Create rule-based matcher with entity list and causal entity list": [[47, "Create-rule-based-matcher-with-entity-list-and-causal-entity-list"]], "Custom pipelines": [[52, null]], "Demo For NLP Workflow: Based on branch wangc/nlp": [[47, null]], "Demo for Rule Based Natural Language Processing": [[45, null]], "Developers:": [[56, "developers"]], "Different approach when there is an issue with SSLError": [[41, "different-approach-when-there-is-an-issue-with-sslerror"], [41, "id1"], [42, "different-approach-when-there-is-an-issue-with-sslerror"]], "Download language model from spacy": [[41, "download-language-model-from-spacy"], [42, "download-language-model-from-spacy"]], "Emergent Activity Analysis demo": [[43, null]], "Example from https://github.com/blueprints-for-text-analytics-python/blueprints-text/blob/master/ch12/Knowledge_Graph.ipynb": [[51, "Example-from-https://github.com/blueprints-for-text-analytics-python/blueprints-text/blob/master/ch12/Knowledge_Graph.ipynb"]], "Example that can be used for Relation Extraction after Named Entity Recognizer": [[51, null]], "First do text preprocessing": [[44, "First-do-text-preprocessing"]], "Functions": [[4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [18, "functions"], [19, "functions"], [24, "functions"], [28, "functions"], [30, "functions"], [32, "functions"]], "Generate patterns that can be used in NER": [[47, "Generate-patterns-that-can-be-used-in-NER"]], "How to install dependency libraries": [[41, "how-to-install-dependency-libraries"], [42, "how-to-install-dependency-libraries"]], "Indices and tables": [[40, "indices-and-tables"]], "Initialize variables": [[47, "Initialize-variables"]], "Installation with Spacy 3.1 (Archived)": [[41, null]], "Installation with Spacy 3.5": [[42, null]], "License": [[40, "license"]], "Load entity list and causal list or provide directly": [[47, "Load-entity-list-and-causal-list-or-provide-directly"]], "Module Contents": [[4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [24, "module-contents"], [26, "module-contents"], [28, "module-contents"], [30, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"]], "Normalize bullet points": [[55, "Normalize-bullet-points"]], "Normalize hyphenated words": [[55, "Normalize-hyphenated-words"]], "Normalize quotation marks": [[55, "Normalize-quotation-marks"]], "Normalize repeating characters": [[55, "Normalize-repeating-characters"]], "Normalize unicode": [[55, "Normalize-unicode"]], "Normalize whitespace": [[55, "Normalize-whitespace"]], "Package Contents": [[1, "package-contents"], [2, "package-contents"]], "Pipeline creation": [[43, "Pipeline-creation"], [44, "Pipeline-creation"]], "Preprocessing demo": [[44, null]], "PySpellChecker": [[44, "PySpellChecker"]], "Read raw text data and preprocess it": [[47, "Read-raw-text-data-and-preprocess-it"]], "Remove HTML tags": [[55, "Remove-HTML-tags"]], "Remove accents": [[55, "Remove-accents"]], "Remove brackets": [[55, "Remove-brackets"]], "Remove punctuation": [[55, "Remove-punctuation"]], "Replace URLs": [[55, "Replace-URLs"]], "Replace currency symbols": [[55, "Replace-currency-symbols"]], "Replace email addresses": [[55, "Replace-email-addresses"]], "Replace emoji": [[55, "Replace-emoji"]], "Replace hashtags": [[55, "Replace-hashtags"]], "Replace numbers": [[55, "Replace-numbers"]], "Replace phone numbers": [[55, "Replace-phone-numbers"]], "Replace user handles": [[55, "Replace-user-handles"]], "Required libraries and nltk data for similarity analysis": [[41, "required-libraries-and-nltk-data-for-similarity-analysis"]], "Required library for preprocessing": [[41, "required-library-for-preprocessing"]], "Required nltk data for similarity analysis": [[42, "required-nltk-data-for-similarity-analysis"]], "Set Paths and Loading Required Modules": [[47, "Set-Paths-and-Loading-Required-Modules"]], "Similarity analysis": [[54, null]], "Submodules": [[2, "submodules"], [15, "submodules"], [17, "submodules"], [22, "submodules"], [23, "submodules"], [25, "submodules"], [27, "submodules"], [31, "submodules"], [37, "submodules"], [38, "submodules"]], "Support": [[56, null]], "Text example": [[43, "Text-example"]], "Text to clean and numerize": [[44, "Text-to-clean-and-numerize"]], "Time Autocorrect workflow": [[44, "Time-Autocorrect-workflow"]], "Time ContextualSpellCheck workflow": [[44, "Time-ContextualSpellCheck-workflow"]], "Timing for performance": [[54, "Timing-for-performance"]], "Usage Notebooks": [[50, null]], "Welcome to DACKAR\u2019s documentation!": [[40, null]], "Windows machine have an issue with pydantic": [[41, "windows-machine-have-an-issue-with-pydantic"]], "You may need to install stemming for some of unit parsing": [[41, "you-may-need-to-install-stemming-for-some-of-unit-parsing"]], "chains and mentions can be navigated much as if they were lists": [[51, "chains-and-mentions-can-be-navigated-much-as-if-they-were-lists"]], "numerizer Acting on Strings": [[53, "numerizer-Acting-on-Strings"]], "numerizer Optional Arguments": [[53, "numerizer-Optional-Arguments"]], "numerizer Preprocessing": [[53, null]], "numerizer as SpaCy Extenstion": [[53, "numerizer-as-SpaCy-Extenstion"]], "src": [[38, null]], "src.dackar": [[2, null]], "src.dackar.config": [[1, null]], "src.dackar.knowledge_graph": [[3, null]], "src.dackar.pipelines": [[15, null]], "src.dackar.pipelines.ConjectureEntity": [[4, null]], "src.dackar.pipelines.CustomPipelineComponents": [[5, null]], "src.dackar.pipelines.EmergentActivityEntity": [[6, null]], "src.dackar.pipelines.GeneralEntity": [[7, null]], "src.dackar.pipelines.LocationEntity": [[8, null]], "src.dackar.pipelines.PhraseEntityMatcher": [[9, null]], "src.dackar.pipelines.SimpleEntityMatcher": [[10, null]], "src.dackar.pipelines.TemporalAttributeEntity": [[11, null]], "src.dackar.pipelines.TemporalEntity": [[12, null]], "src.dackar.pipelines.TemporalRelationEntity": [[13, null]], "src.dackar.pipelines.UnitEntity": [[14, null]], "src.dackar.similarity": [[17, null]], "src.dackar.similarity.SentenceSimilarity": [[16, null]], "src.dackar.similarity.simUtils": [[18, null]], "src.dackar.similarity.synsetUtils": [[19, null]], "src.dackar.text_processing": [[22, null]], "src.dackar.text_processing.Abbreviation": [[20, null]], "src.dackar.text_processing.Preprocessing": [[21, null]], "src.dackar.utils": [[23, null]], "src.dackar.utils.mbse": [[25, null]], "src.dackar.utils.mbse.LMLparser": [[24, null]], "src.dackar.utils.nlp": [[27, null]], "src.dackar.utils.nlp.CreatePatterns": [[26, null]], "src.dackar.utils.nlp.nlp_utils": [[28, null]], "src.dackar.utils.num": [[29, null]], "src.dackar.utils.opm": [[31, null]], "src.dackar.utils.opm.OPLparser": [[30, null]], "src.dackar.utils.utils": [[32, null]], "src.dackar.workflows": [[37, null]], "src.dackar.workflows.OperatorShiftLogsProcessing": [[33, null]], "src.dackar.workflows.RuleBasedMatcher": [[34, null]], "src.dackar.workflows.WorkOrderProcessing": [[35, null]], "src.dackar.workflows.WorkflowBase": [[36, null]], "textacy Preprocessing Methods for NLP": [[55, null]]}, "docnames": ["autoapi/index", "autoapi/src/dackar/config/index", "autoapi/src/dackar/index", "autoapi/src/dackar/knowledge_graph/index", "autoapi/src/dackar/pipelines/ConjectureEntity/index", "autoapi/src/dackar/pipelines/CustomPipelineComponents/index", "autoapi/src/dackar/pipelines/EmergentActivityEntity/index", "autoapi/src/dackar/pipelines/GeneralEntity/index", "autoapi/src/dackar/pipelines/LocationEntity/index", "autoapi/src/dackar/pipelines/PhraseEntityMatcher/index", "autoapi/src/dackar/pipelines/SimpleEntityMatcher/index", "autoapi/src/dackar/pipelines/TemporalAttributeEntity/index", "autoapi/src/dackar/pipelines/TemporalEntity/index", "autoapi/src/dackar/pipelines/TemporalRelationEntity/index", "autoapi/src/dackar/pipelines/UnitEntity/index", "autoapi/src/dackar/pipelines/index", "autoapi/src/dackar/similarity/SentenceSimilarity/index", "autoapi/src/dackar/similarity/index", "autoapi/src/dackar/similarity/simUtils/index", "autoapi/src/dackar/similarity/synsetUtils/index", "autoapi/src/dackar/text_processing/Abbreviation/index", "autoapi/src/dackar/text_processing/Preprocessing/index", "autoapi/src/dackar/text_processing/index", "autoapi/src/dackar/utils/index", "autoapi/src/dackar/utils/mbse/LMLparser/index", "autoapi/src/dackar/utils/mbse/index", "autoapi/src/dackar/utils/nlp/CreatePatterns/index", "autoapi/src/dackar/utils/nlp/index", "autoapi/src/dackar/utils/nlp/nlp_utils/index", "autoapi/src/dackar/utils/num/index", "autoapi/src/dackar/utils/opm/OPLparser/index", "autoapi/src/dackar/utils/opm/index", "autoapi/src/dackar/utils/utils/index", "autoapi/src/dackar/workflows/OperatorShiftLogsProcessing/index", "autoapi/src/dackar/workflows/RuleBasedMatcher/index", "autoapi/src/dackar/workflows/WorkOrderProcessing/index", "autoapi/src/dackar/workflows/WorkflowBase/index", "autoapi/src/dackar/workflows/index", "autoapi/src/index", "contributors", "index", "install", "install_spacy3.5", "notebooks/EmergentActivity_Processing", "notebooks/PreprocessingDemo", "notebooks/RuleBasedNLP", "notebooks/WorkOrderProcessing", "notebooks/Workflow_Demo", "notebooks/abbreviationHandlerDemo", "notebooks/alias_demo", "notebooks/index", "notebooks/nlp", "notebooks/nlp_custom_pipes", "notebooks/numerizerPreprocessing", "notebooks/test_synset_similarity", "notebooks/textacyPreprocessingMethods", "support"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["autoapi/index.rst", "autoapi/src/dackar/config/index.rst", "autoapi/src/dackar/index.rst", "autoapi/src/dackar/knowledge_graph/index.rst", "autoapi/src/dackar/pipelines/ConjectureEntity/index.rst", "autoapi/src/dackar/pipelines/CustomPipelineComponents/index.rst", "autoapi/src/dackar/pipelines/EmergentActivityEntity/index.rst", "autoapi/src/dackar/pipelines/GeneralEntity/index.rst", "autoapi/src/dackar/pipelines/LocationEntity/index.rst", "autoapi/src/dackar/pipelines/PhraseEntityMatcher/index.rst", "autoapi/src/dackar/pipelines/SimpleEntityMatcher/index.rst", "autoapi/src/dackar/pipelines/TemporalAttributeEntity/index.rst", "autoapi/src/dackar/pipelines/TemporalEntity/index.rst", "autoapi/src/dackar/pipelines/TemporalRelationEntity/index.rst", "autoapi/src/dackar/pipelines/UnitEntity/index.rst", "autoapi/src/dackar/pipelines/index.rst", "autoapi/src/dackar/similarity/SentenceSimilarity/index.rst", "autoapi/src/dackar/similarity/index.rst", "autoapi/src/dackar/similarity/simUtils/index.rst", "autoapi/src/dackar/similarity/synsetUtils/index.rst", "autoapi/src/dackar/text_processing/Abbreviation/index.rst", "autoapi/src/dackar/text_processing/Preprocessing/index.rst", "autoapi/src/dackar/text_processing/index.rst", "autoapi/src/dackar/utils/index.rst", "autoapi/src/dackar/utils/mbse/LMLparser/index.rst", "autoapi/src/dackar/utils/mbse/index.rst", "autoapi/src/dackar/utils/nlp/CreatePatterns/index.rst", "autoapi/src/dackar/utils/nlp/index.rst", "autoapi/src/dackar/utils/nlp/nlp_utils/index.rst", "autoapi/src/dackar/utils/num/index.rst", "autoapi/src/dackar/utils/opm/OPLparser/index.rst", "autoapi/src/dackar/utils/opm/index.rst", "autoapi/src/dackar/utils/utils/index.rst", "autoapi/src/dackar/workflows/OperatorShiftLogsProcessing/index.rst", "autoapi/src/dackar/workflows/RuleBasedMatcher/index.rst", "autoapi/src/dackar/workflows/WorkOrderProcessing/index.rst", "autoapi/src/dackar/workflows/WorkflowBase/index.rst", "autoapi/src/dackar/workflows/index.rst", "autoapi/src/index.rst", "contributors.rst", "index.rst", "install.rst", "install_spacy3.5.rst", "notebooks/EmergentActivity_Processing.ipynb", "notebooks/PreprocessingDemo.ipynb", "notebooks/RuleBasedNLP.ipynb", "notebooks/WorkOrderProcessing.ipynb", "notebooks/Workflow_Demo.ipynb", "notebooks/abbreviationHandlerDemo.ipynb", "notebooks/alias_demo.ipynb", "notebooks/index.rst", "notebooks/nlp.ipynb", "notebooks/nlp_custom_pipes.ipynb", "notebooks/numerizerPreprocessing.ipynb", "notebooks/test_synset_similarity.ipynb", "notebooks/textacyPreprocessingMethods.ipynb", "support.rst"], "indexentries": {"_ (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "id0", false], [5, "id1", false], [5, "src.dackar.pipelines.CustomPipelineComponents._", false]], "__call__() (src.dackar.pipelines.conjectureentity.conjectureentity method)": [[4, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity.__call__", false]], "__call__() (src.dackar.pipelines.emergentactivityentity.emergentactivity method)": [[6, "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity.__call__", false]], "__call__() (src.dackar.pipelines.generalentity.generalentity method)": [[7, "src.dackar.pipelines.GeneralEntity.GeneralEntity.__call__", false]], "__call__() (src.dackar.pipelines.locationentity.locationentity method)": [[8, "src.dackar.pipelines.LocationEntity.LocationEntity.__call__", false]], "__call__() (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher method)": [[9, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.__call__", false]], "__call__() (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher method)": [[10, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.__call__", false]], "__call__() (src.dackar.pipelines.temporalattributeentity.temporalattributeentity method)": [[11, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity.__call__", false]], "__call__() (src.dackar.pipelines.temporalentity.temporal method)": [[12, "src.dackar.pipelines.TemporalEntity.Temporal.__call__", false]], "__call__() (src.dackar.pipelines.temporalrelationentity.temporalrelationentity method)": [[13, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity.__call__", false]], "__call__() (src.dackar.pipelines.unitentity.unitentity method)": [[14, "src.dackar.pipelines.UnitEntity.UnitEntity.__call__", false]], "__call__() (src.dackar.text_processing.preprocessing.preprocessing method)": [[21, "src.dackar.text_processing.Preprocessing.Preprocessing.__call__", false]], "__call__() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.__call__", false]], "__version__ (in module src.dackar)": [[2, "src.dackar.__version__", false]], "_allrelpairs (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._allRelPairs", false]], "_allrelpairs (src.dackar.workflows.workorderprocessing.workorderprocessing attribute)": [[35, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing._allRelPairs", false]], "_causalfile (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalFile", false]], "_causalkeywordid (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalKeywordID", false]], "_causalkeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalKeywords", false]], "_causalnames (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalNames", false]], "_causalpos (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalPOS", false]], "_causalsentsnoents (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalSentsNoEnts", false]], "_causalsentsoneent (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._causalSentsOneEnt", false]], "_conjecturefile (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._conjectureFile", false]], "_conjecturekeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._conjectureKeywords", false]], "_coref (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._coref", false]], "_corefavail (in module src.dackar.workflows.workflowbase)": [[36, "src.dackar.workflows.WorkflowBase._corefAvail", false]], "_doc (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._doc", false]], "_enths (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._entHS", false]], "_entid (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._entID", false]], "_entitylabels (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._entityLabels", false]], "_entityruler (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._entityRuler", false]], "_entityrulermatches (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._entityRulerMatches", false]], "_entstatus (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._entStatus", false]], "_extractedcausals (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._extractedCausals", false]], "_extractedinfonames (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._extractedInfoNames", false]], "_matchedsents (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._matchedSents", false]], "_matchedsentsforvis (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._matchedSentsForVis", false]], "_objlist (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._objList", false]], "_rawcausallist (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._rawCausalList", false]], "_relationnames (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._relationNames", false]], "_relationnames (src.dackar.workflows.workorderprocessing.workorderprocessing attribute)": [[35, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing._relationNames", false]], "_screen (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._screen", false]], "_statusfile (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._statusFile", false]], "_statuskeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._statusKeywords", false]], "_subjlist (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs attribute)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs._subjList", false]], "_textprocess (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._textProcess", false]], "_updatecausalkeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._updateCausalKeywords", false]], "_updatestatuskeywords (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._updateStatusKeywords", false]], "_visualizematchedsents (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase._visualizeMatchedSents", false]], "abbrdict (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[21, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrDict", false]], "abbreviation (class in src.dackar.text_processing.abbreviation)": [[20, "src.dackar.text_processing.Abbreviation.Abbreviation", false]], "abbreviationsub() (src.dackar.text_processing.abbreviation.abbreviation method)": [[20, "src.dackar.text_processing.Abbreviation.Abbreviation.abbreviationSub", false]], "abbrexpander (class in src.dackar.text_processing.preprocessing)": [[21, "src.dackar.text_processing.Preprocessing.AbbrExpander", false]], "abbrlist (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[21, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrList", false]], "abbrprocess() (src.dackar.text_processing.preprocessing.abbrexpander method)": [[21, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrProcess", false]], "abbrtype (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[21, "src.dackar.text_processing.Preprocessing.AbbrExpander.abbrType", false]], "acronyms (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.acronyms", false]], "acronyms (src.dackar.utils.opm.oplparser.opmobject attribute)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.acronyms", false]], "addentitypattern() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.addEntityPattern", false]], "addkeywords() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.addKeywords", false]], "addkeywords() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[35, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.addKeywords", false]], "addwordstodictionary() (src.dackar.text_processing.preprocessing.spellchecker method)": [[21, "src.dackar.text_processing.Preprocessing.SpellChecker.addWordsToDictionary", false]], "aliaslookup (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.aliasLookup", false]], "aliasresolver() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.aliasResolver", false]], "anaphorcoref() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.anaphorCoref", false]], "anaphorentcoref() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.anaphorEntCoref", false]], "asspan (src.dackar.pipelines.emergentactivityentity.emergentactivity attribute)": [[6, "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity.asSpan", false]], "asspan (src.dackar.pipelines.generalentity.generalentity attribute)": [[7, "src.dackar.pipelines.GeneralEntity.GeneralEntity.asSpan", false]], "asspan (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher attribute)": [[9, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.asSpan", false]], "asspan (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher attribute)": [[10, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.asSpan", false]], "asspan (src.dackar.pipelines.temporalentity.temporal attribute)": [[12, "src.dackar.pipelines.TemporalEntity.Temporal.asSpan", false]], "asspan (src.dackar.pipelines.unitentity.unitentity attribute)": [[14, "src.dackar.pipelines.UnitEntity.UnitEntity.asSpan", false]], "bfs() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.bfs", false]], "brownic (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.brownIc", false]], "browninfo() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.brownInfo", false]], "checkacronym() (in module src.dackar.utils.opm.oplparser)": [[30, "src.dackar.utils.opm.OPLparser.checkAcronym", false]], "checker (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[21, "src.dackar.text_processing.Preprocessing.AbbrExpander.checker", false]], "checker (src.dackar.text_processing.preprocessing.spellchecker attribute)": [[21, "src.dackar.text_processing.Preprocessing.SpellChecker.checker", false]], "checkertype (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[21, "src.dackar.text_processing.Preprocessing.AbbrExpander.checkerType", false]], "cleanedgraph() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.cleanedGraph", false]], "collectcauseeffectsents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.collectCauseEffectSents", false]], "collectextactedcausals() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.collectExtactedCausals", false]], "collectsents() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.collectSents", false]], "configfilename (in module src.dackar.config)": [[1, "src.dackar.config.configFileName", false]], "conjectureentity (class in src.dackar.pipelines.conjectureentity)": [[4, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity", false]], "connetgraph() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.connetGraph", false]], "constructsemanticvector() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.constructSemanticVector", false]], "constructsemanticvector() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.constructSemanticVector", false]], "constructsemanticvectorusingdisambiguatedsynsets() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.constructSemanticVectorUsingDisambiguatedSynsets", false]], "constructsimilarityvectorpawarmagomethod() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.constructSimilarityVectorPawarMagoMethod", false]], "constructsynsetordervector() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.constructSynsetOrderVector", false]], "constructwordordervector() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.constructWordOrderVector", false]], "content() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.content", false]], "convertsentstosynsets() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.convertSentsToSynsets", false]], "convertsentstosynsetswithdisambiguation() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.convertSentsToSynsetsWithDisambiguation", false]], "converttosynsets() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.convertToSynsets", false]], "correct() (src.dackar.text_processing.preprocessing.spellchecker method)": [[21, "src.dackar.text_processing.Preprocessing.SpellChecker.correct", false]], "create_conjecture_component() (in module src.dackar.pipelines.conjectureentity)": [[4, "src.dackar.pipelines.ConjectureEntity.create_conjecture_component", false]], "create_emergent_activity() (in module src.dackar.pipelines.emergentactivityentity)": [[6, "src.dackar.pipelines.EmergentActivityEntity.create_emergent_activity", false]], "create_general_component() (in module src.dackar.pipelines.generalentity)": [[7, "src.dackar.pipelines.GeneralEntity.create_general_component", false]], "create_location_component() (in module src.dackar.pipelines.locationentity)": [[8, "src.dackar.pipelines.LocationEntity.create_location_component", false]], "create_phrase_matcher_component() (in module src.dackar.pipelines.phraseentitymatcher)": [[9, "src.dackar.pipelines.PhraseEntityMatcher.create_phrase_matcher_component", false]], "create_simple_matcher_component() (in module src.dackar.pipelines.simpleentitymatcher)": [[10, "src.dackar.pipelines.SimpleEntityMatcher.create_simple_matcher_component", false]], "create_temporal_attribute_component() (in module src.dackar.pipelines.temporalattributeentity)": [[11, "src.dackar.pipelines.TemporalAttributeEntity.create_temporal_attribute_component", false]], "create_temporal_relation_component() (in module src.dackar.pipelines.temporalrelationentity)": [[13, "src.dackar.pipelines.TemporalRelationEntity.create_temporal_relation_component", false]], "create_unit_component() (in module src.dackar.pipelines.unitentity)": [[14, "src.dackar.pipelines.UnitEntity.create_unit_component", false]], "createpatterns (class in src.dackar.utils.nlp.createpatterns)": [[26, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns", false]], "createtextacynormalizefunction() (src.dackar.text_processing.preprocessing.preprocessing method)": [[21, "src.dackar.text_processing.Preprocessing.Preprocessing.createTextacyNormalizeFunction", false]], "createtextacyremovefunction() (src.dackar.text_processing.preprocessing.preprocessing method)": [[21, "src.dackar.text_processing.Preprocessing.Preprocessing.createTextacyRemoveFunction", false]], "createtextacyreplacefunction() (src.dackar.text_processing.preprocessing.preprocessing method)": [[21, "src.dackar.text_processing.Preprocessing.Preprocessing.createTextacyReplaceFunction", false]], "customlabel (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.customLabel", false]], "customtokenizer() (in module src.dackar.utils.nlp.nlp_utils)": [[28, "src.dackar.utils.nlp.nlp_utils.customTokenizer", false]], "dataframeentities (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.dataframeEntities", false]], "dataframerelations (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.dataframeRelations", false]], "datepattern (src.dackar.pipelines.temporalentity.temporal attribute)": [[12, "src.dackar.pipelines.TemporalEntity.Temporal.datePattern", false]], "df (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.df", false]], "disambiguationmethod (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.disambiguationMethod", false]], "displayner() (in module src.dackar.utils.nlp.nlp_utils)": [[28, "src.dackar.utils.nlp.nlp_utils.displayNER", false]], "dumpnodesedgesfiles() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.dumpNodesEdgesFiles", false]], "edge_colors (src.dackar.utils.opm.oplparser.opmobject attribute)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.edge_colors", false]], "embentities (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.embEntities", false]], "emergentactivity (class in src.dackar.pipelines.emergentactivityentity)": [[6, "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity", false]], "entities (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.entities", false]], "entities (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[26, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.entities", false]], "entityruler (src.dackar.pipelines.conjectureentity.conjectureentity attribute)": [[4, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.generalentity.generalentity attribute)": [[7, "src.dackar.pipelines.GeneralEntity.GeneralEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.locationentity.locationentity attribute)": [[8, "src.dackar.pipelines.LocationEntity.LocationEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.temporalattributeentity.temporalattributeentity attribute)": [[11, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity.entityRuler", false]], "entityruler (src.dackar.pipelines.temporalrelationentity.temporalrelationentity attribute)": [[13, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity.entityRuler", false]], "entityruler (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.entityRuler", false]], "expandentities() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.expandEntities", false]], "extendent() (in module src.dackar.utils.nlp.nlp_utils)": [[28, "src.dackar.utils.nlp.nlp_utils.extendEnt", false]], "extract() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.extract", false]], "extractcausalreldep() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractCausalRelDep", false]], "extracthealthstatus() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.extractHealthStatus", false]], "extracthealthstatus() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[35, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.extractHealthStatus", false]], "extractinformation() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractInformation", false]], "extractinformation() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.extractInformation", false]], "extractinformation() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.extractInformation", false]], "extractinformation() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[35, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.extractInformation", false]], "extractlemma() (in module src.dackar.utils.nlp.nlp_utils)": [[28, "src.dackar.utils.nlp.nlp_utils.extractLemma", false]], "extractlemma() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.extractLemma", false]], "extractreldep() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractRelDep", false]], "extractreldep() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.extractRelDep", false]], "extractreldep() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[35, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.extractRelDep", false]], "extractstatus() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.extractStatus", false]], "filename (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.filename", false]], "filename (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[26, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.filename", false]], "filename (src.dackar.utils.opm.oplparser.opmobject attribute)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.filename", false]], "find_temporal() (in module src.dackar.pipelines.temporalentity)": [[12, "src.dackar.pipelines.TemporalEntity.find_temporal", false]], "findhealthstatus() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.findHealthStatus", false]], "findhealthstatus() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.findHealthStatus", false]], "findleftsubj() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.findLeftSubj", false]], "findobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.findObj", false]], "findoptimaloption() (src.dackar.text_processing.preprocessing.spellchecker method)": [[21, "src.dackar.text_processing.Preprocessing.SpellChecker.findOptimalOption", false]], "findrightkeyword() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.findRightKeyword", false]], "findrightobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.findRightObj", false]], "findsubj() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.findSubj", false]], "findverb() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.findVerb", false]], "functionlist (src.dackar.text_processing.preprocessing.preprocessing attribute)": [[21, "src.dackar.text_processing.Preprocessing.Preprocessing.functionList", false]], "generalentity (class in src.dackar.pipelines.generalentity)": [[7, "src.dackar.pipelines.GeneralEntity.GeneralEntity", false]], "generateabbrdict() (src.dackar.text_processing.preprocessing.spellchecker method)": [[21, "src.dackar.text_processing.Preprocessing.SpellChecker.generateAbbrDict", false]], "generatepattern() (in module src.dackar.utils.nlp.nlp_utils)": [[28, "src.dackar.utils.nlp.nlp_utils.generatePattern", false]], "generatepatternlist() (in module src.dackar.utils.nlp.nlp_utils)": [[28, "src.dackar.utils.nlp.nlp_utils.generatePatternList", false]], "generatepatterns() (src.dackar.utils.nlp.createpatterns.createpatterns method)": [[26, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.generatePatterns", false]], "getabbreviation() (src.dackar.text_processing.abbreviation.abbreviation method)": [[20, "src.dackar.text_processing.Abbreviation.Abbreviation.getAbbreviation", false]], "getamod() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getAmod", false]], "getamodonly() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getAmodOnly", false]], "getcompoundonly() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getCompoundOnly", false]], "getconjuncts() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getConjuncts", false]], "getcustoments() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getCustomEnts", false]], "getentid() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.getEntID", false]], "gethealthstatusforobj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getHealthStatusForObj", false]], "gethealthstatusforpobj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getHealthStatusForPobj", false]], "gethealthstatusforsubj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getHealthStatusForSubj", false]], "getindex() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getIndex", false]], "getkeywords() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getKeywords", false]], "getleftsscents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getLeftSSCEnts", false]], "getmisspelledwords() (src.dackar.text_processing.preprocessing.spellchecker method)": [[21, "src.dackar.text_processing.Preprocessing.SpellChecker.getMisspelledWords", false]], "getnbor() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getNbor", false]], "getonlywords() (in module src.dackar.utils.utils)": [[32, "src.dackar.utils.utils.getOnlyWords", false]], "getpatterns() (src.dackar.utils.nlp.createpatterns.createpatterns method)": [[26, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.getPatterns", false]], "getphrase() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getPhrase", false]], "getrightsscents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getRightSSCEnts", false]], "getshortacronym() (in module src.dackar.utils.utils)": [[32, "src.dackar.utils.utils.getShortAcronym", false]], "getsscent() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.getSSCEnt", false]], "getstatusforobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getStatusForObj", false]], "getstatusforpobj() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getStatusForPobj", false]], "getstatusforsubj() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.getStatusForSubj", false]], "handleabbreviations() (src.dackar.text_processing.preprocessing.spellchecker method)": [[21, "src.dackar.text_processing.Preprocessing.SpellChecker.handleAbbreviations", false]], "handleabbreviationsdict() (src.dackar.text_processing.preprocessing.spellchecker method)": [[21, "src.dackar.text_processing.Preprocessing.SpellChecker.handleAbbreviationsDict", false]], "handleinvalidsent() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.handleInvalidSent", false]], "handlevalidsent() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.handleValidSent", false]], "identifybestsimilarsynsetfromsynsets() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.identifyBestSimilarSynsetFromSynsets", false]], "identifybestsimilarsynsetpair() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.identifyBestSimilarSynsetPair", false]], "identifybestsimilarwordfromwordset() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.identifyBestSimilarWordFromWordSet", false]], "identifybestsynset() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.identifyBestSynset", false]], "identifycauseeffectforattr() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.identifyCauseEffectForAttr", false]], "identifycauseeffectforclausemodifier() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.identifyCauseEffectForClauseModifier", false]], "identifycauseeffectfornsuj() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.identifyCauseEffectForNsuj", false]], "identifynounandverbforcomparison() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.identifyNounAndVerbForComparison", false]], "initcoref() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.initCoref", false]], "isconjecture() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.isConjecture", false]], "isnegation() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.isNegation", false]], "ispassive() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.isPassive", false]], "issubelement() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.isSubElement", false]], "issubelements() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.isSubElements", false]], "isvalidcausalents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.isValidCausalEnts", false]], "isvalidcausalents() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.isValidCausalEnts", false]], "isvalidkeyword() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.isValidKeyword", false]], "label (src.dackar.pipelines.unitentity.unitentity attribute)": [[14, "src.dackar.pipelines.UnitEntity.UnitEntity.label", false]], "label (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[26, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.label", false]], "linkentities (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.linkEntities", false]], "links2opms (src.dackar.utils.opm.oplparser.opmobject attribute)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.links2OPMs", false]], "linktombsemodels (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.linkToMBSEmodels", false]], "listids (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.listIDs", false]], "lmlgraph (src.dackar.utils.mbse.lmlparser.lmlobject attribute)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.LMLgraph", false]], "lmlobject (class in src.dackar.utils.mbse.lmlparser)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject", false]], "lmlparser() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.LMLparser", false]], "locationentity (class in src.dackar.pipelines.locationentity)": [[8, "src.dackar.pipelines.LocationEntity.LocationEntity", false]], "log_format (in module src.dackar.similarity.sentencesimilarity)": [[16, "src.dackar.similarity.SentenceSimilarity.log_format", false]], "logger (in module src.dackar)": [[2, "src.dackar.logger", false]], "logger (in module src.dackar.pipelines.conjectureentity)": [[4, "src.dackar.pipelines.ConjectureEntity.logger", false]], "logger (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.logger", false]], "logger (in module src.dackar.pipelines.emergentactivityentity)": [[6, "src.dackar.pipelines.EmergentActivityEntity.logger", false]], "logger (in module src.dackar.pipelines.generalentity)": [[7, "src.dackar.pipelines.GeneralEntity.logger", false]], "logger (in module src.dackar.pipelines.locationentity)": [[8, "src.dackar.pipelines.LocationEntity.logger", false]], "logger (in module src.dackar.pipelines.phraseentitymatcher)": [[9, "src.dackar.pipelines.PhraseEntityMatcher.logger", false]], "logger (in module src.dackar.pipelines.simpleentitymatcher)": [[10, "src.dackar.pipelines.SimpleEntityMatcher.logger", false]], "logger (in module src.dackar.pipelines.temporalattributeentity)": [[11, "src.dackar.pipelines.TemporalAttributeEntity.logger", false]], "logger (in module src.dackar.pipelines.temporalrelationentity)": [[13, "src.dackar.pipelines.TemporalRelationEntity.logger", false]], "logger (in module src.dackar.pipelines.unitentity)": [[14, "src.dackar.pipelines.UnitEntity.logger", false]], "logger (in module src.dackar.similarity.sentencesimilarity)": [[16, "src.dackar.similarity.SentenceSimilarity.logger", false]], "logger (in module src.dackar.text_processing.abbreviation)": [[20, "src.dackar.text_processing.Abbreviation.logger", false]], "logger (in module src.dackar.utils.nlp.nlp_utils)": [[28, "src.dackar.utils.nlp.nlp_utils.logger", false]], "logger (in module src.dackar.utils.utils)": [[32, "src.dackar.utils.utils.logger", false]], "logger (in module src.dackar.workflows.operatorshiftlogsprocessing)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.logger", false]], "logger (in module src.dackar.workflows.rulebasedmatcher)": [[34, "src.dackar.workflows.RuleBasedMatcher.logger", false]], "logger (in module src.dackar.workflows.workflowbase)": [[36, "src.dackar.workflows.WorkflowBase.logger", false]], "logger (in module src.dackar.workflows.workorderprocessing)": [[35, "src.dackar.workflows.WorkOrderProcessing.logger", false]], "matcher (src.dackar.pipelines.emergentactivityentity.emergentactivity attribute)": [[6, "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity.matcher", false]], "matcher (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher attribute)": [[9, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.matcher", false]], "matcher (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher attribute)": [[10, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.matcher", false]], "matcher (src.dackar.pipelines.temporalentity.temporal attribute)": [[12, "src.dackar.pipelines.TemporalEntity.Temporal.matcher", false]], "matcher (src.dackar.pipelines.unitentity.unitentity attribute)": [[14, "src.dackar.pipelines.UnitEntity.UnitEntity.matcher", false]], "mergeentitieswithsameid() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.mergeEntitiesWithSameID", false]], "mergephrase() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.mergePhrase", false]], "module": [[1, "module-src.dackar.config", false], [2, "module-src.dackar", false], [3, "module-src.dackar.knowledge_graph", false], [4, "module-src.dackar.pipelines.ConjectureEntity", false], [5, "module-src.dackar.pipelines.CustomPipelineComponents", false], [6, "module-src.dackar.pipelines.EmergentActivityEntity", false], [7, "module-src.dackar.pipelines.GeneralEntity", false], [8, "module-src.dackar.pipelines.LocationEntity", false], [9, "module-src.dackar.pipelines.PhraseEntityMatcher", false], [10, "module-src.dackar.pipelines.SimpleEntityMatcher", false], [11, "module-src.dackar.pipelines.TemporalAttributeEntity", false], [12, "module-src.dackar.pipelines.TemporalEntity", false], [13, "module-src.dackar.pipelines.TemporalRelationEntity", false], [14, "module-src.dackar.pipelines.UnitEntity", false], [15, "module-src.dackar.pipelines", false], [16, "module-src.dackar.similarity.SentenceSimilarity", false], [17, "module-src.dackar.similarity", false], [18, "module-src.dackar.similarity.simUtils", false], [19, "module-src.dackar.similarity.synsetUtils", false], [20, "module-src.dackar.text_processing.Abbreviation", false], [21, "module-src.dackar.text_processing.Preprocessing", false], [22, "module-src.dackar.text_processing", false], [23, "module-src.dackar.utils", false], [24, "module-src.dackar.utils.mbse.LMLparser", false], [25, "module-src.dackar.utils.mbse", false], [26, "module-src.dackar.utils.nlp.CreatePatterns", false], [27, "module-src.dackar.utils.nlp", false], [28, "module-src.dackar.utils.nlp.nlp_utils", false], [29, "module-src.dackar.utils.num", false], [30, "module-src.dackar.utils.opm.OPLparser", false], [31, "module-src.dackar.utils.opm", false], [32, "module-src.dackar.utils.utils", false], [33, "module-src.dackar.workflows.OperatorShiftLogsProcessing", false], [34, "module-src.dackar.workflows.RuleBasedMatcher", false], [35, "module-src.dackar.workflows.WorkOrderProcessing", false], [36, "module-src.dackar.workflows.WorkflowBase", false], [37, "module-src.dackar.workflows", false], [38, "module-src", false]], "name (src.dackar.pipelines.conjectureentity.conjectureentity attribute)": [[4, "src.dackar.pipelines.ConjectureEntity.ConjectureEntity.name", false]], "name (src.dackar.pipelines.emergentactivityentity.emergentactivity attribute)": [[6, "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity.name", false]], "name (src.dackar.pipelines.generalentity.generalentity attribute)": [[7, "src.dackar.pipelines.GeneralEntity.GeneralEntity.name", false]], "name (src.dackar.pipelines.locationentity.locationentity attribute)": [[8, "src.dackar.pipelines.LocationEntity.LocationEntity.name", false]], "name (src.dackar.pipelines.phraseentitymatcher.phraseentitymatcher attribute)": [[9, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher.name", false]], "name (src.dackar.pipelines.simpleentitymatcher.simpleentitymatcher attribute)": [[10, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher.name", false]], "name (src.dackar.pipelines.temporalattributeentity.temporalattributeentity attribute)": [[11, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity.name", false]], "name (src.dackar.pipelines.temporalentity.temporal attribute)": [[12, "src.dackar.pipelines.TemporalEntity.Temporal.name", false]], "name (src.dackar.pipelines.temporalrelationentity.temporalrelationentity attribute)": [[13, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity.name", false]], "name (src.dackar.pipelines.unitentity.unitentity attribute)": [[14, "src.dackar.pipelines.UnitEntity.UnitEntity.name", false]], "name (src.dackar.text_processing.abbreviation.abbreviation attribute)": [[20, "src.dackar.text_processing.Abbreviation.Abbreviation.name", false]], "name (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.name", false]], "nlp (src.dackar.pipelines.unitentity.unitentity attribute)": [[14, "src.dackar.pipelines.UnitEntity.UnitEntity.nlp", false]], "nlp (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.nlp", false]], "nlpconfig (in module src.dackar.config)": [[1, "src.dackar.config.nlpConfig", false]], "node_colors (src.dackar.utils.opm.oplparser.opmobject attribute)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.node_colors", false]], "normentities() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.normEntities", false]], "not_acronyms (in module src.dackar.text_processing.abbreviation)": [[20, "src.dackar.text_processing.Abbreviation.not_acronyms", false]], "numerizer (in module src.dackar.text_processing.preprocessing)": [[21, "src.dackar.text_processing.Preprocessing.numerizer", false]], "objectlist (src.dackar.utils.opm.oplparser.opmobject attribute)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.objectList", false]], "operatorshiftlogs (class in src.dackar.workflows.operatorshiftlogsprocessing)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs", false]], "oplentityparser() (src.dackar.utils.opm.oplparser.opmobject method)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.OPLentityParser", false]], "oplparser() (src.dackar.utils.opm.oplparser.opmobject method)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.OPLparser", false]], "opltextparser() (src.dackar.utils.opm.oplparser.opmobject method)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.OPLtextParser", false]], "opmgraph (src.dackar.utils.opm.oplparser.opmobject attribute)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.opmGraph", false]], "opmobject (class in src.dackar.utils.opm.oplparser)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject", false]], "ordinaltonumber (src.dackar.pipelines.temporalentity.temporal attribute)": [[12, "src.dackar.pipelines.TemporalEntity.Temporal.ordinalToNumber", false]], "parseassetentity() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.parseAssetEntity", false]], "parseentitydescription() (in module src.dackar.utils.mbse.lmlparser)": [[24, "src.dackar.utils.mbse.LMLparser.parseEntityDescription", false]], "parselinkentity() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.parseLinkEntity", false]], "path (in module src.dackar.config)": [[1, "src.dackar.config.path", false]], "pathlength() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.pathLength", false]], "patterns (src.dackar.utils.nlp.createpatterns.createpatterns attribute)": [[26, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.patterns", false]], "phraseentitymatcher (class in src.dackar.pipelines.phraseentitymatcher)": [[9, "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher", false]], "pipeline (src.dackar.text_processing.preprocessing.preprocessing attribute)": [[21, "src.dackar.text_processing.Preprocessing.Preprocessing.pipeline", false]], "plotdag() (in module src.dackar.utils.nlp.nlp_utils)": [[28, "src.dackar.utils.nlp.nlp_utils.plotDAG", false]], "preprocess (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[21, "src.dackar.text_processing.Preprocessing.AbbrExpander.preprocess", false]], "preprocessing (class in src.dackar.text_processing.preprocessing)": [[21, "src.dackar.text_processing.Preprocessing.Preprocessing", false]], "preprocessordefaultlist (in module src.dackar.text_processing.preprocessing)": [[21, "src.dackar.text_processing.Preprocessing.preprocessorDefaultList", false]], "preprocessordefaultoptions (in module src.dackar.text_processing.preprocessing)": [[21, "src.dackar.text_processing.Preprocessing.preprocessorDefaultOptions", false]], "preprocessorlist (src.dackar.text_processing.preprocessing.abbrexpander attribute)": [[21, "src.dackar.text_processing.Preprocessing.AbbrExpander.preprocessorList", false]], "preprocessornames (src.dackar.text_processing.preprocessing.preprocessing attribute)": [[21, "src.dackar.text_processing.Preprocessing.Preprocessing.preprocessorNames", false]], "printdeptree() (in module src.dackar.utils.nlp.nlp_utils)": [[28, "src.dackar.utils.nlp.nlp_utils.printDepTree", false]], "printonfile() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.printOnFile", false]], "processlist (src.dackar.utils.opm.oplparser.opmobject attribute)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.processList", false]], "propagateenttype() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.propagateEntType", false]], "pysbdsentenceboundaries() (in module src.dackar.pipelines.custompipelinecomponents)": [[5, "src.dackar.pipelines.CustomPipelineComponents.pysbdSentenceBoundaries", false]], "readfile() (src.dackar.utils.nlp.createpatterns.createpatterns method)": [[26, "src.dackar.utils.nlp.CreatePatterns.CreatePatterns.readFile", false]], "removeacronym() (in module src.dackar.utils.opm.oplparser)": [[30, "src.dackar.utils.opm.OPLparser.removeAcronym", false]], "reset() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.reset", false]], "reset() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.reset", false]], "reset() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.reset", false]], "reset() (src.dackar.workflows.workorderprocessing.workorderprocessing method)": [[35, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing.reset", false]], "resetpipeline() (in module src.dackar.utils.nlp.nlp_utils)": [[28, "src.dackar.utils.nlp.nlp_utils.resetPipeline", false]], "returnacronym() (src.dackar.utils.opm.oplparser.opmobject method)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.returnAcronym", false]], "returnattributelist() (src.dackar.utils.opm.oplparser.opmobject method)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.returnAttributeList", false]], "returnentities() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.returnEntities", false]], "returngraph() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.returnGraph", false]], "returngraph() (src.dackar.utils.opm.oplparser.opmobject method)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.returnGraph", false]], "returnlistids() (src.dackar.utils.mbse.lmlparser.lmlobject method)": [[24, "src.dackar.utils.mbse.LMLparser.LMLobject.returnListIDs", false]], "returnobjectlist() (src.dackar.utils.opm.oplparser.opmobject method)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.returnObjectList", false]], "returnprocesslist() (src.dackar.utils.opm.oplparser.opmobject method)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.returnProcessList", false]], "returnsexternallinks() (src.dackar.utils.opm.oplparser.opmobject method)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.returnsExternalLinks", false]], "rulebasedmatcher (class in src.dackar.workflows.rulebasedmatcher)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher", false]], "scalingdeptheffect() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.scalingDepthEffect", false]], "selectvalidents() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.selectValidEnts", false]], "semanticsimilaritysentences() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.semanticSimilaritySentences", false]], "semanticsimilaritysynsetlist() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.semanticSimilaritySynsetList", false]], "semanticsimilaritysynsets() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.semanticSimilaritySynsets", false]], "semanticsimilarityusingdisambiguatedsynsets() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.semanticSimilarityUsingDisambiguatedSynsets", false]], "semanticsimilaritywords() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.semanticSimilarityWords", false]], "sentences (src.dackar.utils.opm.oplparser.opmobject attribute)": [[30, "src.dackar.utils.opm.OPLparser.OPMobject.sentences", false]], "sentencesensedisambiguation() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.sentenceSenseDisambiguation", false]], "sentencesensedisambiguationpywsd() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.sentenceSenseDisambiguationPyWSD", false]], "sentencesimialritybestsense() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.sentenceSimialrityBestSense", false]], "sentencesimilarity (class in src.dackar.similarity.sentencesimilarity)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity", false]], "sentencesimilarity() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.sentenceSimilarity", false]], "sentencesimilarity() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.sentenceSimilarity", false]], "sentencesimilaritypawarmagomethod() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.sentenceSimilarityPawarMagoMethod", false]], "sentencesimilaritywithdisambiguation() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.sentenceSimilarityWithDisambiguation", false]], "setparameters() (src.dackar.similarity.sentencesimilarity.sentencesimilarity method)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.setParameters", false]], "similaritymethod (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.similarityMethod", false]], "simpleentitymatcher (class in src.dackar.pipelines.simpleentitymatcher)": [[10, "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher", false]], "spellchecker (class in src.dackar.text_processing.preprocessing)": [[21, "src.dackar.text_processing.Preprocessing.SpellChecker", false]], "splitentsfollowingnouncausal() (src.dackar.workflows.rulebasedmatcher.rulebasedmatcher method)": [[34, "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher.splitEntsFollowingNounCausal", false]], "src": [[38, "module-src", false]], "src.dackar": [[2, "module-src.dackar", false]], "src.dackar.config": [[1, "module-src.dackar.config", false]], "src.dackar.knowledge_graph": [[3, "module-src.dackar.knowledge_graph", false]], "src.dackar.pipelines": [[15, "module-src.dackar.pipelines", false]], "src.dackar.pipelines.conjectureentity": [[4, "module-src.dackar.pipelines.ConjectureEntity", false]], "src.dackar.pipelines.custompipelinecomponents": [[5, "module-src.dackar.pipelines.CustomPipelineComponents", false]], "src.dackar.pipelines.emergentactivityentity": [[6, "module-src.dackar.pipelines.EmergentActivityEntity", false]], "src.dackar.pipelines.generalentity": [[7, "module-src.dackar.pipelines.GeneralEntity", false]], "src.dackar.pipelines.locationentity": [[8, "module-src.dackar.pipelines.LocationEntity", false]], "src.dackar.pipelines.phraseentitymatcher": [[9, "module-src.dackar.pipelines.PhraseEntityMatcher", false]], "src.dackar.pipelines.simpleentitymatcher": [[10, "module-src.dackar.pipelines.SimpleEntityMatcher", false]], "src.dackar.pipelines.temporalattributeentity": [[11, "module-src.dackar.pipelines.TemporalAttributeEntity", false]], "src.dackar.pipelines.temporalentity": [[12, "module-src.dackar.pipelines.TemporalEntity", false]], "src.dackar.pipelines.temporalrelationentity": [[13, "module-src.dackar.pipelines.TemporalRelationEntity", false]], "src.dackar.pipelines.unitentity": [[14, "module-src.dackar.pipelines.UnitEntity", false]], "src.dackar.similarity": [[17, "module-src.dackar.similarity", false]], "src.dackar.similarity.sentencesimilarity": [[16, "module-src.dackar.similarity.SentenceSimilarity", false]], "src.dackar.similarity.simutils": [[18, "module-src.dackar.similarity.simUtils", false]], "src.dackar.similarity.synsetutils": [[19, "module-src.dackar.similarity.synsetUtils", false]], "src.dackar.text_processing": [[22, "module-src.dackar.text_processing", false]], "src.dackar.text_processing.abbreviation": [[20, "module-src.dackar.text_processing.Abbreviation", false]], "src.dackar.text_processing.preprocessing": [[21, "module-src.dackar.text_processing.Preprocessing", false]], "src.dackar.utils": [[23, "module-src.dackar.utils", false]], "src.dackar.utils.mbse": [[25, "module-src.dackar.utils.mbse", false]], "src.dackar.utils.mbse.lmlparser": [[24, "module-src.dackar.utils.mbse.LMLparser", false]], "src.dackar.utils.nlp": [[27, "module-src.dackar.utils.nlp", false]], "src.dackar.utils.nlp.createpatterns": [[26, "module-src.dackar.utils.nlp.CreatePatterns", false]], "src.dackar.utils.nlp.nlp_utils": [[28, "module-src.dackar.utils.nlp.nlp_utils", false]], "src.dackar.utils.num": [[29, "module-src.dackar.utils.num", false]], "src.dackar.utils.opm": [[31, "module-src.dackar.utils.opm", false]], "src.dackar.utils.opm.oplparser": [[30, "module-src.dackar.utils.opm.OPLparser", false]], "src.dackar.utils.utils": [[32, "module-src.dackar.utils.utils", false]], "src.dackar.workflows": [[37, "module-src.dackar.workflows", false]], "src.dackar.workflows.operatorshiftlogsprocessing": [[33, "module-src.dackar.workflows.OperatorShiftLogsProcessing", false]], "src.dackar.workflows.rulebasedmatcher": [[34, "module-src.dackar.workflows.RuleBasedMatcher", false]], "src.dackar.workflows.workflowbase": [[36, "module-src.dackar.workflows.WorkflowBase", false]], "src.dackar.workflows.workorderprocessing": [[35, "module-src.dackar.workflows.WorkOrderProcessing", false]], "synsetlistsimilarity() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.synsetListSimilarity", false]], "synsetssimilarity() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.synsetsSimilarity", false]], "temporal (class in src.dackar.pipelines.temporalentity)": [[12, "src.dackar.pipelines.TemporalEntity.Temporal", false]], "temporalattributeentity (class in src.dackar.pipelines.temporalattributeentity)": [[11, "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity", false]], "temporalrelationentity (class in src.dackar.pipelines.temporalrelationentity)": [[13, "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity", false]], "textacynormalize (in module src.dackar.text_processing.preprocessing)": [[21, "src.dackar.text_processing.Preprocessing.textacyNormalize", false]], "textacyremove (in module src.dackar.text_processing.preprocessing)": [[21, "src.dackar.text_processing.Preprocessing.textacyRemove", false]], "textacyreplace (in module src.dackar.text_processing.preprocessing)": [[21, "src.dackar.text_processing.Preprocessing.textacyReplace", false]], "textprocess() (src.dackar.workflows.operatorshiftlogsprocessing.operatorshiftlogs method)": [[33, "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs.textProcess", false]], "textprocess() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.textProcess", false]], "type (src.dackar.text_processing.abbreviation.abbreviation attribute)": [[20, "src.dackar.text_processing.Abbreviation.Abbreviation.type", false]], "type (src.dackar.workflows.workflowbase.workflowbase attribute)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.type", false]], "unitentity (class in src.dackar.pipelines.unitentity)": [[14, "src.dackar.pipelines.UnitEntity.UnitEntity", false]], "updateabbreviation() (src.dackar.text_processing.abbreviation.abbreviation method)": [[20, "src.dackar.text_processing.Abbreviation.Abbreviation.updateAbbreviation", false]], "validdisambiguation (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.validDisambiguation", false]], "validsent() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.validSent", false]], "validsimilarity (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.validSimilarity", false]], "ver (in module src.dackar.workflows.workflowbase)": [[36, "src.dackar.workflows.WorkflowBase.ver", false]], "visualize() (src.dackar.workflows.workflowbase.workflowbase method)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase.visualize", false]], "wordnetsimmethod (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.wordnetSimMethod", false]], "wordorder (src.dackar.similarity.sentencesimilarity.sentencesimilarity attribute)": [[16, "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity.wordOrder", false]], "wordordersimilaritysentences() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.wordOrderSimilaritySentences", false]], "wordordersimilaritysynsetlist() (in module src.dackar.similarity.synsetutils)": [[19, "src.dackar.similarity.synsetUtils.wordOrderSimilaritySynsetList", false]], "wordsensedisambiguation() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.wordSenseDisambiguation", false]], "wordssimilarity() (in module src.dackar.similarity.simutils)": [[18, "src.dackar.similarity.simUtils.wordsSimilarity", false]], "workflowbase (class in src.dackar.workflows.workflowbase)": [[36, "src.dackar.workflows.WorkflowBase.WorkflowBase", false]], "workorderprocessing (class in src.dackar.workflows.workorderprocessing)": [[35, "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing", false]]}, "objects": {"": [[38, 0, 0, "-", "src"]], "src": [[2, 0, 0, "-", "dackar"]], "src.dackar": [[2, 1, 1, "", "__version__"], [1, 0, 0, "-", "config"], [3, 0, 0, "-", "knowledge_graph"], [2, 1, 1, "", "logger"], [15, 0, 0, "-", "pipelines"], [17, 0, 0, "-", "similarity"], [22, 0, 0, "-", "text_processing"], [23, 0, 0, "-", "utils"], [37, 0, 0, "-", "workflows"]], "src.dackar.config": [[1, 1, 1, "", "configFileName"], [1, 1, 1, "", "nlpConfig"], [1, 1, 1, "", "path"]], "src.dackar.pipelines": [[4, 0, 0, "-", "ConjectureEntity"], [5, 0, 0, "-", "CustomPipelineComponents"], [6, 0, 0, "-", "EmergentActivityEntity"], [7, 0, 0, "-", "GeneralEntity"], [8, 0, 0, "-", "LocationEntity"], [9, 0, 0, "-", "PhraseEntityMatcher"], [10, 0, 0, "-", "SimpleEntityMatcher"], [11, 0, 0, "-", "TemporalAttributeEntity"], [12, 0, 0, "-", "TemporalEntity"], [13, 0, 0, "-", "TemporalRelationEntity"], [14, 0, 0, "-", "UnitEntity"]], "src.dackar.pipelines.ConjectureEntity": [[4, 2, 1, "", "ConjectureEntity"], [4, 5, 1, "", "create_conjecture_component"], [4, 1, 1, "", "logger"]], "src.dackar.pipelines.ConjectureEntity.ConjectureEntity": [[4, 3, 1, "", "__call__"], [4, 4, 1, "", "entityRuler"], [4, 4, 1, "", "name"]], "src.dackar.pipelines.CustomPipelineComponents": [[5, 1, 1, "id1", "_"], [5, 1, 1, "", "aliasLookup"], [5, 5, 1, "", "aliasResolver"], [5, 5, 1, "", "anaphorCoref"], [5, 5, 1, "", "anaphorEntCoref"], [5, 1, 1, "", "customLabel"], [5, 1, 1, "", "df"], [5, 5, 1, "", "expandEntities"], [5, 5, 1, "", "getEntID"], [5, 5, 1, "", "initCoref"], [5, 1, 1, "", "logger"], [5, 5, 1, "", "mergeEntitiesWithSameID"], [5, 5, 1, "", "mergePhrase"], [5, 5, 1, "", "normEntities"], [5, 5, 1, "", "propagateEntType"], [5, 5, 1, "", "pysbdSentenceBoundaries"]], "src.dackar.pipelines.EmergentActivityEntity": [[6, 2, 1, "", "EmergentActivity"], [6, 5, 1, "", "create_emergent_activity"], [6, 1, 1, "", "logger"]], "src.dackar.pipelines.EmergentActivityEntity.EmergentActivity": [[6, 3, 1, "", "__call__"], [6, 4, 1, "", "asSpan"], [6, 4, 1, "", "matcher"], [6, 4, 1, "", "name"]], "src.dackar.pipelines.GeneralEntity": [[7, 2, 1, "", "GeneralEntity"], [7, 5, 1, "", "create_general_component"], [7, 1, 1, "", "logger"]], "src.dackar.pipelines.GeneralEntity.GeneralEntity": [[7, 3, 1, "", "__call__"], [7, 4, 1, "", "asSpan"], [7, 4, 1, "", "entityRuler"], [7, 4, 1, "", "name"]], "src.dackar.pipelines.LocationEntity": [[8, 2, 1, "", "LocationEntity"], [8, 5, 1, "", "create_location_component"], [8, 1, 1, "", "logger"]], "src.dackar.pipelines.LocationEntity.LocationEntity": [[8, 3, 1, "", "__call__"], [8, 4, 1, "", "entityRuler"], [8, 4, 1, "", "name"]], "src.dackar.pipelines.PhraseEntityMatcher": [[9, 2, 1, "", "PhraseEntityMatcher"], [9, 5, 1, "", "create_phrase_matcher_component"], [9, 1, 1, "", "logger"]], "src.dackar.pipelines.PhraseEntityMatcher.PhraseEntityMatcher": [[9, 3, 1, "", "__call__"], [9, 4, 1, "", "asSpan"], [9, 4, 1, "", "matcher"], [9, 4, 1, "", "name"]], "src.dackar.pipelines.SimpleEntityMatcher": [[10, 2, 1, "", "SimpleEntityMatcher"], [10, 5, 1, "", "create_simple_matcher_component"], [10, 1, 1, "", "logger"]], "src.dackar.pipelines.SimpleEntityMatcher.SimpleEntityMatcher": [[10, 3, 1, "", "__call__"], [10, 4, 1, "", "asSpan"], [10, 4, 1, "", "matcher"], [10, 4, 1, "", "name"]], "src.dackar.pipelines.TemporalAttributeEntity": [[11, 2, 1, "", "TemporalAttributeEntity"], [11, 5, 1, "", "create_temporal_attribute_component"], [11, 1, 1, "", "logger"]], "src.dackar.pipelines.TemporalAttributeEntity.TemporalAttributeEntity": [[11, 3, 1, "", "__call__"], [11, 4, 1, "", "entityRuler"], [11, 4, 1, "", "name"]], "src.dackar.pipelines.TemporalEntity": [[12, 2, 1, "", "Temporal"], [12, 5, 1, "", "find_temporal"]], "src.dackar.pipelines.TemporalEntity.Temporal": [[12, 3, 1, "", "__call__"], [12, 4, 1, "", "asSpan"], [12, 4, 1, "", "datePattern"], [12, 4, 1, "", "matcher"], [12, 4, 1, "", "name"], [12, 4, 1, "", "ordinalToNumber"]], "src.dackar.pipelines.TemporalRelationEntity": [[13, 2, 1, "", "TemporalRelationEntity"], [13, 5, 1, "", "create_temporal_relation_component"], [13, 1, 1, "", "logger"]], "src.dackar.pipelines.TemporalRelationEntity.TemporalRelationEntity": [[13, 3, 1, "", "__call__"], [13, 4, 1, "", "entityRuler"], [13, 4, 1, "", "name"]], "src.dackar.pipelines.UnitEntity": [[14, 2, 1, "", "UnitEntity"], [14, 5, 1, "", "create_unit_component"], [14, 1, 1, "", "logger"]], "src.dackar.pipelines.UnitEntity.UnitEntity": [[14, 3, 1, "", "__call__"], [14, 4, 1, "", "asSpan"], [14, 4, 1, "", "label"], [14, 4, 1, "", "matcher"], [14, 4, 1, "", "name"], [14, 4, 1, "", "nlp"]], "src.dackar.similarity": [[16, 0, 0, "-", "SentenceSimilarity"], [18, 0, 0, "-", "simUtils"], [19, 0, 0, "-", "synsetUtils"]], "src.dackar.similarity.SentenceSimilarity": [[16, 2, 1, "", "SentenceSimilarity"], [16, 1, 1, "", "log_format"], [16, 1, 1, "", "logger"]], "src.dackar.similarity.SentenceSimilarity.SentenceSimilarity": [[16, 4, 1, "", "brownIc"], [16, 3, 1, "", "constructSimilarityVectorPawarMagoMethod"], [16, 4, 1, "", "disambiguationMethod"], [16, 3, 1, "", "sentenceSimialrityBestSense"], [16, 3, 1, "", "sentenceSimilarity"], [16, 3, 1, "", "sentenceSimilarityPawarMagoMethod"], [16, 3, 1, "", "setParameters"], [16, 4, 1, "", "similarityMethod"], [16, 4, 1, "", "validDisambiguation"], [16, 4, 1, "", "validSimilarity"], [16, 4, 1, "", "wordOrder"], [16, 4, 1, "", "wordnetSimMethod"]], "src.dackar.similarity.simUtils": [[18, 5, 1, "", "brownInfo"], [18, 5, 1, "", "constructSemanticVector"], [18, 5, 1, "", "constructWordOrderVector"], [18, 5, 1, "", "content"], [18, 5, 1, "", "convertSentsToSynsets"], [18, 5, 1, "", "convertSentsToSynsetsWithDisambiguation"], [18, 5, 1, "", "convertToSynsets"], [18, 5, 1, "", "identifyBestSimilarSynsetPair"], [18, 5, 1, "", "identifyBestSimilarWordFromWordSet"], [18, 5, 1, "", "identifyBestSynset"], [18, 5, 1, "", "identifyNounAndVerbForComparison"], [18, 5, 1, "", "semanticSimilaritySentences"], [18, 5, 1, "", "semanticSimilarityWords"], [18, 5, 1, "", "sentenceSenseDisambiguation"], [18, 5, 1, "", "sentenceSenseDisambiguationPyWSD"], [18, 5, 1, "", "sentenceSimilarity"], [18, 5, 1, "", "sentenceSimilarityWithDisambiguation"], [18, 5, 1, "", "wordOrderSimilaritySentences"], [18, 5, 1, "", "wordSenseDisambiguation"], [18, 5, 1, "", "wordsSimilarity"]], "src.dackar.similarity.synsetUtils": [[19, 5, 1, "", "constructSemanticVector"], [19, 5, 1, "", "constructSemanticVectorUsingDisambiguatedSynsets"], [19, 5, 1, "", "constructSynsetOrderVector"], [19, 5, 1, "", "identifyBestSimilarSynsetFromSynsets"], [19, 5, 1, "", "pathLength"], [19, 5, 1, "", "scalingDepthEffect"], [19, 5, 1, "", "semanticSimilaritySynsetList"], [19, 5, 1, "", "semanticSimilaritySynsets"], [19, 5, 1, "", "semanticSimilarityUsingDisambiguatedSynsets"], [19, 5, 1, "", "synsetListSimilarity"], [19, 5, 1, "", "synsetsSimilarity"], [19, 5, 1, "", "wordOrderSimilaritySynsetList"]], "src.dackar.text_processing": [[20, 0, 0, "-", "Abbreviation"], [21, 0, 0, "-", "Preprocessing"]], "src.dackar.text_processing.Abbreviation": [[20, 2, 1, "", "Abbreviation"], [20, 1, 1, "", "logger"], [20, 1, 1, "", "not_acronyms"]], "src.dackar.text_processing.Abbreviation.Abbreviation": [[20, 3, 1, "", "abbreviationSub"], [20, 3, 1, "", "getAbbreviation"], [20, 4, 1, "", "name"], [20, 4, 1, "", "type"], [20, 3, 1, "", "updateAbbreviation"]], "src.dackar.text_processing.Preprocessing": [[21, 2, 1, "", "AbbrExpander"], [21, 2, 1, "", "Preprocessing"], [21, 2, 1, "", "SpellChecker"], [21, 1, 1, "", "numerizer"], [21, 1, 1, "", "preprocessorDefaultList"], [21, 1, 1, "", "preprocessorDefaultOptions"], [21, 1, 1, "", "textacyNormalize"], [21, 1, 1, "", "textacyRemove"], [21, 1, 1, "", "textacyReplace"]], "src.dackar.text_processing.Preprocessing.AbbrExpander": [[21, 4, 1, "", "abbrDict"], [21, 4, 1, "", "abbrList"], [21, 3, 1, "", "abbrProcess"], [21, 4, 1, "", "abbrType"], [21, 4, 1, "", "checker"], [21, 4, 1, "", "checkerType"], [21, 4, 1, "", "preprocess"], [21, 4, 1, "", "preprocessorList"]], "src.dackar.text_processing.Preprocessing.Preprocessing": [[21, 3, 1, "", "__call__"], [21, 3, 1, "", "createTextacyNormalizeFunction"], [21, 3, 1, "", "createTextacyRemoveFunction"], [21, 3, 1, "", "createTextacyReplaceFunction"], [21, 4, 1, "", "functionList"], [21, 4, 1, "", "pipeline"], [21, 4, 1, "", "preprocessorNames"]], "src.dackar.text_processing.Preprocessing.SpellChecker": [[21, 3, 1, "", "addWordsToDictionary"], [21, 4, 1, "", "checker"], [21, 3, 1, "", "correct"], [21, 3, 1, "", "findOptimalOption"], [21, 3, 1, "", "generateAbbrDict"], [21, 3, 1, "", "getMisspelledWords"], [21, 3, 1, "", "handleAbbreviations"], [21, 3, 1, "", "handleAbbreviationsDict"]], "src.dackar.utils": [[25, 0, 0, "-", "mbse"], [27, 0, 0, "-", "nlp"], [29, 0, 0, "-", "num"], [31, 0, 0, "-", "opm"], [32, 0, 0, "-", "utils"]], "src.dackar.utils.mbse": [[24, 0, 0, "-", "LMLparser"]], "src.dackar.utils.mbse.LMLparser": [[24, 2, 1, "", "LMLobject"], [24, 5, 1, "", "parseEntityDescription"]], "src.dackar.utils.mbse.LMLparser.LMLobject": [[24, 4, 1, "", "LMLgraph"], [24, 3, 1, "", "LMLparser"], [24, 4, 1, "", "acronyms"], [24, 3, 1, "", "cleanedGraph"], [24, 3, 1, "", "connetGraph"], [24, 3, 1, "", "dumpNodesEdgesFiles"], [24, 4, 1, "", "embEntities"], [24, 4, 1, "", "entities"], [24, 4, 1, "", "filename"], [24, 4, 1, "", "linkEntities"], [24, 4, 1, "", "linkToMBSEmodels"], [24, 4, 1, "", "listIDs"], [24, 3, 1, "", "parseAssetEntity"], [24, 3, 1, "", "parseLinkEntity"], [24, 3, 1, "", "printOnFile"], [24, 3, 1, "", "returnEntities"], [24, 3, 1, "", "returnGraph"], [24, 3, 1, "", "returnListIDs"]], "src.dackar.utils.nlp": [[26, 0, 0, "-", "CreatePatterns"], [28, 0, 0, "-", "nlp_utils"]], "src.dackar.utils.nlp.CreatePatterns": [[26, 2, 1, "", "CreatePatterns"]], "src.dackar.utils.nlp.CreatePatterns.CreatePatterns": [[26, 4, 1, "", "entities"], [26, 4, 1, "", "filename"], [26, 3, 1, "", "generatePatterns"], [26, 3, 1, "", "getPatterns"], [26, 4, 1, "", "label"], [26, 4, 1, "", "patterns"], [26, 3, 1, "", "readFile"]], "src.dackar.utils.nlp.nlp_utils": [[28, 5, 1, "", "customTokenizer"], [28, 5, 1, "", "displayNER"], [28, 5, 1, "", "extendEnt"], [28, 5, 1, "", "extractLemma"], [28, 5, 1, "", "generatePattern"], [28, 5, 1, "", "generatePatternList"], [28, 1, 1, "", "logger"], [28, 5, 1, "", "plotDAG"], [28, 5, 1, "", "printDepTree"], [28, 5, 1, "", "resetPipeline"]], "src.dackar.utils.opm": [[30, 0, 0, "-", "OPLparser"]], "src.dackar.utils.opm.OPLparser": [[30, 2, 1, "", "OPMobject"], [30, 5, 1, "", "checkAcronym"], [30, 5, 1, "", "removeAcronym"]], "src.dackar.utils.opm.OPLparser.OPMobject": [[30, 3, 1, "", "OPLentityParser"], [30, 3, 1, "", "OPLparser"], [30, 3, 1, "", "OPLtextParser"], [30, 4, 1, "", "acronyms"], [30, 4, 1, "", "edge_colors"], [30, 4, 1, "", "filename"], [30, 4, 1, "", "links2OPMs"], [30, 4, 1, "", "node_colors"], [30, 4, 1, "", "objectList"], [30, 4, 1, "", "opmGraph"], [30, 4, 1, "", "processList"], [30, 3, 1, "", "returnAcronym"], [30, 3, 1, "", "returnAttributeList"], [30, 3, 1, "", "returnGraph"], [30, 3, 1, "", "returnObjectList"], [30, 3, 1, "", "returnProcessList"], [30, 3, 1, "", "returnsExternalLinks"], [30, 4, 1, "", "sentences"]], "src.dackar.utils.utils": [[32, 5, 1, "", "getOnlyWords"], [32, 5, 1, "", "getShortAcronym"], [32, 1, 1, "", "logger"]], "src.dackar.workflows": [[33, 0, 0, "-", "OperatorShiftLogsProcessing"], [34, 0, 0, "-", "RuleBasedMatcher"], [35, 0, 0, "-", "WorkOrderProcessing"], [36, 0, 0, "-", "WorkflowBase"]], "src.dackar.workflows.OperatorShiftLogsProcessing": [[33, 2, 1, "", "OperatorShiftLogs"], [33, 1, 1, "", "logger"]], "src.dackar.workflows.OperatorShiftLogsProcessing.OperatorShiftLogs": [[33, 4, 1, "", "_allRelPairs"], [33, 4, 1, "", "_extractedInfoNames"], [33, 4, 1, "", "_objList"], [33, 4, 1, "", "_relationNames"], [33, 4, 1, "", "_subjList"], [33, 3, 1, "", "extractCausalRelDep"], [33, 3, 1, "", "extractInformation"], [33, 3, 1, "", "extractRelDep"], [33, 3, 1, "", "extractStatus"], [33, 3, 1, "", "handleInvalidSent"], [33, 3, 1, "", "handleValidSent"], [33, 3, 1, "", "isSubElement"], [33, 3, 1, "", "isSubElements"], [33, 3, 1, "", "reset"], [33, 3, 1, "", "textProcess"]], "src.dackar.workflows.RuleBasedMatcher": [[34, 2, 1, "", "RuleBasedMatcher"], [34, 1, 1, "", "logger"]], "src.dackar.workflows.RuleBasedMatcher.RuleBasedMatcher": [[34, 3, 1, "", "collectCauseEffectSents"], [34, 3, 1, "", "collectExtactedCausals"], [34, 3, 1, "", "extractHealthStatus"], [34, 3, 1, "", "extractInformation"], [34, 3, 1, "", "extractRelDep"], [34, 3, 1, "", "findHealthStatus"], [34, 3, 1, "", "getHealthStatusForObj"], [34, 3, 1, "", "getHealthStatusForPobj"], [34, 3, 1, "", "getHealthStatusForSubj"], [34, 3, 1, "", "getLeftSSCEnts"], [34, 3, 1, "", "getRightSSCEnts"], [34, 3, 1, "", "getSSCEnt"], [34, 3, 1, "", "identifyCauseEffectForAttr"], [34, 3, 1, "", "identifyCauseEffectForClauseModifier"], [34, 3, 1, "", "identifyCauseEffectForNsuj"], [34, 3, 1, "", "isValidCausalEnts"], [34, 3, 1, "", "reset"], [34, 3, 1, "", "selectValidEnts"], [34, 3, 1, "", "splitEntsFollowingNounCausal"]], "src.dackar.workflows.WorkOrderProcessing": [[35, 2, 1, "", "WorkOrderProcessing"], [35, 1, 1, "", "logger"]], "src.dackar.workflows.WorkOrderProcessing.WorkOrderProcessing": [[35, 4, 1, "", "_allRelPairs"], [35, 4, 1, "", "_relationNames"], [35, 3, 1, "", "addKeywords"], [35, 3, 1, "", "extractHealthStatus"], [35, 3, 1, "", "extractInformation"], [35, 3, 1, "", "extractRelDep"], [35, 3, 1, "", "reset"]], "src.dackar.workflows.WorkflowBase": [[36, 2, 1, "", "WorkflowBase"], [36, 1, 1, "", "_corefAvail"], [36, 1, 1, "", "logger"], [36, 1, 1, "", "ver"]], "src.dackar.workflows.WorkflowBase.WorkflowBase": [[36, 3, 1, "", "__call__"], [36, 4, 1, "", "_causalFile"], [36, 4, 1, "", "_causalKeywordID"], [36, 4, 1, "", "_causalKeywords"], [36, 4, 1, "", "_causalNames"], [36, 4, 1, "", "_causalPOS"], [36, 4, 1, "", "_causalSentsNoEnts"], [36, 4, 1, "", "_causalSentsOneEnt"], [36, 4, 1, "", "_conjectureFile"], [36, 4, 1, "", "_conjectureKeywords"], [36, 4, 1, "", "_coref"], [36, 4, 1, "", "_doc"], [36, 4, 1, "", "_entHS"], [36, 4, 1, "", "_entID"], [36, 4, 1, "", "_entStatus"], [36, 4, 1, "", "_entityLabels"], [36, 4, 1, "", "_entityRuler"], [36, 4, 1, "", "_entityRulerMatches"], [36, 4, 1, "", "_extractedCausals"], [36, 4, 1, "", "_matchedSents"], [36, 4, 1, "", "_matchedSentsForVis"], [36, 4, 1, "", "_rawCausalList"], [36, 4, 1, "", "_screen"], [36, 4, 1, "", "_statusFile"], [36, 4, 1, "", "_statusKeywords"], [36, 4, 1, "", "_textProcess"], [36, 4, 1, "", "_updateCausalKeywords"], [36, 4, 1, "", "_updateStatusKeywords"], [36, 4, 1, "", "_visualizeMatchedSents"], [36, 3, 1, "", "addEntityPattern"], [36, 3, 1, "", "addKeywords"], [36, 3, 1, "", "bfs"], [36, 3, 1, "", "collectSents"], [36, 4, 1, "", "dataframeEntities"], [36, 4, 1, "", "dataframeRelations"], [36, 4, 1, "", "entityRuler"], [36, 3, 1, "", "extract"], [36, 3, 1, "", "extractInformation"], [36, 3, 1, "", "extractLemma"], [36, 3, 1, "", "findHealthStatus"], [36, 3, 1, "", "findLeftSubj"], [36, 3, 1, "", "findObj"], [36, 3, 1, "", "findRightKeyword"], [36, 3, 1, "", "findRightObj"], [36, 3, 1, "", "findSubj"], [36, 3, 1, "", "findVerb"], [36, 3, 1, "", "getAmod"], [36, 3, 1, "", "getAmodOnly"], [36, 3, 1, "", "getCompoundOnly"], [36, 3, 1, "", "getConjuncts"], [36, 3, 1, "", "getCustomEnts"], [36, 3, 1, "", "getIndex"], [36, 3, 1, "", "getKeywords"], [36, 3, 1, "", "getNbor"], [36, 3, 1, "", "getPhrase"], [36, 3, 1, "", "getStatusForObj"], [36, 3, 1, "", "getStatusForPobj"], [36, 3, 1, "", "getStatusForSubj"], [36, 3, 1, "", "isConjecture"], [36, 3, 1, "", "isNegation"], [36, 3, 1, "", "isPassive"], [36, 3, 1, "", "isValidCausalEnts"], [36, 3, 1, "", "isValidKeyword"], [36, 4, 1, "", "name"], [36, 4, 1, "", "nlp"], [36, 3, 1, "", "reset"], [36, 3, 1, "", "textProcess"], [36, 4, 1, "", "type"], [36, 3, 1, "", "validSent"], [36, 3, 1, "", "visualize"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "terms": {"": [12, 16, 21, 28, 30, 32, 36, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55], "0": [2, 16, 18, 19, 40, 41, 42, 43, 44, 46, 47, 48, 52, 54, 55], "00": [44, 55], "000": [44, 55], "049269914627075195": 44, "05667": 16, "087954759597778": 54, "0x123e4e810": 52, "0x127eb2310": 52, "0x128033470": 52, "0x128033a70": 52, "0x12815f4d0": 52, "0x1282128d0": 52, "0x12a781a90": 52, "0x12e866270": 51, "0x12e867d70": 51, "0x134590ad0": 51, "0x134f8fe60": 51, "0x134f8ff40": 51, "0x13e912890": 51, "0x13e924610": 51, "0x16b0fede0": 49, "0x346dd7110": 49, "0x346dd7a10": 49, "0x375919150": 49, "0x375a63a90": 49, "0x375a89d90": 49, "1": [0, 2, 12, 16, 18, 19, 40, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55], "10": [43, 44, 46, 47, 48, 49, 51, 52, 54, 55], "100": [43, 44, 54, 55], "1000": 54, "1000000001": [44, 53], "100_cur_": [44, 55], "102": 43, "104": 43, "105": 43, "106": 43, "107": 43, "11": [42, 44, 47, 48, 51, 52, 54, 55], "117": 55, "12": [44, 47, 48, 51, 52, 54, 55], "1200": [44, 53], "123": [44, 55], "1234": [44, 55], "123_cur_abc": 55, "123_cur_abc_cur_": [44, 55], "13": [44, 47, 48, 51, 52, 55], "14": [44, 51, 52, 55], "15": [44, 51, 52, 55], "150": [44, 53], "16": [44, 51, 52, 53, 55], "1644735": 18, "17": [44, 51, 52, 53, 55], "18": [44, 51, 52, 53, 55], "1802": 16, "19": [44, 51, 52, 55], "198867082595825": 54, "1a": [44, 48, 51, 52], "1bc": 43, "1efgh": 43, "1pation": [44, 55], "1st": 53, "2": [12, 19, 24, 40, 41, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55], "20": [44, 45, 46, 47, 51, 52, 55], "2000000": 53, "2021": [30, 44, 55], "2022": [5, 21, 28, 34], "2024": [20, 24, 32, 33, 35, 36], "21": [44, 45, 48, 51, 52, 54, 55], "211": 51, "21473": [44, 53], "22": [51, 52], "23": [51, 52, 53], "24": [43, 45, 51, 52, 55], "24hour": 43, "24hr": 43, "25": [51, 52], "26": [42, 51, 52, 55], "27": [51, 52, 55], "28": [51, 52, 55], "29": [51, 52], "2nd": 53, "3": [24, 30, 40, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55], "30": [51, 52, 55], "305": 24, "31": [51, 52], "31713942870949496": 54, "32": [51, 52, 55], "33": [51, 52, 55], "34": [44, 45, 48, 51, 52, 55], "34r": 43, "35": [51, 52], "36": [51, 52], "3693": 43, "37": [51, 52], "377617835998535": 43, "38": [51, 52, 55], "39": [44, 46, 48, 49, 51, 52, 53, 55], "4": [12, 41, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55], "40": [51, 52, 53, 55], "4006917476654053": 44, "41": 51, "42": [44, 51, 53, 55], "4229929447174072": 47, "42nd": 53, "43": 51, "43946127500409304": 54, "44": [51, 55], "4493210315704346": 49, "45": [19, 51], "4567": [44, 55], "46": 51, "462": [44, 53], "465039014816284": 54, "47": 51, "5": [40, 41, 43, 44, 47, 48, 49, 51, 52, 53, 54, 55], "52210619": 24, "53": 55, "555": [44, 55], "5pm": [8, 11], "6": [43, 44, 47, 48, 51, 52, 53, 54, 55], "60": 55, "61": 55, "614": 48, "628759145736694": 48, "630": 48, "6415700912475586": 46, "646389961242676": 45, "65": 55, "66": 55, "67": 55, "69": 55, "7": [43, 44, 47, 48, 51, 52, 53, 54, 55], "7148": 43, "7264": 51, "7309439182281494": 48, "75": [44, 53], "7603": 43, "79": 55, "8": [43, 44, 46, 47, 48, 51, 52, 53, 54, 55], "80": 55, "804": 16, "81": 55, "82": 43, "83": 55, "8340160846710205": 54, "84658": 43, "85": [18, 19], "858644962310791": 48, "89": 55, "8hour": 43, "8hr": 43, "9": [41, 43, 44, 47, 48, 51, 52, 53, 54, 55], "90": 55, "91": 52, "91120": [46, 49], "9171": 43, "94": 52, "95": 52, "96": 52, "97": 52, "979063749313354": 48, "99": [44, 52, 55], "A": [28, 32, 40, 43, 44, 48, 51, 52, 53, 55], "AND": [46, 49], "FOR": 43, "For": [19, 30, 41, 42], "IF": 43, "IN": 51, "If": 51, "In": [21, 52], "It": [8, 11, 24, 44, 55], "No": [44, 46, 49, 51, 53, 55], "That": [44, 55], "The": [5, 6, 9, 10, 12, 13, 14, 16, 18, 19, 40, 43, 44, 45, 51, 52, 53, 54, 55, 56], "These": [44, 55], "To": 51, "_": [5, 43, 46, 49, 51, 52, 53, 54], "__call__": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 36], "__init__": 51, "__main__": [51, 52], "__name__": [49, 52], "__version__": 2, "_allrelpair": [33, 35], "_causalfil": 36, "_causalkeyword": [35, 36], "_causalkeywordid": 36, "_causalnam": 36, "_causalpo": 36, "_causalsentsno": 36, "_causalsentson": 36, "_conjecturefil": 36, "_conjecturekeyword": 36, "_coref": 36, "_corefavail": 36, "_cur_": [44, 55], "_cur_1": [44, 55], "_cur_100": [44, 55], "_doc": 36, "_email_": 55, "_emoji_": [44, 55], "_enth": 36, "_entid": 36, "_entitylabel": 36, "_entityrul": 36, "_entityrulermatch": 36, "_entstatu": [36, 46], "_extractedcaus": [36, 45], "_extractedinfonam": 33, "_matcheds": 36, "_matchedsentsforvi": 36, "_number_": [44, 55], "_objlist": 33, "_phone_": 55, "_rawcausallist": 36, "_relationnam": [33, 35], "_screen": 36, "_statusfil": 36, "_statuskeyword": [35, 36], "_subjlist": 33, "_tag_": [44, 55], "_textprocess": 36, "_updatecausalkeyword": 36, "_updatestatuskeyword": 36, "_url_": [44, 55], "_user_": 55, "_visualizematcheds": 36, "a218": 43, "ab": [43, 48], "abbrdatabas": 21, "abbrdict": [20, 21, 43, 48], "abbrevi": [0, 21, 22, 40, 50], "abbreviationsfilenam": 21, "abbreviationsub": [20, 43, 48], "abbrexp": 48, "abbrexpand": [21, 48], "abbrlist": [21, 48], "abbrprocess": [21, 48], "abbrtyp": 21, "abc": [44, 55], "abcd01d": 43, "abl": 48, "abol": 48, "abolit": 48, "about": 11, "abov": 48, "absol": 48, "absolut": 48, "abspath": [43, 44, 45, 46, 47, 48, 49, 54], "abst": 48, "abstr": 48, "abstract": [36, 48], "accent": [21, 44, 47], "accent_text1": 55, "accent_text2": 55, "accep": 48, "accept": [44, 48], "accom": 48, "accomm": 48, "accomod": 48, "accord": [21, 48], "acm": 51, "acronym": [24, 30, 47], "action": [33, 45], "activ": [41, 42, 48], "actual": [24, 45], "ad": [5, 28, 52], "adapted_lesk": [16, 18], "add": [21, 28, 35, 36, 47, 52], "add_pattern": [51, 52], "add_pip": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 51, 52], "addentitypattern": [36, 45, 46, 47], "addhandl": [49, 52], "addit": [18, 43], "addkeyword": [35, 36], "addwordstodictionari": [21, 44, 47], "adequ": 45, "adj": [51, 52], "adjectiv": 47, "admin": 48, "administr": 48, "adp": [51, 52], "adv": [48, 51, 52], "advanc": 48, "advmod": 51, "affect": [44, 51], "afl": 48, "after": [5, 34, 36, 44, 48, 49, 52], "ag": 45, "again": [44, 55], "against": 48, "agl": 48, "agst": 48, "ah": 48, "aid": 48, "air": 44, "al": [44, 55], "alex": 51, "alia": [5, 33, 46, 49], "alias": [5, 52], "aliaslookup": [5, 52], "aliasresolv": [5, 49, 52], "all": [5, 24, 28, 30, 36, 40, 41, 42, 43, 44, 45, 52, 55], "all_text": 55, "allow": 55, "along": [40, 55], "alpha": 19, "alreadi": [19, 52], "also": [42, 47, 53, 55, 56], "alt": 48, "altern": 48, "although": [45, 51], "alvat": 18, "alwai": 49, "amend": 36, "amer": 48, "american": 48, "amod": [33, 36, 51, 52], "among": 36, "amp": 48, "an": [18, 21, 24, 30, 40, 44, 45, 53, 55, 56], "anal": 48, "analysi": [18, 19, 36, 40, 48], "analyt": 48, "analyz": 21, "anam": 52, "anaphora": [5, 52], "anaphorcoref": [5, 52], "anaphorentcoref": 5, "angl": 48, "ani": [43, 51, 55], "anishvarsha": 16, "ann": 48, "annual": 48, "anomal": [44, 48], "anoth": [16, 18], "answ": 48, "answer": 48, "antici": [44, 55], "anticip": [44, 55], "apach": 40, "app": 48, "appear": [44, 51], "append": [43, 44, 45, 46, 47, 48, 49, 51, 52, 54], "apper": 48, "appli": 44, "appoint": 48, "approach": 40, "approx": 48, "approxim": 48, "appt": 48, "apr": [12, 48], "april": [33, 36, 48], "aql": 48, "ar": [21, 24, 34, 40, 44, 48, 55], "arch": 48, "architectur": 48, "archiv": 40, "arg": [26, 33, 34, 35, 36, 53], "argument": 21, "arnumb": 18, "arr1": 16, "arr2": 16, "arrai": [18, 19], "arrang": [45, 48], "arrgt": 48, "arriv": 48, "artic": 48, "articl": [5, 51, 52], "articul": 48, "arxiv": 16, "as_span": 52, "asap": 48, "ascii": 55, "asctim": [16, 45, 46, 47], "asdv": 45, "ass": 48, "assem": 48, "assembli": 48, "asset": 24, "assi": 48, "assign": [5, 52], "assmbi": 48, "associ": [21, 34, 36], "asspan": [6, 7, 9, 10, 12, 14], "assumpt": [5, 18, 52], "asusto": [44, 55], "asust\u00f3": [44, 55], "ation": 44, "atmo": 48, "atmospher": [45, 48], "attr": [28, 34, 45, 46, 47, 49, 51], "attrib": 48, "attribut": [30, 48, 52], "attribute_rul": [49, 51, 52], "attributerul": [49, 51, 52], "atyp": 52, "aug": [12, 48], "august": 48, "author": [5, 20, 21, 24, 28, 30, 32, 33, 34, 35, 36], "auto": [0, 45, 48, 54], "autoapi": 0, "autocorrect": [21, 40, 41, 42, 47, 50], "automat": [21, 45, 48], "autonotebook": [45, 48, 54], "autoreload": 46, "aux": [48, 51, 52], "auxiliari": 48, "auxpass": [51, 52], "avail": [43, 44, 52, 55, 56], "availcheck": 47, "averag": 48, "averaged_perceptron_tagg": [41, 42], "avg": 48, "avoid": 44, "b": [12, 32, 44, 45, 46, 47, 55], "bar": [44, 55], "base": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 24, 26, 30, 33, 34, 35, 36], "basic": 48, "basicconfig": [45, 46, 47], "batt": 48, "batteri": 48, "bc": 48, "beam": 48, "bear": [44, 48, 51, 52, 54], "beautifulsoup4": [41, 42], "becam": 44, "becaus": [45, 51], "been": [19, 24, 44, 45, 48, 51, 52], "bef": 48, "befor": 48, "behavior": [19, 44], "being": 45, "belong": [34, 36], "best": [18, 19], "bestpair": 18, "bestsyn": [18, 19], "beta": 19, "betw": 48, "between": [16, 18, 19, 24, 28, 48, 55], "beyond": 45, "bf": 36, "bhc": 48, "bia": 53, "bill": 48, "billion": [44, 53], "bird": 53, "bjdewild": 55, "bldg": 48, "bled": 44, "blk": 48, "block": 48, "blue": 28, "blueprint": 48, "board": 48, "bodi": [24, 44, 55], "bof": 48, "bolt": 48, "bom": 48, "bool": [9, 10, 16, 18, 19, 28, 34, 36, 55], "boot": 20, "bord": 48, "border": 48, "bot": [44, 48, 55], "both": [16, 18, 19, 48, 51], "bottom": 48, "bp": 48, "bp_text": 55, "bracket": [21, 24, 43, 44, 47], "bracket_text1": 55, "bracket_text2": 55, "bracket_text3": 55, "bracket_text4": 55, "bracket_text5": 55, "branch": 40, "breadth": [34, 36], "break": 52, "brg": 48, "bronz": 48, "brown": 18, "browndict": 18, "brownic": 16, "browninfo": 18, "brz": 48, "bsc": 48, "btm": 48, "btw": 48, "btwn": 48, "bug": [40, 53], "build": 48, "built": 48, "bullet_point": [21, 44, 47, 55], "burnout": [44, 48, 51, 52], "busi": [44, 51, 55], "bussmann": 45, "butt": 48, "bw": 48, "c": [41, 48], "cabl": 48, "cad": 48, "cage": [6, 9, 10, 12, 14, 44], "cal": 48, "calcul": [16, 19], "calib": [44, 48], "calibr": 48, "calif": 44, "call": [5, 52], "callback": [4, 7, 8, 9, 10, 11, 13, 14], "can": [5, 21, 36, 40, 41, 42, 44, 52, 53, 55], "cannot": [44, 53], "canon": 55, "cansual": [34, 36], "cap": 48, "capac": [45, 48], "car": 53, "carbid": 48, "care": [48, 55], "case": [21, 47], "cat": 48, "catal": 48, "catalogu": 48, "categori": 48, "caus": [6, 9, 10, 12, 14, 34, 36, 44, 45, 48, 51, 52], "causal": [33, 34, 35, 36], "causal_keyword": [45, 47], "causal_keywords_entity_rul": [45, 47], "causaleffect": 47, "causalfilenam": [45, 47], "causalid": [45, 47], "causalkeyword": 34, "causalkeywordid": [33, 34, 36, 45, 47], "causallabel": [45, 47], "causallist": 47, "causalnam": 45, "causalstatu": 34, "cause_effect_keywords_fil": [45, 47], "causelist": 34, "cavit": [44, 48, 51, 52], "cbl": 48, "cc": [51, 52], "ccomp": [51, 52], "cconj": [51, 52], "cd": [41, 42], "cda": 48, "cement": 48, "cent": [34, 48], "center": 48, "centrif": 48, "centrifug": 48, "centrifugalpumpful": 24, "centsindex": 34, "cert": 48, "certif": 48, "cfw": 48, "ch": [48, 49, 52], "chain": [44, 52], "cham": 48, "chamb": 48, "chamber": 48, "chamfer": 48, "chan": [44, 48], "chang": [44, 48, 53], "chann": [44, 48], "channel": 48, "chap": 48, "chapter": 48, "char": [44, 47, 55], "check": [6, 9, 10, 12, 14, 21, 34, 36, 41, 42, 44, 47, 48, 51, 52], "checkacronym": 30, "checker": [21, 44, 47], "checkertyp": 21, "chem": 48, "chemistri": 48, "child": [34, 36], "children": [36, 51], "chk": 48, "chng": 48, "chosen": 21, "circ": 48, "circl": 48, "circuit": 45, "circul": 48, "cl": 48, "class": [44, 52, 55], "classif": 48, "classifi": [41, 42], "claus": 34, "clean": [24, 33, 36, 46, 47, 49], "clean_text": 55, "cleandoc": 47, "cleanedgraph": 24, "cleanedt": 48, "cleanedtext": [43, 48], "cleanedtext2": 48, "clearanc": [43, 48], "click": [44, 55], "client": 24, "close": [8, 11], "closest": [34, 36], "clr": 48, "club": 44, "cmatcher": [4, 7, 8, 11, 13], "cmu": 48, "cndct": 48, "cntl": 48, "cntmnt": 48, "cntmt": 48, "cntrl": 48, "cntrld": 48, "code": [30, 40], "coef": 48, "coeff": 48, "coeffici": 48, "cogliati": 56, "coher": [40, 50], "coil": 45, "col": [45, 47, 48], "collect": [21, 34, 36], "collectcauseeffects": 34, "collectextactedcaus": 34, "collects": 36, "color": [28, 30], "column": [45, 47, 48, 52], "columnnam": 36, "com": [16, 18, 24, 44, 53, 55], "comb": 48, "combin": 48, "come": [4, 6, 7, 9, 10, 12, 14, 44], "comm": 48, "comma": [24, 47], "comment": [44, 55], "common": 21, "commun": 48, "comp": [48, 52], "comp1": 24, "comp2": 24, "comp3": 24, "compact": 51, "compani": 51, "comparison": 18, "compat": 55, "compd": 36, "complet": 24, "compon": [5, 24, 28, 51, 52], "composit": [48, 55], "compound": [36, 51, 52], "comput": [16, 18, 19, 48, 54], "conc": 48, "concent": 48, "concentr": 48, "concept": 19, "concern": [44, 55], "concr": 48, "concret": 48, "cond": 48, "conda": [41, 42], "condit": [44, 45], "conduct": [21, 48], "config": [0, 2, 4, 7, 8, 9, 10, 11, 13, 14, 45, 47], "configfilenam": 1, "congjian": 56, "conj": [28, 51, 52], "conjectur": [4, 33, 34, 36, 46, 47], "conjecture_ent": 4, "conjectureent": [0, 8, 11, 13, 15], "conjunct": 36, "conjunctlist": 36, "conn": 48, "connect": 48, "connetgraph": 24, "conscienc": [44, 55], "consequ": [44, 45, 48, 51, 52], "consid": 18, "const": 48, "constant": [19, 48], "construct": [16, 18, 19], "constructsemanticvector": [18, 19], "constructsemanticvectorusingdisambiguatedsynset": 19, "constructsimilarityvectorpawarmagomethod": 16, "constructsynsetordervector": 19, "constructwordordervector": 18, "cont": 48, "contain": [0, 18, 21, 24, 28, 34, 36, 43, 44, 48], "content": [43, 55], "context": [18, 21], "contextualspellcheck": [40, 41, 42, 47, 50], "conting": 43, "continu": 48, "contribut": [18, 19, 45], "contributor": 40, "control": [45, 48], "conveni": 55, "convert": [18, 47, 53, 54], "convertsentstosynset": [18, 54], "convertsentstosynsetswithdisambigu": [18, 54], "converttosynset": 18, "copi": [40, 46, 55], "coref": 52, "coref_chain": [51, 52], "corefer": [5, 52], "corefere": [5, 41, 42, 52], "coreferee_model_en": [41, 42], "corefereebrok": [51, 52], "corner": 48, "corp": 51, "corpora": [41, 42], "corpu": [16, 18], "correct": [21, 40, 50], "correctli": 47, "correpond": 18, "correpos": 24, "correspod": 21, "correspond": [18, 21, 24, 43, 44], "cosine_lesk": [16, 18], "could": [44, 48], "count": [16, 18], "countri": 51, "coupl": 48, "cover": 48, "cp": [41, 42], "cr": 48, "crac": 48, "crack": [44, 48], "crash": 53, "creat": [0, 5, 20, 21, 24, 28, 30, 32, 33, 34, 35, 36, 40, 41, 42, 54, 55], "create_conjecture_compon": 4, "create_emergent_act": 6, "create_general_compon": 7, "create_location_compon": 8, "create_phrase_matcher_compon": 9, "create_simple_matcher_compon": 10, "create_temporal_attribute_compon": 11, "create_temporal_relation_compon": 13, "create_unit_compon": 14, "createpattern": [0, 27], "createtextacynormalizefunct": 21, "createtextacyremovefunct": 21, "createtextacyreplacefunct": 21, "crnr": 48, "croot": 34, "csv": 24, "ct": 48, "ctmt": 48, "ctr": 48, "ctrl": 48, "cultur": 53, "curli": [47, 55], "curr": 55, "curr_text": 55, "currency_symbol": [21, 44, 47, 55], "current": [5, 24, 28, 48, 52, 53], "custom": [5, 28, 36], "customent": 36, "customlabel": [5, 52], "custompip": 52, "custompipelinecompon": [0, 15, 49], "customtoken": 28, "cvr": 48, "cw": [35, 48], "cwd": [43, 44, 45, 46, 47, 48, 49, 54], "cws_compon": [46, 49], "cws_entity_rul": 46, "cycl": 45, "cyl": 48, "cylind": 48, "d": [12, 32, 43, 45, 46, 47, 48], "dackar": [0, 38, 42, 43, 44, 45, 46, 47, 48, 49, 54], "dackar_lib": [41, 42, 45, 48, 51, 54], "dai": [12, 44, 48], "data": [21, 24, 28, 34, 36, 40, 44, 48, 52], "databas": 21, "datafram": [21, 28, 52], "dataframeent": 36, "dataframerel": 36, "dataset": [33, 35], "datefmt": [45, 46, 47], "datepattern": 12, "datetimerecogn": 53, "debug": [45, 47], "dec": [12, 48], "decemb": 48, "decid": 51, "decomposit": 55, "decon": 48, "decontamin": 48, "def": [48, 51, 52], "default": [52, 55], "defin": [30, 46, 47, 49], "definit": [44, 48, 55], "deflect": [6, 9, 10, 12, 14, 44], "deg": 48, "degr": 48, "degrad": [44, 48, 51, 52], "degre": 44, "del": [44, 55], "delta": [18, 19, 54], "demin": 48, "deminer": 48, "demo": [40, 50], "dep": [33, 34, 36, 51, 52], "dep_": [51, 52], "dep_pars": [49, 51, 52], "depart": 48, "depend": [28, 34, 36, 40, 44, 47, 52], "dependencypars": [49, 51, 52], "depress": 48, "depressur": 48, "dept": 48, "depth": [18, 19], "dereferenc": 52, "descr": 48, "descreas": 19, "describ": 28, "descript": [24, 48], "design": [24, 48], "desir": [43, 44], "det": [5, 48, 51, 52], "deten": 48, "detens": 48, "determ": 48, "determin": [18, 21, 48, 52], "dev": 2, "develop": [24, 40], "dewild": [44, 55], "df": [5, 28, 52], "dgarrett622": 21, "dia": 48, "diagram": 24, "diagramnam": 24, "diam": 48, "diamet": 48, "diaph": 48, "diaphragm": 48, "dict": [18, 20, 21, 24, 28, 35, 36], "dictionari": [20, 21, 24, 36, 43], "did": 44, "diego": 56, "differ": 40, "digit": 28, "dii": 48, "dir": 48, "direct": [34, 55], "directli": [21, 55], "director": 48, "disabl": 45, "disambigu": [18, 19, 54], "disambiguationmethod": 16, "disambiguationsimmethod": 18, "disch": 48, "discharg": 48, "discnt": 48, "disconnect": 48, "discov": 48, "discoveri": 48, "disp": 48, "displ": 48, "displac": 48, "displaci": [43, 46, 49, 51, 52], "displayn": [28, 52], "distanc": 19, "distil": 48, "dn": 48, "do": [33, 34, 36, 40, 43, 48, 55], "dobj": [33, 34, 36, 51, 52], "doc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 28, 34, 36, 43, 45, 46, 49, 51, 52, 53, 55], "doc1": 51, "doc2": 51, "document": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 34, 36, 53], "doe": [48, 53], "dollar": 53, "doubl": [44, 55], "dowload": [41, 42], "downcom": 48, "download": 40, "downpip": 48, "doz": 48, "dozen": 48, "dp": 48, "drain": 48, "draw": 48, "drn": 48, "dropna": [45, 47], "dru": 44, "dscnct": 48, "dscnt": 48, "due": [44, 45, 48, 51, 52], "dump": 45, "dumpnodesedgesfil": 24, "duplic": [9, 10, 18, 48], "dure": [6, 9, 10, 12, 14, 44], "duti": 45, "dwg": 48, "dwncmr": 48, "e": [18, 19, 24, 47, 52], "e08d": 43, "each": [21, 48, 55], "easier": 51, "easiest": 56, "east": 48, "econ": 48, "econom": 48, "edg": 28, "edge_color": 30, "eff": 48, "effect": [19, 34, 36, 47], "effectlist": 34, "effici": 48, "either": [28, 35, 36, 45], "el": [44, 55], "elaps": 48, "elec": 48, "electr": [45, 48], "elem": 48, "elem1": 33, "elem2": 33, "element": [24, 48], "elemlist": 33, "elev": 48, "els": 52, "elv": 48, "em": 55, "email": [21, 44, 47], "email_text": 55, "emb": 48, "embed": 24, "embent": 24, "embrittl": 48, "emerg": 48, "emergentact": 6, "emergentactivityent": [0, 15], "emoji": [21, 44, 47, 53], "emoji_text": 55, "emploi": [18, 21], "emrg": 48, "en": [41, 42, 43, 44, 45, 48, 49, 51, 52, 54], "en_core_web_lg": [41, 42, 43, 45, 46, 47, 49, 51, 52, 53], "en_core_web_sm": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14], "end": [28, 36, 43, 51, 52], "energ": 45, "eng": 48, "engin": [45, 48], "englishlemmat": [49, 51, 52], "engr": 48, "engrg": 48, "enity_rul": 49, "enough": [6, 9, 10, 12, 14, 44, 51], "ent": [33, 34, 36, 45, 46, 47, 49, 51, 52], "ent_id_": 46, "ent_iob_": 52, "ent_typ": 52, "ent_type_": [51, 52], "enth": 34, "entid": [26, 33, 34, 35, 36, 45, 46, 47, 49], "entidlist": [46, 49], "entiti": [5, 9, 10, 24, 26, 28, 30, 33, 34, 36, 46, 49, 52], "entity_fil": [45, 47], "entity_rul": [49, 51, 52], "entity_text": 46, "entityfil": [45, 47], "entitylist": [45, 47], "entitynod": 24, "entityrecogn": 51, "entityrul": [4, 7, 8, 11, 13, 36, 51, 52], "entlabel": [26, 46, 47, 49], "entlist": [28, 34, 36], "entri": 45, "enttyp": 36, "enumer": 52, "env": [45, 48, 51, 54], "environ": [48, 51], "eq": 48, "eql": 48, "equal": [44, 48, 55], "equip": 48, "equiv": 48, "equival": [48, 55], "erect": 43, "error": [46, 49], "esf": 48, "esp": 48, "especi": 48, "est": [44, 48, 55], "establ": 48, "establish": 48, "estim": [18, 48], "et": [44, 48, 55], "eta": 48, "etc": [32, 48], "etcetera": 48, "even": [44, 55], "event": 45, "everi": 48, "everyth": [44, 55], "evid": 48, "ew": 48, "exampl": [24, 30, 36, 40, 47, 50, 55], "except": 36, "excess": [44, 48, 51, 52], "exchang": 48, "excit": [44, 55], "excit\u00e9": [44, 55], "exclprepo": [33, 34, 35, 36], "exclud": [33, 34, 35, 36, 45, 46, 47], "exec": 48, "execut": 48, "exess": 44, "exist": [20, 36], "exlcud": 36, "exp": 19, "expand": [5, 20, 21, 52], "expandedtext": [20, 21], "expandent": [5, 52], "expans": 5, "experienc": [6, 9, 10, 12, 14, 44], "expl": 48, "explan": 48, "explos": 51, "exponenti": 19, "express": [21, 34, 36], "ext": 48, "extend": [5, 28, 36, 45, 47, 52], "extens": [5, 52], "extern": [24, 30, 47, 48], "extract": [24, 30, 33, 34, 35, 36], "extract_person_org": 51, "extractcausalreldep": 33, "extracthealthstatu": [34, 35], "extractinform": [33, 34, 35, 36], "extractlemma": [28, 36], "extractreldep": [33, 34, 35], "extractstatu": 33, "f": [44, 48, 52, 53, 55], "factor": [19, 48], "fail": [13, 30, 44, 45, 48, 51, 52], "failur": [13, 44, 45, 48, 51, 52], "faint": 44, "fals": [9, 10, 16, 18, 19, 21, 28, 34, 36, 44, 45, 46, 47, 51, 52, 55], "fam": 48, "famil": 48, "familiar": 48, "fanci": [44, 55], "far": 48, "fast": [44, 45, 47, 55], "fat": 48, "fatigu": 48, "fdwtr": 48, "feb": [12, 48], "februari": [24, 32, 48], "feed": 48, "feedwat": 48, "few": 48, "fifti": [44, 53], "fig": 48, "figur": 48, "file": [24, 30, 36, 47, 48], "filenam": [24, 26, 30, 36, 48], "fillet": 48, "filter": 36, "filterwarn": [43, 44, 46], "find": [21, 36], "find_tempor": 12, "findhealthstatu": [34, 36], "findleftsubj": 36, "findobj": 36, "findoptimalopt": 21, "findrightkeyword": 36, "findrightobj": 36, "findsubj": 36, "findverb": 36, "fine_grain": 51, "first": [5, 16, 18, 19, 21, 34, 36, 52, 53], "firstdeponli": [34, 36], "fit": [21, 48], "fitt": 48, "fixm": 43, "fl": 48, "flang": 48, "flg": 48, "flng": 48, "flnge": 48, "float": [16, 18, 19, 47, 53], "floor": 48, "flow": [6, 9, 10, 12, 14, 44, 48, 51, 52], "flower": 54, "fluid": 48, "flw": 48, "fnm": 45, "fo": 48, "fob": 48, "follow": [8, 13, 21, 45, 47, 55], "foo": [44, 55], "foret": [44, 55], "forg": 41, "fork": 40, "form": [24, 28, 30, 44, 47, 55], "format": [45, 46, 47, 55], "forti": [44, 53], "for\u00eat": [44, 55], "found": [40, 44, 48, 51, 52, 54], "foundat": 48, "four": [44, 45, 53], "fourth": 53, "frac": 53, "fraction": 53, "fractional_list": 53, "fractionals_list": 53, "fragment": [44, 55], "frame": [28, 52], "frameworkdir": [43, 44, 45, 46, 47, 48, 49, 54], "francisco": 36, "free": 48, "freq": 48, "frequenc": [18, 21, 48], "fridai": [44, 55], "from": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 24, 36, 40, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55], "fsbw": 48, "ft": [45, 47], "ftg": 48, "ftp": 48, "fuel": 48, "full": [21, 47, 48], "funct": 48, "function": [21, 33, 36, 45, 47, 48, 49, 51, 52], "functionlist": 21, "functool": 55, "funni": [44, 55], "fuse": 45, "fut": 48, "futur": 48, "fuz": 45, "fv304": 24, "fw": 48, "g": [19, 24, 48], "galv": 48, "galvan": 48, "garcon": [44, 55], "gar\u00e7on": [44, 55], "gaug": [44, 48, 51, 52], "gd": 24, "gen": 48, "gener": [0, 7, 18, 19, 21, 24, 28, 33, 34, 35, 36, 43, 48, 49, 52], "general_ent": 7, "generalent": [0, 15, 49], "generateabbrdict": 21, "generatepattern": [26, 28], "generatepatternlist": [28, 45, 46, 47, 49], "geo": 48, "geog": 48, "geographi": 48, "get": [18, 20, 34, 36, 52, 53, 56], "get_pip": 52, "getabbrevi": [20, 43, 48], "getamod": 36, "getamodonli": 36, "getcompoundonli": 36, "getconjunct": 36, "getcusto": 36, "getcwd": [43, 44, 45, 46, 47, 48, 49, 54], "getentid": 5, "gethealthstatusforobj": 34, "gethealthstatusforpobj": 34, "gethealthstatusforsubj": 34, "getindex": 36, "getkeyword": 36, "getleftssc": 34, "getlogg": [46, 49, 52], "getmisspelledword": [21, 44, 47], "getnbor": 36, "getonlyword": 32, "getpattern": 26, "getphras": 36, "getrightssc": 34, "getshortacronym": 32, "getsscent": 34, "getstatusforobj": 36, "getstatusforpobj": 36, "getstatusforsubj": 36, "github": [16, 18, 53, 56], "given": [16, 18, 19, 21, 28, 34, 36], "gloss": 48, "glossari": 48, "gn": 48, "go": [44, 55], "got": [44, 55], "gov": [48, 56], "govern": 48, "govt": 48, "gpe": [36, 51], "graph": [24, 30], "ground": 48, "group": 34, "grow": 40, "gt": [49, 51, 52, 55], "gz": 41, "h": [19, 32, 45, 46, 47, 48, 55], "ha": [18, 19, 36, 44, 48, 51, 52], "had": [44, 45, 51], "half": 53, "hand": 48, "handl": [20, 21, 33, 44, 47], "handleabbrevi": 21, "handleabbreviationsdict": 21, "handleinvalids": 33, "handler": [40, 50], "handlevalids": 33, "happen": 44, "hard": 21, "hardwar": 48, "has_extens": 52, "has_pip": 51, "hash_text": 55, "hashtag": [21, 44, 47], "have": [16, 19, 21, 24, 33, 40, 44, 45, 48, 53], "hd": 48, "he": [20, 51], "head": [36, 44, 48, 51, 55], "headent": 36, "health": [33, 34, 35, 36, 47], "healthstatu": [34, 47], "heat": 48, "heater": 48, "hello": [10, 44, 52, 55], "helloworld": 52, "help": [40, 56], "her": 20, "here": [5, 18, 21, 44, 47, 52, 55], "hex": 48, "hexagon": 48, "hi": [20, 48, 51], "hierarch": 19, "high": [16, 45, 48], "higher": 18, "him": 20, "hist": 48, "histor": 48, "hole": 48, "holidai": 51, "honest": [44, 55], "hor": 48, "horiz": 48, "horizont": 48, "hour": [43, 45, 48], "how": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 40, 44, 55], "hp": 48, "hr": [43, 48], "ht": 48, "html": [30, 44, 45, 48, 54], "html_tag": [21, 44, 47, 55], "html_text": 55, "htr": 48, "http": [16, 18, 24, 43, 44, 45, 48, 53, 54, 55], "human": 48, "hundr": [44, 53], "hw": 48, "hx": 48, "hyd": 48, "hydr": 48, "hydraul": 48, "hydrogen": 48, "hyphen": 28, "hyphen_text": 55, "hyphenated_word": [21, 43, 44, 47, 55], "i": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 24, 28, 30, 33, 36, 40, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56], "iaw": 48, "ican": [44, 55], "id": [4, 5, 7, 8, 11, 13, 24, 28, 45, 46, 47, 48, 49, 52], "identifi": [18, 19, 21, 24, 30, 34, 36, 45], "identifybestsimilarsynsetfromsynset": 19, "identifybestsimilarsynsetpair": 18, "identifybestsimilarwordfromwordset": 18, "identifybestsynset": 18, "identifycauseeffectforattr": 34, "identifycauseeffectforclausemodifi": 34, "identifycauseeffectfornsuj": 34, "identifynounandverbforcomparison": 18, "identifywo": 43, "idx": 36, "ieee": 18, "ieeexplor": 18, "ig": 53, "ignor": [43, 44, 46, 53], "ignore_list": 53, "ijkl": 43, "iloc": 47, "im13": 45, "imit": 48, "imp": 48, "impel": [44, 48, 51, 52], "imperfect": 48, "impf": 48, "implement": 48, "import": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 24, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55], "importerror": 53, "impr": 48, "improv": [40, 48], "inbd": 48, "inboard": 48, "inc": 51, "includ": [28, 34, 36, 44], "includepunct": [28, 52], "ind": 48, "indef": 48, "indefinit": 48, "indent": [48, 52], "index": [18, 19, 28, 34, 36, 40, 46, 49, 52], "indic": [24, 36, 48], "indir": 48, "indirect": 48, "induct": 48, "indust": 48, "industr": 48, "industri": [48, 54], "inf": 48, "infinit": 48, "infl": 48, "influenc": 48, "info": [18, 46, 47, 52], "infocontentnorm": [16, 18], "inform": [18, 19, 24, 33, 34, 35, 36, 47], "initcoref": [5, 52], "initi": [5, 52], "inj": 48, "inject": 48, "inl": 56, "innosl": 24, "inop": [44, 48, 51, 52], "inoper": 45, "inorg": 48, "inorgan": 48, "input": [47, 48, 55], "inq": 48, "inquiri": 48, "insp": 48, "inspec": 48, "inspect": [44, 48, 51, 52], "inst": 48, "instal": [40, 46, 48, 49], "installing_nltk_data": [41, 42], "instanc": 28, "instl": 48, "instr": 48, "instruct": 48, "instrument": 48, "insul": [43, 48], "int": [16, 18, 19, 28, 34, 36, 47, 48, 53, 55], "integr": 51, "interj": 48, "interject": 48, "intern": [45, 47, 48], "intersect": 48, "intl": 48, "intro": 48, "introd": 48, "introduct": 48, "inv": 48, "invert": 48, "investig": 45, "involv": 40, "io": [43, 44, 45, 48, 54], "iobj": [33, 36], "iprogress": [45, 48, 54], "ipython": 51, "ipywidget": [45, 48, 54], "is_digit": 43, "is_punct": [10, 43, 52], "isconjectur": 36, "islt": 48, "isneg": 36, "iso": [43, 48], "isol": 48, "ispass": 36, "issu": [40, 44, 53, 56], "issubel": 33, "isupd": 52, "isvalidcausal": [34, 36], "isvalidkeyword": 36, "item": 44, "item1": [44, 55], "item2": [44, 55], "item3": [44, 55], "item4": [44, 55], "item5": [44, 55], "item6": [44, 55], "item7": [44, 55], "item8": [44, 55], "iter": 52, "its": [18, 21, 24], "itself": 18, "j": [44, 54, 55, 56], "j08k": 43, "jaidevd": 53, "jan": [12, 48], "jannuari": 48, "jcn": [18, 19], "jcn_similar": 16, "join": [43, 44, 45, 46, 47, 48, 49, 52, 54], "joint": [18, 19, 48], "jointsyn": 19, "jointsynset": 19, "jointsynsetlist": 18, "jointword": [18, 19], "jointwordlist": 18, "jointwordsynset": 19, "joshua": 56, "json": 46, "jsp": 18, "jt": 48, "jul": 12, "jump": [34, 36], "jun": 12, "junc": 48, "junction": 48, "jupyt": [45, 46, 48, 49, 51, 52, 54], "k": 28, "keep": [5, 6, 9, 10, 12, 14, 28, 44], "kei": [43, 44, 48], "keyword": [34, 35, 36, 47], "kj": 48, "know": [44, 55], "knowledge_graph": [0, 2], "ktype": [35, 36], "kw": 36, "kwarg": [26, 33, 34, 35, 36], "la": [44, 55], "lab": 48, "label": [4, 5, 7, 8, 9, 10, 11, 13, 14, 26, 28, 36, 45, 46, 47, 49, 51, 52, 53], "label_": [46, 51, 52], "laboratori": 48, "lack": 44, "laek": 44, "lammat": [28, 36], "lang": [49, 51, 52], "languag": [24, 28, 40, 46, 47, 51, 52, 53], "latest": [43, 44], "layer": 19, "lch": [18, 19], "lch_similar": 16, "le": [44, 55], "lead": [5, 51, 52], "leak": [48, 51, 52], "leakag": 44, "learn": [41, 42, 44, 55], "left": [34, 36, 48, 51, 52], "lemma": [28, 45, 46, 47, 49, 52], "lemma_": [51, 52], "lemmalist": 36, "lemmat": [49, 51, 52], "lemvar": 28, "len": [47, 51, 52, 54], "length": [18, 19, 48], "less": [18, 19], "letter": 28, "level": [45, 46, 47, 48], "levelnam": [45, 46, 47], "lf": 48, "lg": 48, "lh": 48, "li": 18, "lib": [45, 48, 51, 54], "librari": [21, 40, 46, 47, 48, 55], "life": 45, "lifecycl": [24, 48], "lift": 45, "light": 44, "like": [4, 6, 7, 9, 10, 12, 14, 32, 44, 48, 51, 52, 55], "limit": [45, 48], "lin": [18, 19], "line": 48, "link": [24, 30], "linkent": 24, "linknod": 24, "links2opm": 30, "linktombsemodel": 24, "list": [16, 18, 19, 21, 24, 28, 30, 33, 34, 35, 36, 43, 44, 46, 48, 53, 54, 55, 56], "listid": 24, "literartur": 21, "ll": 51, "lm": 48, "lml": 24, "lml_id": 24, "lmlgraph": 24, "lmlobject": 24, "lmlparser": [0, 25], "ln": 48, "lo": 48, "load": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 43, 46, 49, 51, 52, 53], "locat": [8, 21, 34], "location_ent": 8, "locationent": [0, 15], "log": [18, 33, 46, 47, 49, 52], "log_format": 16, "logger": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 28, 32, 33, 34, 35, 36, 49, 52], "lolol": [44, 55], "lololol": [44, 55], "long": [44, 55], "longer": 54, "look": 18, "lookup": [5, 52], "loss": 45, "lot": 53, "love": 51, "low": [44, 45, 48], "lower": [4, 7, 8, 10, 11, 13, 18, 19, 28, 36, 43, 47, 48, 52], "lp": 48, "lt": [49, 51, 52, 55], "lvl": 48, "lwr": 48, "m": [41, 42, 43, 45, 46, 47, 48], "mach": 48, "machin": [40, 48], "made": [6, 9, 10, 12, 14, 44, 51], "mag": 48, "magn": 48, "magnet": 48, "mai": [12, 30, 40, 44, 45, 47, 55], "mail": 56, "mailto": [44, 55], "main": [43, 44, 45], "maint": 48, "mainten": 48, "maintenan": 48, "maj": 48, "major": 48, "make": [21, 48, 51], "make_pipelin": 55, "man": 48, "manag": [48, 51, 52], "mandd": [5, 20, 21, 24, 28, 30, 32, 33, 34, 35, 36], "mandelli": 56, "manual": [41, 42, 45, 48, 51], "manufactur": 48, "mar": 12, "march": [5, 20, 28, 34, 35], "masonri": 48, "match": [28, 33, 34, 35, 36, 43, 52], "match_id": [28, 43], "matcheds": [33, 34, 35], "matcher": [6, 9, 10, 12, 14, 28, 33, 34, 35, 36, 43, 46, 52], "materi": 48, "matl": 48, "matplotlib": [41, 42, 46], "matter": [44, 55], "max": 48, "max_similar": [16, 18], "maximum": [16, 18, 48], "maxn": [44, 47, 55], "mbp": 48, "mbse": [0, 23], "mbw": 48, "me": 20, "mea": 48, "mean": [21, 48], "measur": 48, "measurem": 48, "mech": 48, "mechan": [44, 48], "meet": 48, "mem": 48, "memori": 48, "merg": [5, 51], "merge_ent": 51, "mergeentitieswithsameid": 5, "mergephras": 5, "messag": [16, 45, 46, 47], "meta": 52, "metal": 48, "metallurgi": 48, "meter": 44, "meth": 48, "method": [5, 16, 18, 19, 21, 24, 30, 35, 36, 48, 54], "mf": 48, "mfd": 48, "mfg": 48, "mfr": 48, "mgmt": 48, "mgt": 48, "miedo": [44, 55], "might": 21, "mild": 48, "million": 53, "min": 48, "miniconda3": [45, 48, 51, 54], "minimum": 48, "misc": 48, "miscellan": 48, "misspel": [21, 47], "misspelledword": 47, "mistak": 44, "mix": 21, "mkdir": [41, 42], "mngmnt": 48, "mngmt": 48, "mngt": 48, "mntnc": 48, "mod": 48, "mode": 48, "model": [24, 28, 30, 40, 45, 46, 51, 52], "modelresult": 53, "modif": 48, "modifi": [34, 44, 47], "modul": [40, 46, 49], "mom": [44, 48, 55], "moment": 48, "monei": 53, "monoton": 19, "month": 12, "mop": 48, "more": [19, 21], "most": [21, 44], "motor": [44, 46, 48, 49, 51], "mow": 48, "mrp": 48, "mtg": 48, "mtr": 48, "much": [44, 55], "multilin": 12, "multipl": [21, 40, 55], "multpl": 21, "my": [20, 44, 55], "mycorp": 51, "n": [18, 41, 42, 43, 44, 48, 51, 52, 53, 55], "name": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 24, 28, 36, 43, 44, 45, 46, 47, 49, 52, 53, 55], "nat": 48, "natur": [47, 48, 53], "nbor": [36, 51], "nc": 48, "ncm": 48, "ncr": 48, "nd": 12, "ne": 48, "necessari": 51, "need": [5, 21, 28, 36, 40, 47, 51, 52], "neg": [36, 48, 51, 52], "negat": [33, 36, 46, 47], "negation_text": 46, "neo4j": 24, "ner": [5, 49, 51, 52], "net": [19, 48], "network": 48, "networkx": [24, 30, 41, 42], "neuralcoref": 52, "new": [9, 10, 28, 48, 52], "newdoc": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14], "newent": 52, "newlist": 48, "next": [44, 53, 55], "next1": 53, "nfc": 55, "nfd": 55, "nfkc": [44, 47, 55], "nfkd": 55, "nine": [44, 53], "nino": [44, 55], "ni\u00f1o": [44, 55], "nl": 48, "nlp": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 23, 33, 34, 35, 36, 43, 46, 49, 51, 52, 53], "nlp_config": 1, "nlp_util": [0, 27, 45, 46, 47, 49], "nlpconfig": [1, 45, 47], "nltk": [18, 40], "nltk_data": [41, 42], "nltkdownload": 42, "nnp": 51, "no_list": 53, "node": 24, "node_color": 30, "nois": [6, 9, 10, 12, 14, 44, 51], "nom": 48, "nomin": 48, "non": 53, "nonconform": 48, "none": [4, 7, 8, 9, 10, 11, 13, 14, 18, 21, 24, 26, 28, 30, 33, 34, 35, 36, 45, 47, 52, 55], "nonlinear": 19, "norm": 48, "norm_ent": 51, "normal": [5, 21, 45, 48, 52], "normd": 48, "norment": [5, 51, 52], "north": 48, "not_acronym": 20, "note": [21, 44, 48, 53], "notebook": [40, 44], "notebook_tqdm": [45, 48, 54], "notic": [44, 48, 51, 52], "noun": [5, 18, 51, 52], "nov": [12, 48], "novemb": 48, "now": 47, "noz": 48, "nozzl": 48, "np": [19, 46, 48, 49], "npation": [44, 55], "npr": 48, "nsubj": [33, 34, 36, 51, 52], "nsubjpass": [33, 34, 36, 51, 52], "nt": 48, "nuc": 48, "nucl": 48, "nuclear": 48, "nueralcoef": 51, "num": [0, 23, 51, 52], "num_text": 55, "number": [16, 18, 21, 44, 45, 47, 48], "numberrecogn": 53, "numberwithunitrecogn": 53, "numer": [21, 41, 42, 47, 48], "numerizerdoc": 47, "numpi": [18, 19, 41, 42, 46, 48, 49], "nw": 48, "nworld": [44, 55], "o": [43, 44, 45, 46, 47, 48, 49, 52, 54], "ob": 48, "obj": [33, 36, 48], "obj_ent": [33, 35], "object": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 24, 26, 28, 30, 33, 34, 35, 36, 48, 49, 51], "objectlist": 30, "obl": [33, 36], "observ": [44, 48], "obsrv": 48, "occ": 48, "occa": 48, "occasion": 48, "occur": 18, "occurr": 48, "oct": [12, 48], "octagon": 48, "octob": 21, "od": 48, "off": 44, "oil": [44, 46, 48, 49], "ol": [44, 55], "omg": [44, 55], "one": [16, 18, 19, 21, 44, 47, 53], "onli": [18, 21, 24, 30, 32, 43, 44, 47, 55], "oo": 48, "op": [43, 44, 48], "open": [6, 9, 10, 12, 14, 44, 45, 47, 48, 56], "openpyxl": [41, 42], "oper": [33, 44, 45, 48, 51, 52, 55], "operatorshiftlog": 33, "operatorshiftlogsprocess": [0, 37], "opg": 33, "opgh0248": 43, "opl": 30, "oplentitypars": 30, "oplpars": [0, 24, 31, 45, 46, 47], "opltextpars": 30, "opm": [0, 23, 45, 46, 47, 49], "opmgraph": 30, "opmobject": [30, 45, 46, 47], "opp": 48, "oppos": 48, "oprd": [33, 36, 51, 52], "opt": 48, "optim": 19, "optimalopt": 21, "option": [12, 21, 43, 44, 48, 51, 55], "ord": 48, "order": [16, 18, 19, 34, 35, 44, 48], "ordered": 34, "ordi": 53, "ordin": [12, 53], "ordinal_list": 53, "ordinaltonumb": 12, "org": [16, 18, 44, 48, 51, 55], "organ": [36, 48], "orig": [48, 53, 55], "origin": [24, 48, 53, 55], "original_lesk": [16, 18], "otbd": 48, "other": [16, 30, 44], "otherwis": 48, "our": 20, "out": [18, 24, 30, 36, 44, 48, 52, 55], "outboard": 48, "outer": 48, "output": 48, "output_causal_effect_fil": 47, "output_health_status_fil": 47, "over": [34, 36, 52, 53], "overcurr": 45, "overh": 45, "overwork": 54, "ow": [44, 55], "p": [44, 55], "p1": [46, 49], "pack": 48, "packag": [40, 45, 48, 51, 53, 54, 55], "page": [0, 40], "pair": [18, 19, 34], "panda": [21, 28, 41, 42, 45, 46, 47, 48, 49, 52], "panel": 45, "parab": 48, "parabol": 48, "parallel": 48, "param": 24, "paramdict": 16, "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 24, 28, 32, 33, 34, 35, 36, 55], "pardir": [43, 44, 45, 46, 47, 48, 49, 54], "parent": 36, "pars": [24, 30, 40], "parseassetent": 24, "parseentitydescript": 24, "parselinkent": 24, "parser": [49, 51, 52], "part": [5, 48, 51, 52], "partial": 55, "particl": [5, 51, 52], "pass": [33, 44, 47, 55], "passiv": 36, "password": [44, 55], "past": [44, 51], "past_aux": 51, "path": [1, 18, 19, 43, 44, 46, 48, 49, 54], "path_similar": 16, "pathlength": 19, "pation": [44, 55], "patt": 48, "pattern": [4, 7, 8, 11, 13, 26, 28, 36, 43, 48, 49, 51, 52], "patternlist": 36, "patterns": [46, 47, 49], "patternscaus": [45, 47], "patternsopm": 45, "pc": 48, "pcd": 48, "pck": 48, "pcomp": [51, 52], "pd": [45, 46, 47, 48, 49, 52], "pdf": 16, "peopl": [40, 44, 55], "per": 48, "perf": 48, "perform": [18, 19, 21, 30, 43, 44, 47, 48, 51], "perfrm": 48, "perh": 48, "perhap": 48, "period": 48, "perma": 48, "perman": 48, "person": [48, 51], "person_ent": 51, "peter": 51, "pfc": 48, "pfr": 44, "phone": 44, "phone_numb": [21, 44, 47, 55], "phone_text": 55, "phrase": [5, 36], "phrase_entity_match": 9, "phraseentitymatch": [0, 15], "phraselist": 9, "pictograph": 55, "piec": 48, "pin": 48, "pinguino": [44, 55], "ping\u00fcino": [44, 55], "pip": [41, 42, 46, 49], "pipe": [28, 48, 49, 51, 52], "pipelin": [0, 2, 21, 28, 34, 36, 40, 49, 50, 51], "pipeline_list": 55, "pitch": 48, "pl": 48, "plan": 48, "plant": [48, 54], "platform": 53, "pleas": [41, 45, 46, 47, 48, 49, 54], "plm": 48, "plotdag": 28, "plt": 46, "plur": 48, "plural": 48, "pm1": [46, 49], "pm_disambigu": 16, "pmatcher": [6, 9, 10, 12], "pmp": 48, "pn": 48, "po": [18, 34, 36, 47, 48, 52], "pobj": [33, 34, 36, 51, 52], "poi": 48, "point": [40, 48], "pool": 18, "poor": 44, "pop": 48, "popul": 24, "popular": 48, "pos_": [51, 52], "pos_tag": 18, "posit": 48, "posn": 48, "possibl": [4, 7, 21, 48], "post": [43, 44], "postprocess": 44, "pour": [44, 55], "power": [44, 45, 48, 51, 52], "pr": 51, "pract": 48, "practic": 48, "pre": [5, 48, 52], "pred": [36, 48], "predic": [33, 34, 35, 36, 48], "predict": 48, "predsynonym": [33, 34, 35, 36], "pref": 48, "prefix": 48, "preload": 28, "prep": [48, 51, 52], "prepar": 48, "prepend": 47, "prepocessor": 47, "preposit": [33, 34, 35, 36], "preprocess": [0, 22, 33, 36, 40, 43, 48, 50], "preprocessor": [21, 43, 44], "preprocessordefaultlist": 21, "preprocessordefaultopt": 21, "preprocessorlist": [21, 43, 44, 47], "preprocessornam": 21, "preprocessoropt": [21, 43, 44, 47], "press": 48, "pressur": [44, 48, 51, 52], "presur": 44, "pretti": [28, 51, 52], "pretty_represent": [51, 52], "prevent": 45, "previou": [5, 52], "prevtoken": 52, "prfr": [44, 48], "principl": [44, 55], "print": [24, 28, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55], "printdeptre": [28, 52], "printonfil": 24, "printrecurs": 52, "prob": 48, "probab": 48, "probabl": 48, "probl": 48, "problem": 48, "problemat": 55, "proc": 55, "process": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 24, 28, 30, 33, 34, 35, 36, 48, 51, 52, 55], "processlist": 30, "procobj": [33, 36], "product": 48, "prog": 48, "progress": 48, "project": [40, 41, 42, 53, 56], "pron": 52, "prop": 48, "propag": [5, 52], "propagateenttyp": [5, 52], "properti": [48, 51], "propn": [51, 52], "propos": 16, "protocol": 48, "provid": [18, 20, 21, 24, 36, 53], "prox": 48, "proxim": [44, 48], "ptnlist": 28, "puddl": [44, 48], "pull": [40, 51], "pump": [6, 9, 10, 12, 13, 14, 44, 46, 48, 49, 51, 52], "pump_compon": [45, 47], "punc_text1": 55, "punc_text2": 55, "punc_text3": 55, "punct": [51, 52], "punctuact": 28, "punctuat": [21, 43, 44, 47], "puncuat": 47, "punkt": [41, 42], "purif": 48, "put": 30, "pwr": 48, "py": [42, 45, 48, 51, 54], "pydant": 40, "pylab": 46, "pyplot": 46, "pysbd": [5, 41, 42], "pysbdsentenceboundari": 5, "pyspellcheck": [41, 42], "python": [41, 42, 55], "python3": [45, 48, 51, 54], "pywsd": [18, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54], "pzr": 48, "qc": 48, "qnty": 48, "qty": 48, "qualiti": 48, "quantiti": 48, "quantulum3": [41, 42], "quarter": [44, 53], "que": [44, 55], "question": 24, "quot": [44, 55], "quotation_mark": [21, 43, 44, 47, 55], "quote_text": 55, "qu\u00e9": [44, 55], "r": [41, 42, 44, 45, 47, 52, 55], "rad": 48, "radiat": 48, "radiu": 48, "rain": [44, 55], "rang": [47, 54], "rather": 44, "rattl": [6, 9, 10, 12, 14, 44], "ravel": [45, 47], "raw": [44, 55], "raw_text": 44, "rcp": [44, 48, 51, 52], "rcparam": 46, "rd": [12, 48], "re": [18, 19, 46, 48, 51, 52], "rea": 48, "reach": [44, 55], "reactor": [45, 48], "read": [36, 48], "read_csv": [45, 47], "read_excel": 48, "readfil": 26, "readthedoc": [43, 44, 45, 48, 54], "real_burton_dewild": [44, 55], "reason": [44, 48, 55], "rec": 48, "recirc": 48, "recircul": 48, "recogn": [5, 21, 52], "recognit": 51, "recognizers_date_tim": 53, "recognizers_numb": 53, "recognizers_number_with_unit": 53, "recognizers_sequ": 53, "recognizers_text": 53, "recomb": 48, "recombin": 48, "recommend": 45, "rect": 48, "rectangular": 48, "recurs": [5, 36, 52], "red": [43, 48], "reduc": 48, "reduct": [44, 48, 51, 52], "ref": [18, 48, 52], "ref_ent": 52, "ref_n": [5, 52], "ref_t": [5, 52], "ref_t_": 52, "refer": [48, 52], "refr": 48, "reftoken": 52, "refurb": 48, "refurbish": 48, "regen": 48, "regener": 48, "regex": 43, "regist": 48, "regr": 48, "regress": 48, "reinf": 48, "reinforc": 48, "reinst": 48, "reinstal": 48, "rel": 48, "relabel": [9, 10], "relai": 45, "relat": [33, 34, 35, 36], "relcl": 52, "releas": [43, 48], "reli": 21, "reload_ext": 46, "remov": [5, 18, 21, 24, 28, 32, 43, 47, 48, 52], "remove_extens": 52, "remove_pip": [49, 51, 52], "removeacronym": 30, "removebracket": 47, "removepunctu": 47, "removerep": 47, "remv": 48, "render": [45, 46, 49, 51, 52], "rep": 48, "repack": 48, "repair": 43, "repck": 48, "repeat": 47, "repeating_char": [21, 44, 47, 55], "repeating_text1": 55, "repeating_text2": 55, "repeating_text3": 55, "repeating_text4": 55, "repeating_text5": 55, "repect": 19, "repl": 55, "replac": [9, 10, 21, 43, 47, 48], "report": [40, 48], "repositori": 40, "repres": [24, 34, 36], "rept": 48, "req": 48, "reqd": 48, "request": [36, 40], "requir": [24, 40, 43, 44, 46, 48, 49], "res_similar": 16, "research": 48, "reservoir": 48, "reset": [20, 33, 34, 35, 36, 43, 46, 48], "resetpipelin": [28, 49, 52], "resolut": [5, 52], "resolv": [5, 51, 52], "resourc": 48, "respond": [44, 51], "resrvr": 48, "result": [5, 45, 52], "reterm": 48, "retermin": 48, "retest": 48, "retriev": 47, "return": [5, 16, 18, 19, 20, 21, 24, 28, 30, 32, 33, 34, 35, 36, 51, 52], "returnacronym": 30, "returnattributelist": 30, "returnent": 24, "returngraph": [24, 30], "returnlistid": 24, "returnobjectlist": 30, "returnprocesslist": 30, "returnsexternallink": 30, "rev": 48, "reveal": [44, 45, 48, 51, 52], "revenu": 53, "revers": 34, "reviel": 44, "review": 44, "revis": 48, "rh": 48, "right": [34, 36, 47, 48, 51, 52], "rl": 48, "rm": 48, "rmv": 48, "rmve": 48, "rnd": 48, "room": [45, 48], "root": [34, 36, 47, 48, 51, 52], "rootcaus": 34, "round": [47, 48, 55], "row": [48, 52], "rplc": 48, "rplce": 48, "rsvr": 48, "rule": [33, 34, 35, 36, 52], "rulebasedmatch": [0, 37, 45, 47], "ruler": [51, 52], "run": [41, 42], "ruptur": [44, 48, 51, 52], "rx": 48, "safeguard": 45, "safeti": [6, 9, 10, 12, 14, 44, 45, 48], "same": 5, "san": 36, "save": 24, "saw": 53, "scaf": 48, "scaff": 48, "scaffold": 48, "scale": [19, 48], "scalingdeptheffect": 19, "sched": 48, "schedul": 48, "scheme": 45, "scienc": 24, "scikit": [41, 42], "score": [18, 19], "screen": [30, 36, 46, 48, 49], "screw": 48, "script": 42, "scrn": 48, "sdcr": 45, "se": [44, 55], "search": [21, 34, 36, 40], "sec": [43, 44, 45, 46, 47, 48, 49, 54], "second": [16, 18, 19, 53, 54], "sect": 48, "section": [43, 44, 48, 55], "secur": 48, "see": [21, 24, 30, 43, 44, 45, 48, 53, 54, 55], "seem": [4, 6, 7, 9, 10, 12, 14, 44, 53], "sel": 48, "select": [34, 48], "selectvalid": 34, "selent": 34, "self": [24, 30, 35, 36], "semant": [16, 18, 19], "semantic_similarity_synset": [16, 18, 19], "semanticsimilaritysent": 18, "semanticsimilaritysynset": 19, "semanticsimilaritysynsetlist": 19, "semanticsimilarityusingdisambiguatedsynset": 19, "semanticsimilarityword": 18, "semsimilar": [18, 19], "sen": 48, "sens": [18, 21], "sensemethod": [18, 54], "sensor": 48, "sent": [33, 34, 36, 46, 52, 54], "sentenc": [5, 16, 18, 21, 30, 33, 34, 35, 36, 47, 52, 54], "sentence1": 16, "sentence2": 16, "sentencea": 18, "sentenceb": 18, "sentencesensedisambigu": 18, "sentencesensedisambiguationpywsd": [18, 54], "sentencesimialritybestsens": 16, "sentencesimilar": [0, 17, 18], "sentencesimilaritypawarmagomethod": 16, "sentencesimilaritywithdisambigu": 18, "sentlist": 18, "sentsynset": [18, 54], "sep": [12, 51], "separ": [24, 30], "sept": 48, "septemb": 48, "sequenc": 36, "sequencerecogn": 53, "serial": 48, "serv": 51, "servic": 48, "set": [16, 18, 19, 24, 48, 52], "set_extens": 52, "set_index": 52, "setlevel": 46, "setparamet": 16, "seventi": [44, 53], "sever": [44, 48], "sg": 48, "sh": 48, "shaft": [4, 6, 7, 9, 10, 12, 14, 44, 48, 51, 52], "shape": 47, "shc": 48, "she": 20, "sheet": 48, "shft": 48, "shift": 33, "shiver": [44, 55], "short": 45, "shortdist": 19, "shortest": 19, "should": [19, 36, 45, 49], "show": [12, 44], "shown": 48, "shss": 48, "shutdown": 45, "shwn": 48, "side": 48, "sign": 44, "signific": 18, "sim": 48, "similar": [0, 2, 36, 40, 50], "similari": 19, "similarit": 16, "similaritymethod": 16, "simmethod": [18, 19, 54], "simpl": 53, "simple_entity_match": 10, "simple_lesk": [16, 18, 54], "simpleentitymatch": [0, 15], "simul": 48, "simutil": [0, 17, 54], "singl": [18, 24, 44, 51, 55], "sit": 48, "site": [45, 48, 51, 54], "sixti": [44, 53], "size": 48, "sk": 48, "sketch": 48, "skip": [28, 36], "skipcent": 34, "skipinitialspac": [45, 47], "skippunct": [28, 52], "sl": 52, "slight": 44, "smith": 51, "sn": 48, "so": 47, "socket": 48, "some": [40, 44], "soon": 48, "sourc": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 30, 32, 33, 34, 35, 36], "space": 52, "spaci": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 28, 34, 36, 40, 43, 46, 47, 49, 52], "spain": 51, "span": [28, 34, 36, 43, 51, 52], "spare": 48, "spec": 48, "specif": 48, "specifi": [24, 46, 48, 49, 52, 55], "specimen": 48, "spell": [21, 40, 47, 50], "spellcheck": [21, 44, 46, 47, 48, 49], "spellcorrectdoc": 47, "sperat": 47, "sphinx": 0, "spit": 34, "split": [46, 47, 48, 53, 55], "splitentsfollowingnouncaus": 34, "splittolist": [21, 48], "spre": 48, "sq": 48, "squar": [24, 43, 44, 47, 48, 55], "squash": 53, "sr2ml": 47, "src": [0, 43, 44, 45, 46, 47, 48, 49, 54], "ss": 48, "ssc": [9, 10, 14, 33, 34, 35, 36, 45, 47, 52], "ssc_entity_rul": [45, 47], "sslerror": 40, "st": [12, 48, 54], "stab": 48, "stabil": 48, "stabl": [45, 48, 54], "stackoverflow": [24, 44, 55], "stainless": 48, "stamp": 18, "stand": 48, "standard": 48, "start": [28, 34, 36, 43, 45, 51, 52], "stat": 48, "state": 45, "statement": 45, "statist": [16, 18, 48], "statu": [33, 34, 35, 36, 46, 47], "stby": 48, "std": 48, "stdrd": 48, "steam": [45, 48], "steel": 48, "steep": 48, "stem": 40, "step": [41, 42], "stk": 48, "stock": 48, "stop": [34, 36], "store": [5, 52], "stori": [44, 55], "str": [16, 18, 19, 21, 24, 28, 34, 36, 48, 53, 55], "streamhandl": [49, 52], "strength": 48, "string": [12, 18, 20, 21, 24, 28, 32, 35, 36, 46, 47, 55], "strip": [47, 48], "strk": 48, "stroke": 48, "strong": 48, "struct": 48, "structur": [5, 24, 30, 36, 45, 48, 52], "style": [46, 49, 51, 52], "su": 54, "subel": 33, "subj": [28, 33, 36, 48], "subj_ent": [33, 35], "subject": [33, 34, 35, 36, 48], "subtre": [34, 36, 51], "suct": 48, "suction": 48, "suffix": 12, "supp": 48, "suppli": [36, 44, 48, 51, 52], "support": [18, 40, 51], "suppress": 48, "sure": [48, 51], "surf": 48, "surfac": 48, "surpris": 51, "surv": 48, "survei": 48, "susp": 48, "suspens": 48, "sw": 48, "swch": 48, "switch": [43, 48], "switchyard": 48, "sy": [43, 44, 45, 46, 47, 48, 49, 54], "symm": 48, "symmetri": 48, "syn": 19, "synonym": [33, 34, 35, 36], "synset": [16, 18, 19, 54], "synseta": 19, "synsetb": 19, "synsetlist": [18, 19], "synsetlist1": 19, "synsetlist2": 19, "synsetlistsimilar": [19, 54], "synsetsa": [19, 54], "synsetsb": 19, "synsetssimilar": 19, "synsetutil": [0, 17, 54], "syst": 48, "system": [5, 13, 45, 48, 52], "t": [44, 48, 51, 52, 55], "t1": 55, "t2": 55, "t3": 55, "t4": 55, "t8": 32, "tag_": 51, "tagger": [41, 42, 49, 51, 52], "take": [18, 43, 44, 45, 46, 47, 48, 49, 53, 54], "taken": 44, "tank": 48, "tar": 41, "tc": 48, "tdp": 48, "tech": 48, "techn": 48, "technic": 48, "technol": 48, "technologi": 48, "tel": 48, "telecom": 48, "telecomm": 48, "telecommun": 48, "telephon": 48, "temp": 48, "tempor": 12, "temporal_attribut": 11, "temporal_attribute_ent": 11, "temporal_rel": 13, "temporal_relation_ent": 13, "temporalattributeent": [0, 15], "temporalen": 12, "temporalent": [0, 15], "temporalrelationent": [0, 15], "temporari": 48, "term": [9, 10], "termin": 48, "test": [6, 9, 10, 12, 14, 21, 24, 44, 48, 51, 52, 55], "teven": [44, 55], "text": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 24, 28, 33, 36, 40, 46, 48, 49, 50, 52, 53, 55], "text_fil": [45, 47], "text_list": 53, "text_process": [0, 2, 43, 44, 47, 48], "textaci": [21, 41, 42, 43, 44], "textacyin4word": [44, 55], "textacynorm": 21, "textacyremov": 21, "textacyreplac": 21, "textfil": [45, 47], "textlist": 48, "textprocess": [33, 36], "th": 12, "than": [18, 19, 44], "thd": 48, "thei": [20, 44, 48], "them": [5, 20, 30, 51], "theor": 48, "theoret": 48, "thermographi": 48, "thi": [0, 5, 18, 19, 21, 24, 30, 40, 41, 42, 44, 45, 51, 52, 55], "thick": 48, "thing": 32, "third": 53, "thk": 48, "those": 18, "thousand": [44, 53], "thread": 48, "three": [44, 53], "threshold": 21, "through": [44, 48, 55], "throwbackthursdai": [44, 55], "thru": 48, "tic": 44, "time": [40, 43, 48, 49, 50, 53], "tir": 48, "titl": [44, 55], "tk": [48, 51], "tnk": 48, "todo": 47, "tok2vec": [49, 51, 52], "token": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 28, 34, 36, 41, 42, 51, 52], "tol": 48, "toler": 48, "tolist": [45, 47], "toll": 48, "toller": 48, "toml": 1, "tomli": [41, 42], "took": [43, 44, 45, 46, 47, 48, 49, 54], "total": [18, 48], "totken": 52, "tp": 18, "tqdm": [45, 48, 54], "tqdmwarn": [45, 48, 54], "trail": [5, 51, 52], "train": 48, "tran": 48, "transact": 48, "transf": 48, "transfer": [19, 48], "transform": 48, "transl": 48, "translat": [30, 48], "transm": 48, "transmiss": 48, "transmitt": 48, "trash": [46, 49], "trav": 48, "travel": [30, 48, 51], "trblsht": 48, "tre": [44, 55], "treat": [47, 48], "treatm": 48, "treatment": 48, "tree": [28, 52], "treedist": 19, "trip": 45, "trng": 48, "troub": 48, "troubleshoot": [45, 48], "troublesom": 48, "true": [6, 7, 9, 10, 12, 14, 16, 18, 19, 20, 24, 28, 33, 34, 36, 43, 45, 46, 47, 48, 49, 51, 52, 55], "try": [41, 42, 44, 46, 49, 55], "tr\u00e8": [44, 55], "tungsten": 48, "tupl": [18, 24, 28, 33, 34, 35, 36, 51, 52, 55], "turb": 48, "turbin": [45, 48], "tw": 30, "twelv": [44, 53], "twenti": [44, 53], "twitter": [44, 55], "two": [16, 18, 19, 30, 44, 53], "two_million": 53, "tworld": [44, 55], "txt": 44, "ty": 48, "typ": 48, "type": [5, 16, 18, 19, 20, 21, 24, 28, 33, 34, 35, 36, 48, 52], "typic": 48, "typing_extens": 41, "u": [51, 55], "u200b": [44, 55], "ua": 48, "uai": 48, "ub": 48, "ucut": 48, "ufeff": [44, 55], "ugh": [44, 55], "ull": 48, "unabl": [46, 49], "under": [40, 48], "undercut": 48, "underwat": 48, "underwtr": 48, "unequ": 48, "unicod": [21, 44, 47], "unicode1_text": 55, "unicode2_text": 55, "unicode3_text": 55, "unicode4_text": 55, "unicode_emoji": 53, "unicodedata": 55, "unit": [14, 40, 46, 48, 49, 55], "unit_ent": 14, "unitent": [0, 15], "univers": 48, "unk": 48, "unkn": 48, "unknown": 48, "unkw": 48, "unkwn": 48, "unless": 48, "unnam": 47, "uno": 48, "unplug": 44, "uo": 48, "uon": 48, "up": [43, 44, 46, 47, 48, 49, 54], "updat": [20, 28, 35, 36, 45, 48, 54], "updateabbrevi": [20, 43, 48], "updateddoc": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14], "updatedword": 47, "upper": 19, "url": [21, 44, 47], "url_text": 55, "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 21, 24, 28, 34, 36, 44, 48, 52, 53, 54, 55], "user": [36, 41, 42, 44, 46, 47, 48, 49, 51, 54], "user_handl": [21, 44, 47, 55], "user_instal": [45, 48, 54], "user_text": 55, "usernam": [44, 55], "userwarn": 51, "util": [0, 2, 45, 46, 47, 49, 52], "v": 48, "vac": 48, "vacuum": 48, "valid": [34, 36], "validdisambigu": 16, "validleftssc": 34, "validrightssc": 34, "valids": 36, "validsimilar": 16, "valu": [12, 19, 45, 47, 52, 55], "valv": [6, 9, 10, 12, 14, 44, 45, 48], "var": [28, 36, 45, 48], "variabl": [24, 28, 36, 48], "varlist": 36, "vb": 48, "vbd": 51, "vbg": 51, "vector": [16, 18, 19], "vendor": 45, "vent": 48, "ventil": 48, "ver": [36, 48], "verb": [18, 36, 48, 51, 52], "veri": 51, "verif": 48, "verifi": 48, "versu": 48, "vert": 48, "vertic": 48, "vessel": 48, "vi": 48, "via": [46, 49], "vib": 48, "vibe": 48, "vibrat": [4, 6, 7, 9, 10, 12, 14, 44, 48, 51], "visibl": 44, "visual": [28, 36, 48, 51, 52], "vlv": 48, "vocab": [43, 52], "vol": 48, "volum": 48, "vrfy": 48, "vsl": 48, "w": [18, 48], "w006": 51, "wa": [20, 44, 45, 48, 51, 52, 54], "wai": [40, 48, 56], "wang": 56, "wangc": [5, 20, 21, 28, 32, 33, 34, 35, 36, 45, 48, 51, 54], "warm": [43, 44, 45, 46, 47, 48, 49, 54], "warn": [43, 44, 46, 51], "wash": 48, "washer": 48, "wast": 48, "wastag": 48, "water": 48, "wc": 48, "we": [5, 21, 47, 51, 52], "week": 48, "weight": [16, 18, 48], "weld": 48, "well": [43, 44, 45, 55], "were": [44, 48, 54], "west": 48, "wgt": 48, "what": [44, 55], "when": [18, 21, 40, 43, 44, 45], "which": [21, 24, 44, 45], "while": 19, "whitespac": [21, 43, 44, 47], "whitespace_text": 55, "whl": 42, "whomev": [44, 55], "why": [44, 55], "wife": 51, "wikipedia": [44, 55], "window": 40, "wip": 51, "wire": 48, "within": [34, 44, 48], "without": [18, 48], "wk": 48, "wn": [18, 19], "wo101": 43, "won": [44, 55], "wonder": [44, 55], "word": [16, 18, 19, 21, 32, 47, 53], "worda": 18, "wordb": 18, "wordcount": 18, "worddata": 18, "wordlist": 18, "wordnet": [16, 18, 19, 41, 42], "wordnetpathlength": 19, "wordnetsimmethod": 16, "wordord": 16, "wordordercontribut": 16, "wordordersimilaritysent": 18, "wordordersimilaritysynsetlist": 19, "wordsensedisambigu": 18, "wordset": 18, "wordssimilar": 18, "wordsynset": 19, "work": [35, 44, 48, 51, 55], "worker": 54, "workflow": [0, 2, 40, 45, 46, 50], "workflowbas": [0, 33, 34, 35, 37], "workorderprocess": [0, 37, 46], "world": [10, 44, 52, 55], "wrap": 18, "wrong": 43, "wsh": 48, "wshr": 48, "wst": 48, "wstg": 48, "wt": 48, "wth": [44, 55], "wtr": 48, "wup": [18, 19], "wup_similar": 16, "www": [44, 55], "xa0": 48, "xcomp": [51, 52], "xfer": 48, "xfmr": 48, "xfrmr": 48, "xlsx": [21, 48], "xml": [24, 47], "xmtr": 48, "xyza7148abc": 43, "y": [45, 46, 47], "yard": 48, "yd": 48, "year": [12, 48], "yield": 48, "you": [40, 44, 51, 55], "yourself": 48, "yp": 48, "yr": 48, "z": [12, 43], "za": 43, "zip": [41, 42, 53, 55]}, "titles": ["API Reference", "src.dackar.config", "src.dackar", "src.dackar.knowledge_graph", "src.dackar.pipelines.ConjectureEntity", "src.dackar.pipelines.CustomPipelineComponents", "src.dackar.pipelines.EmergentActivityEntity", "src.dackar.pipelines.GeneralEntity", "src.dackar.pipelines.LocationEntity", "src.dackar.pipelines.PhraseEntityMatcher", "src.dackar.pipelines.SimpleEntityMatcher", "src.dackar.pipelines.TemporalAttributeEntity", "src.dackar.pipelines.TemporalEntity", "src.dackar.pipelines.TemporalRelationEntity", "src.dackar.pipelines.UnitEntity", "src.dackar.pipelines", "src.dackar.similarity.SentenceSimilarity", "src.dackar.similarity", "src.dackar.similarity.simUtils", "src.dackar.similarity.synsetUtils", "src.dackar.text_processing.Abbreviation", "src.dackar.text_processing.Preprocessing", "src.dackar.text_processing", "src.dackar.utils", "src.dackar.utils.mbse.LMLparser", "src.dackar.utils.mbse", "src.dackar.utils.nlp.CreatePatterns", "src.dackar.utils.nlp", "src.dackar.utils.nlp.nlp_utils", "src.dackar.utils.num", "src.dackar.utils.opm.OPLparser", "src.dackar.utils.opm", "src.dackar.utils.utils", "src.dackar.workflows.OperatorShiftLogsProcessing", "src.dackar.workflows.RuleBasedMatcher", "src.dackar.workflows.WorkOrderProcessing", "src.dackar.workflows.WorkflowBase", "src.dackar.workflows", "src", "Contributors", "Welcome to DACKAR\u2019s documentation!", "Installation with Spacy 3.1 (Archived)", "Installation with Spacy 3.5", "Emergent Activity Analysis demo", "Preprocessing demo", "Demo for Rule Based Natural Language Processing", "&lt;no title&gt;", "Demo For NLP Workflow: Based on branch wangc/nlp", "Abbreviation handler demo", "&lt;no title&gt;", "Usage Notebooks", "Example that can be used for Relation Extraction after Named Entity Recognizer", "Custom pipelines", "numerizer Preprocessing", "Similarity analysis", "textacy Preprocessing Methods for NLP", "Support"], "titleterms": {"": 40, "0": 51, "1": [41, 45, 51], "10": 45, "103": 43, "11": 45, "2": [45, 51], "3": [41, 42, 45, 51], "4": 45, "5": [42, 45], "6": 45, "7": 45, "8": 45, "9": 45, "For": 47, "abbrevi": [20, 43, 48], "accent": 55, "access": 45, "acronym": 44, "act": 53, "activ": 43, "add": [43, 44], "addit": 44, "address": 55, "after": 51, "an": [41, 42], "analysi": [41, 42, 43, 54], "analyt": 51, "ani": 44, "api": 0, "approach": [41, 42], "archiv": 41, "argument": 53, "attribut": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 28, 32, 33, 34, 35, 36], "autocorrect": 44, "automat": 44, "base": [45, 47], "blob": 51, "blueprint": 51, "bracket": 55, "branch": 47, "bullet": 55, "can": [45, 47, 51], "causal": [45, 47], "ch12": 51, "chain": 51, "charact": [43, 55], "class": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 21, 24, 26, 30, 33, 34, 35, 36, 48], "clean": 44, "coher": 44, "com": 51, "combin": [43, 55], "config": 1, "conjectureent": 4, "content": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 30, 32, 33, 34, 35, 36, 40], "contextualspellcheck": 44, "contribut": 40, "contributor": 39, "corefere": 51, "correct": [44, 47], "creat": [45, 47], "createpattern": 26, "creation": [43, 44], "currenc": 55, "custom": 52, "custompipelinecompon": 5, "dackar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40], "data": [41, 42, 45, 47], "demo": [43, 44, 45, 47, 48], "depend": [41, 42], "develop": 56, "dictionari": 44, "differ": [41, 42], "directli": 47, "do": 44, "doc": 47, "document": 40, "download": [41, 42], "email": 55, "emerg": 43, "emergentactivityent": 6, "emoji": 55, "entiti": [45, 47, 51], "exampl": [43, 44, 51], "extenst": 53, "extract": 51, "file": 45, "find": 44, "first": 44, "found": 45, "from": [41, 42, 45, 51], "function": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 24, 28, 30, 32], "gener": 47, "generalent": 7, "get": 44, "github": 51, "handl": [43, 48, 55], "handler": 48, "hashtag": 55, "have": 41, "how": [41, 42], "html": 55, "http": 51, "hyphen": 55, "i": [41, 42], "id": 43, "import": 45, "indic": 40, "inform": 45, "initi": 47, "input": 45, "instal": [41, 42], "ipynb": 51, "issu": [41, 42], "keyword": 45, "knowledge_graph": [3, 51], "label": 43, "languag": [41, 42, 45], "librari": [41, 42], "licens": 40, "list": [45, 47, 51], "lmlparser": 24, "load": [45, 47], "locationent": 8, "log": 45, "machin": 41, "mai": 41, "mark": 55, "master": 51, "matcher": [45, 47], "mbse": [24, 25], "mention": 51, "method": 55, "misspel": 44, "model": [41, 42], "modul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 30, 32, 33, 34, 35, 36, 45, 47], "much": 51, "name": 51, "natur": 45, "navig": 51, "need": 41, "ner": 47, "nlp": [26, 27, 28, 45, 47, 55], "nlp_util": 28, "nltk": [41, 42], "normal": 55, "notebook": 50, "num": 29, "number": [43, 55], "numer": [44, 53], "operatorshiftlogsprocess": 33, "oplpars": 30, "opm": [30, 31], "option": 53, "order": 43, "other": 45, "packag": [1, 2], "pars": 41, "path": [45, 47], "pattern": 47, "perform": 54, "phone": 55, "phraseentitymatch": 9, "pipelin": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 43, 44, 52, 55], "point": 55, "preprocess": [21, 41, 44, 47, 53, 55], "process": 45, "provid": [45, 47], "punctuat": 55, "pydant": 41, "pyspellcheck": 44, "python": 51, "quotat": 55, "raw": [45, 47], "read": [45, 47], "recogn": 51, "refer": 0, "relat": 51, "remov": 55, "repeat": 55, "replac": 55, "requir": [41, 42, 47, 51], "resolut": 51, "rule": [45, 47], "rulebasedmatch": 34, "sentencesimilar": 16, "set": [45, 47], "setup": 44, "similar": [16, 17, 18, 19, 41, 42, 54], "simpleentitymatch": 10, "simutil": 18, "so": 45, "some": 41, "spaci": [41, 42, 45, 51, 53], "spell": 44, "src": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "sslerror": [41, 42], "stem": 41, "string": [45, 53], "submodul": [2, 15, 17, 22, 23, 25, 27, 31, 37, 38], "support": 56, "symbol": 55, "synsetutil": 19, "tabl": 40, "tag": 55, "temporalattributeent": 11, "temporalent": 12, "temporalrelationent": 13, "text": [43, 44, 45, 47, 51], "text_process": [20, 21, 22], "textaci": 55, "thei": 51, "time": [44, 54], "unexpect": 44, "unicod": 55, "unit": 41, "unitent": 14, "up": 45, "url": 55, "us": [45, 47, 51], "usag": 50, "user": [45, 55], "util": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "variabl": 47, "wangc": 47, "welcom": 40, "were": 51, "when": [41, 42], "whitespac": 55, "window": 41, "wo": 43, "wo103": 43, "word": [44, 55], "work": 43, "workflow": [33, 34, 35, 36, 37, 44, 47], "workflowbas": 36, "workorderprocess": 35, "you": 41}})